{"version":3,"file":"230-be2f3b4b1173b5125519.js","mappings":"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","sources":["webpack://@my-react/ssr-example/./src/client/component/ThreeFiber/MultiMaterial.tsx"],"sourcesContent":["import { Canvas } from \"@my-react/react-three-fiber\";\nimport { useEffect, useMemo, useRef, useState } from \"react\";\nimport * as THREE from \"three\";\n\nimport type { ThreeElements } from \"@my-react/react-three-fiber\";\n\nconst redMaterial = new THREE.MeshBasicMaterial({ color: \"aquamarine\", toneMapped: false });\n\nfunction ReuseMaterial(props: ThreeElements[\"mesh\"]) {\n  return (\n    <mesh {...props}>\n      <sphereGeometry args={[0.25, 64, 64]} />\n      <primitive attach=\"material\" object={redMaterial} />\n    </mesh>\n  );\n}\n\nfunction TestReuse() {\n  const [okay, setOkay] = useState(true);\n\n  useEffect(() => {\n    const interval = setInterval(() => setOkay((okay) => !okay), 1000);\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <>\n      {okay && <ReuseMaterial position={[-1.5, 0, 0]} />}\n      <ReuseMaterial position={[1.5, 0, 0]} />\n    </>\n  );\n}\n\nfunction TestMultiMaterial(props: ThreeElements[\"mesh\"]) {\n  const ref = useRef<THREE.Mesh>(null!);\n  const [okay, setOkay] = useState(true);\n\n  useEffect(() => {\n    const interval = setInterval(() => setOkay((okay) => !okay), 1000);\n    return () => clearInterval(interval);\n  }, []);\n\n  useEffect(() => {\n    console.log(ref.current.material);\n  }, [okay]);\n\n  return (\n    <mesh ref={ref} {...props}>\n      <boxGeometry args={[0.75, 0.75, 0.75]} />\n      <meshBasicMaterial attach=\"material-0\" color=\"hotpink\" toneMapped={false} />\n      <meshBasicMaterial attach=\"material-1\" color=\"lightgreen\" toneMapped={false} />\n      {okay ? <meshBasicMaterial attach=\"material-2\" color=\"lightblue\" toneMapped={false} /> : <meshNormalMaterial attach=\"material-2\" />}\n      <meshBasicMaterial attach=\"material-3\" color=\"pink\" toneMapped={false} />\n      <meshBasicMaterial attach=\"material-4\" color=\"orange\" toneMapped={false} />\n      <meshBasicMaterial attach=\"material-5\" color=\"lavender\" toneMapped={false} />\n    </mesh>\n  );\n}\n\nfunction TestMultiDelete(props: ThreeElements[\"mesh\"]) {\n  const ref = useRef<THREE.Mesh>(null!);\n  const [okay, setOkay] = useState(true);\n\n  useEffect(() => {\n    const interval = setInterval(() => setOkay((okay) => !okay), 1000);\n    return () => clearInterval(interval);\n  }, []);\n\n  useEffect(() => {\n    console.log(ref.current.material);\n  }, [okay]);\n\n  return (\n    <mesh ref={ref} {...props}>\n      <boxGeometry args={[0.75, 0.75, 0.75]} />\n      <meshBasicMaterial attach=\"material-0\" color=\"hotpink\" side={THREE.DoubleSide} toneMapped={false} />\n      <meshBasicMaterial attach=\"material-1\" color=\"lightgreen\" side={THREE.DoubleSide} toneMapped={false} />\n      {okay && <meshBasicMaterial attach=\"material-2\" color=\"lightblue\" side={THREE.DoubleSide} toneMapped={false} />}\n      <meshBasicMaterial attach=\"material-3\" color=\"pink\" side={THREE.DoubleSide} toneMapped={false} />\n      <meshBasicMaterial attach=\"material-4\" color=\"orange\" side={THREE.DoubleSide} toneMapped={false} />\n      <meshBasicMaterial attach=\"material-5\" color=\"lavender\" side={THREE.DoubleSide} toneMapped={false} />\n    </mesh>\n  );\n}\n\nfunction TestMix(props: ThreeElements[\"mesh\"]) {\n  const [size, setSize] = useState(0.1);\n  const geometry = useMemo(() => new THREE.SphereGeometry(size, 64, 64), [size]);\n\n  useEffect(() => {\n    const timeout = setInterval(\n      () =>\n        setSize((s) => {\n          return s < 0.4 ? s + 0.025 : 0;\n        }),\n      1000\n    );\n    return () => clearTimeout(timeout);\n  }, []);\n\n  return (\n    <mesh args={[geometry]} {...props}>\n      <meshBasicMaterial color=\"hotpink\" toneMapped={false} />\n    </mesh>\n  );\n}\n\nexport const Exp = function Test() {\n  return (\n    <Canvas camera={{ position: [2, 2, 2] }}>\n      <TestMultiMaterial position={[0, 0, 0.5]} />\n      <TestMultiDelete position={[0, 0, -0.5]} />\n      <TestReuse />\n      <TestMix position={[0, 1, 0]} />\n    </Canvas>\n  );\n};\n"],"names":["redMaterial","THREE","color","toneMapped","ReuseMaterial","props","t0","t1","t2","$","_c","Symbol","for","_jsx","args","attach","_jsxs","_objectSpread","children","TestReuse","t3","t4","_useState","useState","_useState2","_slicedToArray","okay","setOkay","interval","setInterval","_temp","clearInterval","useEffect","position","_Fragment","okay_0","TestMultiMaterial","t5","t6","t7","t10","t8","t9","t11","ref","useRef","_useState3","_useState4","_temp2","console","log","current","material","TestMultiDelete","_useState5","_useState6","_temp3","side","TestMix","_useState7","_useState8","size","setSize","geometry","timeout","_temp4","clearTimeout","s","Exp","Canvas","camera"],"sourceRoot":""}