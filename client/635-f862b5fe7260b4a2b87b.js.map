{"version":3,"file":"635-f862b5fe7260b4a2b87b.js","mappings":"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","sources":["webpack://@my-react/ssr-example/./src/client/component/ThreeFiber/Reparenting.tsx"],"sourcesContent":["import { Canvas, createPortal } from \"@my-react/react-three-fiber\";\nimport { useCallback, useEffect, useReducer, useState } from \"react\";\n\nimport type * as THREE from \"three\";\n\nfunction Icosahedron() {\n  const [active, setActive] = useState(false);\n  const handleClick = useCallback(() => setActive((state) => !state), []);\n  return (\n    <mesh scale={active ? [2, 2, 2] : [1, 1, 1]} onClick={handleClick}>\n      <icosahedronGeometry args={[1, 0]} />\n      <meshNormalMaterial />\n    </mesh>\n  );\n}\n\nfunction RenderToPortal({ targets }: { targets: THREE.Group[] }) {\n  const [target, toggle] = useReducer((state) => (state + 1) % targets.length, 0);\n\n  useEffect(() => {\n    const interval = setInterval(toggle, 1000);\n    return () => clearInterval(interval);\n  }, [targets]);\n\n  return <>{createPortal(<Icosahedron />, targets[target])}</>;\n}\n\nexport const Exp = function Group() {\n  const [ref1, set1] = useState<THREE.Group>(null!);\n  const [ref2, set2] = useState<THREE.Group>(null!);\n\n  console.log(\"rendering Group\", ref1, ref2);\n\n  return (\n    <Canvas onCreated={() => console.log(\"onCreated\")}>\n      <group>\n        <group ref={set1 as any} position={[-2, 0, 0]} />\n        <mesh position={[0, 0, 0]}>\n          <sphereGeometry args={[0.5, 16, 16]} />\n          <meshNormalMaterial />\n        </mesh>\n        <group ref={set2 as any} position={[2, 0, 0]} />\n        {ref1 && ref2 && <RenderToPortal targets={[ref1, ref2]} />}\n      </group>\n    </Canvas>\n  );\n};\n"],"names":["Icosahedron","t0","$","_c","_useState","useState","_useState2","_slicedToArray","active","setActive","Symbol","for","_temp","t1","t2","t3","t4","handleClick","_jsx","args","_jsxs","scale","children","state","RenderToPortal","targets","length","_useReducer","useReducer","_useReducer2","target","toggle","interval","setInterval","clearInterval","useEffect","t6","t7","t5","createPortal","_Fragment","Exp","_useState3","_useState4","ref1","set1","_useState5","_useState6","ref2","set2","console","log","ref","position","Canvas","onCreated","_temp2"],"sourceRoot":""}