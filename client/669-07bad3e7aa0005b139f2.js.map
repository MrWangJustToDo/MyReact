{"version":3,"file":"669-07bad3e7aa0005b139f2.js","mappings":"mNAKMA,EAAc,CAClBC,MAAO,OACPC,OAAQ,OAGJC,EAAS,WAAH,IACgCC,EAMxCC,EAPQC,GAAAC,EAAAA,EAAAA,GAAA,GACVC,GAAgBC,EAAAA,EAAAA,QAAA,MAYP,OAZiCH,EAAA,KAAAI,OAAAC,IAAA,8BAEjCP,EAAA,WACHI,EAAOI,UACTJ,EAAOI,QAAAC,SAAAC,EAAPN,EAAOI,QAAAC,SAAAC,EAAA,IAAmB,EAE7BR,EAAA,GAAAF,GAAAA,EAAAE,EAAA,IAJDS,EAAAA,EAAAA,IAASX,GAIPE,EAAA,KAAAI,OAAAC,IAAA,8BAGAN,GAAAW,EAAAA,EAAAA,MAAA,QAAWR,IAAAA,EAAOS,SAAA,EAChBC,EAAAA,EAAAA,KAAA,eAAmBC,KAAS,WAC5BD,EAAAA,EAAAA,KAAA,4BACKZ,EAAA,GAAAD,GAAAA,EAAAC,EAAA,GAHPD,CAGO,EAILe,EAAgB,WAAH,IAAAhB,EAAAE,GAAAC,EAAAA,EAAAA,GAAA,GAKX,OALWD,EAAA,KAAAI,OAAAC,IAAA,8BACjBP,GAAAc,EAAAA,EAAAA,KAAA,OAAYlB,MAAWA,EAAAiB,UACrBC,EAAAA,EAAAA,KAACG,EAAAA,GAAM,CAAAJ,UACLC,EAAAA,EAAAA,KAACf,EAAM,QAELG,EAAA,GAAAF,GAAAA,EAAAE,EAAA,GAJNF,CAIM,EAGFkB,EAAc,WAAH,IAAAlB,EAAAE,GAAAC,EAAAA,EAAAA,GAAA,GAQT,OARSD,EAAA,KAAAI,OAAAC,IAAA,8BACfP,GAAAc,EAAAA,EAAAA,KAAA,OAAYlB,MAAWA,EAAAiB,UACrBC,EAAAA,EAAAA,KAACG,EAAAA,GAAM,CAAAJ,UACLD,EAAAA,EAAAA,MAAA,QAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,eAAmBC,KAAS,WAC5BD,EAAAA,EAAAA,KAAA,gCAGAZ,EAAA,GAAAF,GAAAA,EAAAE,EAAA,GAPNF,CAOM,EAGKmB,EAAM,eACqCnB,EAAAC,EAIhDmB,EAAAC,EAIeC,EACcC,EAVlBrB,GAAAC,EAAAA,EAAAA,GAAA,GACjBqB,GAAsCC,EAAAA,EAAAA,WAAA,GAAeC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAAI,EAAAF,EAAA,GAAAG,EAAAH,EAAA,GAU7C,OAV8CxB,EAAA,KAAAI,OAAAC,IAAA,8BAE5CP,EAAA,WACR8B,YAAA,kBAAiBD,GAAe,EAAK,OAAM,EAC1C5B,EAAA,GAAEC,EAAA,GAAAF,EAAAE,EAAA,GAAAD,IAAAD,EAAAE,EAAA,GAAAD,EAAAC,EAAA,KAFL6B,EAAAA,EAAAA,WAAU/B,EAEPC,GAAGC,EAAA,KAAAI,OAAAC,IAAA,8BAGQa,EAAA,CAAAvB,MAAS,OAAMC,OAAU,QACnCuB,GAAAP,EAAAA,EAAAA,KAACE,EAAa,IAAGd,EAAA,GAAAkB,EAAAlB,EAAA,GAAAmB,IAAAD,EAAAlB,EAAA,GAAAmB,EAAAnB,EAAA,IAAAA,EAAA,KAAA0B,GAChBN,EAAAM,IAAed,EAAAA,EAAAA,KAACI,EAAW,IAAGhB,EAAA,GAAA0B,EAAA1B,EAAA,GAAAoB,GAAAA,EAAApB,EAAA,GAAAA,EAAA,KAAAoB,GAFjCC,GAAAX,EAAAA,EAAAA,MAAA,OAAYoB,MAAAZ,EAAiCP,SAAA,CAC3CQ,EACCC,KACGpB,EAAA,GAAAoB,EAAApB,EAAA,GAAAqB,GAAAA,EAAArB,EAAA,GAHNqB,CAGM,C","sources":["webpack://@my-react/ssr-example/./src/client/component/ThreeFiber/MultiRender.tsx"],"sourcesContent":["import { useFrame, Canvas } from \"@my-react/react-three-fiber\";\nimport { useEffect, useRef, useState } from \"react\";\n\nimport type * as THREE from \"three\";\n\nconst CanvasStyle = {\n  width: \"100%\",\n  height: \"50%\",\n};\n\nconst Object = () => {\n  const meshRef = useRef<THREE.Mesh>(null!);\n\n  useFrame(() => {\n    if (meshRef.current) {\n      meshRef.current.rotation.y += 0.03;\n    }\n  });\n\n  return (\n    <mesh ref={meshRef}>\n      <boxGeometry args={[1, 1, 1]} />\n      <meshNormalMaterial />\n    </mesh>\n  );\n};\n\nconst SpinningScene = () => (\n  <div style={CanvasStyle}>\n    <Canvas>\n      <Object />\n    </Canvas>\n  </div>\n);\n\nconst StaticScene = () => (\n  <div style={CanvasStyle}>\n    <Canvas>\n      <mesh>\n        <boxGeometry args={[1, 1, 1]} />\n        <meshNormalMaterial />\n      </mesh>\n    </Canvas>\n  </div>\n);\n\nexport const Exp = function App() {\n  const [secondScene, setSecondScene] = useState(false);\n\n  useEffect(() => {\n    setTimeout(() => setSecondScene(true), 500);\n  }, []);\n\n  return (\n    <div style={{ width: \"100%\", height: \"100%\" }}>\n      <SpinningScene />\n      {secondScene && <StaticScene />}\n    </div>\n  );\n};\n"],"names":["CanvasStyle","width","height","Object","t0","t1","$","_c","meshRef","useRef","Symbol","for","current","rotation","y","useFrame","_jsxs","children","_jsx","args","SpinningScene","Canvas","StaticScene","Exp","t2","t3","t4","t5","_useState","useState","_useState2","_slicedToArray","secondScene","setSecondScene","setTimeout","useEffect","style"],"sourceRoot":""}