{"version":3,"file":"__refresh__-45b600cf6b97f04de8b8.js","mappings":"mJA2CA,SAASA,EAAaC,GACpB,MACU,eAARA,GACQ,YAARA,GACQ,YAARA,GAEQ,WAARA,CAEJ,CAmBA,SAASC,EAA4BC,GACnC,IAAMC,EAAY,GAElB,GADAA,EAAUC,KAAKC,EAAeC,gBAAgBJ,IACzB,MAAjBA,GAAkD,WAAzBK,EAAOL,GAGlC,OAAOC,EAET,IAAK,IAAMH,KAAOE,EAChB,IAAIH,EAAaC,GAAjB,CAGA,IAAMQ,EAAcN,EAAcF,GAClCG,EAAUC,KAAKJ,GACfG,EAAUC,KAAKC,EAAeC,gBAAgBE,GAH7C,CAKH,OAAOL,CACT,CAuCA,IAAIM,GAAoB,EAyCxBC,EAAe,CACbC,+BAnHF,SAAwCT,EAAoBU,GAE1D,GADAP,EAAeQ,SAASX,EAAeU,EAAW,cAC7B,MAAjBV,GAAkD,WAAzBK,EAAOL,GAKpC,IAAK,IAAMF,KAAOE,EAChB,IAAIH,EAAaC,GAAjB,CAGA,IAAMQ,EAAcN,EAAcF,GAC5Bc,EAASF,EAAW,cAAgBZ,EAC1CK,EAAeQ,SAASL,EAAaM,EAHpC,CAKL,EAqGEC,uBAhFF,SAAgCb,GAC9B,GAAIG,EAAeW,sBAAsBd,GACvC,OAAO,EAET,GAAqB,MAAjBA,GAAkD,WAAzBK,EAAOL,GAElC,OAAO,EAET,IAAIe,GAAa,EACbC,GAA0B,EAC9B,IAAK,IAAMlB,KAAOE,EAEhB,GADAe,GAAa,GACTlB,EAAaC,GAAjB,CAGA,IAAMQ,EAAcN,EAAcF,GAC7BK,EAAeW,sBAAsBR,KACxCU,GAA0B,EAH3B,CAMH,OAAOD,GAAcC,CACvB,EA4DEC,qCA1DF,SAA8CC,EAAsBC,GAClE,IAAMC,EAAgBrB,EAA4BmB,GAC5CG,EAAgBtB,EAA4BoB,GAClD,GAAIC,EAAcE,SAAWD,EAAcC,OACzC,OAAO,EAET,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAcC,OAAQC,IACxC,GAAIH,EAAcG,KAAOF,EAAcE,GACrC,OAAO,EAGX,OAAO,CACT,EA+CExB,4BAA6BA,EAC7ByB,eA5CF,WAME,SAASC,EAAeC,GACtB,MAAkB,SAAXA,C,CAGT,SAASC,IACPpB,GAAoB,EACpB,IACEJ,EAAeyB,qBAChB,CAAC,MAAOC,GACPC,QAAQC,KAAK,gFAAkFF,EAChG,C,CAfCtB,IAGJA,GAAoB,EAehBkB,EAAeO,EAAOC,IAAIP,UAE5BQ,QAAQC,UAAUC,MAAK,WACrBT,GACF,IAYFK,EAAOC,IAAII,kBARW,SAAhBC,EAAiBZ,GACjBD,EAAeC,KACjBM,EAAOC,IAAIM,oBAAoBD,GAC/BX,IAEJ,IAIF,GCtJAxB,EAAeqC,qBAAqBC,MAGpCA,KAAKC,iBAAmBlC,EAGxBiC,KAAKE,kCAAoC,SAAUC,GACjD,IAAMC,EAAiBJ,KAAKK,aACtBC,EAAiBN,KAAKO,aAS5B,OAPAP,KAAKK,aAAe,SAAUG,EAAMC,GAClC/C,EAAeQ,SAASsC,EAAML,EAAkB,IAAMM,EACxD,EACAT,KAAKO,aAAe7C,EAAegD,oCAI5B,WACLV,KAAKK,aAAeD,EACpBJ,KAAKO,aAAeD,CACtB,CACF,C,kBChCEf,EAAAA,I,i9GCAAA,EAAOoB,QAAU,EAAjBpB,M","sources":["webpack://@my-react/ssr-example/../../src/internal/helpers.ts","webpack://@my-react/ssr-example/../../src/runtime.ts","webpack://@my-react/ssr-example/../../packages/myreact-refresh-next/runtime.js","webpack://@my-react/ssr-example/../../packages/myreact-refresh/runtime.js"],"sourcesContent":["/**\n * MIT License\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n// This file is copied from the Metro JavaScript bundler, with minor tweaks for\n// webpack 4 compatibility.\n//\n// https://github.com/facebook/metro/blob/d6b9685c730d0d63577db40f41369157f28dfa3a/packages/metro/src/lib/polyfills/require.js\n\nimport RefreshRuntime from \"@my-react/react-refresh/runtime\";\n\ntype ModuleHotStatus = \"idle\" | \"check\" | \"prepare\" | \"ready\" | \"dispose\" | \"apply\" | \"abort\" | \"fail\";\n\ntype ModuleHotStatusHandler = (status: ModuleHotStatus) => void;\n\ndeclare const module: {\n  hot: {\n    status: () => ModuleHotStatus;\n    addStatusHandler: (handler: ModuleHotStatusHandler) => void;\n    removeStatusHandler: (handler: ModuleHotStatusHandler) => void;\n  };\n};\n\nfunction isSafeExport(key: string): boolean {\n  return (\n    key === \"__esModule\" ||\n    key === \"__N_SSG\" ||\n    key === \"__N_SSP\" ||\n    // TODO: remove this key from page config instead of allow listing it\n    key === \"config\"\n  );\n}\n\nfunction registerExportsForReactRefresh(moduleExports: any, moduleID: string) {\n  RefreshRuntime.register(moduleExports, moduleID + \" %exports%\");\n  if (moduleExports == null || typeof moduleExports !== \"object\") {\n    // Exit if we can't iterate over exports.\n    // (This is important for legacy environments.)\n    return;\n  }\n  for (const key in moduleExports) {\n    if (isSafeExport(key)) {\n      continue;\n    }\n    const exportValue = moduleExports[key];\n    const typeID = moduleID + \" %exports% \" + key;\n    RefreshRuntime.register(exportValue, typeID);\n  }\n}\n\nfunction getRefreshBoundarySignature(moduleExports: any): Array<unknown> {\n  const signature = [];\n  signature.push(RefreshRuntime.getFamilyByType(moduleExports));\n  if (moduleExports == null || typeof moduleExports !== \"object\") {\n    // Exit if we can't iterate over exports.\n    // (This is important for legacy environments.)\n    return signature;\n  }\n  for (const key in moduleExports) {\n    if (isSafeExport(key)) {\n      continue;\n    }\n    const exportValue = moduleExports[key];\n    signature.push(key);\n    signature.push(RefreshRuntime.getFamilyByType(exportValue));\n  }\n  return signature;\n}\n\nfunction isReactRefreshBoundary(moduleExports: any): boolean {\n  if (RefreshRuntime.isLikelyComponentType(moduleExports)) {\n    return true;\n  }\n  if (moduleExports == null || typeof moduleExports !== \"object\") {\n    // Exit if we can't iterate over exports.\n    return false;\n  }\n  let hasExports = false;\n  let areAllExportsComponents = true;\n  for (const key in moduleExports) {\n    hasExports = true;\n    if (isSafeExport(key)) {\n      continue;\n    }\n    const exportValue = moduleExports[key];\n    if (!RefreshRuntime.isLikelyComponentType(exportValue)) {\n      areAllExportsComponents = false;\n    }\n  }\n  return hasExports && areAllExportsComponents;\n}\n\nfunction shouldInvalidateReactRefreshBoundary(prevExports: unknown, nextExports: unknown): boolean {\n  const prevSignature = getRefreshBoundarySignature(prevExports);\n  const nextSignature = getRefreshBoundarySignature(nextExports);\n  if (prevSignature.length !== nextSignature.length) {\n    return true;\n  }\n  for (let i = 0; i < nextSignature.length; i++) {\n    if (prevSignature[i] !== nextSignature[i]) {\n      return true;\n    }\n  }\n  return false;\n}\n\nlet isUpdateScheduled = false;\n// This function aggregates updates from multiple modules into a single React Refresh call.\nfunction scheduleUpdate() {\n  if (isUpdateScheduled) {\n    return;\n  }\n  isUpdateScheduled = true;\n\n  function canApplyUpdate(status: ModuleHotStatus) {\n    return status === \"idle\";\n  }\n\n  function applyUpdate() {\n    isUpdateScheduled = false;\n    try {\n      RefreshRuntime.performReactRefresh();\n    } catch (err) {\n      console.warn(\"Warning: Failed to re-render. We will retry on the next Fast Refresh event.\\n\" + err);\n    }\n  }\n\n  if (canApplyUpdate(module.hot.status())) {\n    // Apply update on the next tick.\n    Promise.resolve().then(() => {\n      applyUpdate();\n    });\n    return;\n  }\n\n  const statusHandler = (status: any) => {\n    if (canApplyUpdate(status)) {\n      module.hot.removeStatusHandler(statusHandler);\n      applyUpdate();\n    }\n  };\n\n  // Apply update once the HMR runtime's status is idle.\n  module.hot.addStatusHandler(statusHandler);\n}\n\n// Needs to be compatible with IE11\nexport default {\n  registerExportsForReactRefresh: registerExportsForReactRefresh,\n  isReactRefreshBoundary: isReactRefreshBoundary,\n  shouldInvalidateReactRefreshBoundary: shouldInvalidateReactRefreshBoundary,\n  getRefreshBoundarySignature: getRefreshBoundarySignature,\n  scheduleUpdate: scheduleUpdate,\n};\n","import RefreshRuntime from \"@my-react/react-refresh/runtime\";\n\nimport RefreshHelpers from \"./internal/helpers\";\n\nexport type RefreshRuntimeGlobals = {\n  $RefreshReg$: (type: any, id: string) => void;\n  $RefreshSig$: () => (...type: any) => unknown;\n  $RefreshInterceptModuleExecution$: (moduleId: string) => () => void;\n  $RefreshHelpers$: typeof RefreshHelpers;\n};\n\ndeclare const self: Window & RefreshRuntimeGlobals;\n\n// Hook into ReactDOM initialization\nRefreshRuntime.injectIntoGlobalHook(self);\n\n// Register global helpers\nself.$RefreshHelpers$ = RefreshHelpers;\n\n// Register a helper for module execution interception\nself.$RefreshInterceptModuleExecution$ = function (webpackModuleId) {\n  const prevRefreshReg = self.$RefreshReg$;\n  const prevRefreshSig = self.$RefreshSig$;\n\n  self.$RefreshReg$ = function (type, id) {\n    RefreshRuntime.register(type, webpackModuleId + \" \" + id);\n  };\n  self.$RefreshSig$ = RefreshRuntime.createSignatureFunctionForTransform;\n\n  // Modeled after `useEffect` cleanup pattern:\n  // https://react.dev/learn/synchronizing-with-effects#step-3-add-cleanup-if-needed\n  return function () {\n    self.$RefreshReg$ = prevRefreshReg;\n    self.$RefreshSig$ = prevRefreshSig;\n  };\n};\n","\"use strict\";\n\nif (process.env.NODE_ENV === \"production\") {\n  module.exports = require(\"./dist/cjs/runtime.development\");\n} else {\n  module.exports = require(\"./dist/cjs/runtime.production\");\n}\n\n","\"use strict\";\n\nif (process.env.NODE_ENV === \"production\") {\n  module.exports = require(\"./dist/cjs/RefreshRuntime.production\");\n} else {\n  module.exports = require(\"./dist/cjs/RefreshRuntime.development\");\n}\n\n"],"names":["isSafeExport","key","getRefreshBoundarySignature","moduleExports","signature","push","RefreshRuntime","getFamilyByType","_typeof","exportValue","isUpdateScheduled","RefreshHelpers","registerExportsForReactRefresh","moduleID","register","typeID","isReactRefreshBoundary","isLikelyComponentType","hasExports","areAllExportsComponents","shouldInvalidateReactRefreshBoundary","prevExports","nextExports","prevSignature","nextSignature","length","i","scheduleUpdate","canApplyUpdate","status","applyUpdate","performReactRefresh","err","console","warn","module","hot","Promise","resolve","then","addStatusHandler","statusHandler","removeStatusHandler","injectIntoGlobalHook","self","$RefreshHelpers$","$RefreshInterceptModuleExecution$","webpackModuleId","prevRefreshReg","$RefreshReg$","prevRefreshSig","$RefreshSig$","type","id","createSignatureFunctionForTransform","exports"],"sourceRoot":""}