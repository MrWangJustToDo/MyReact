{"version":3,"file":"page-About-4d3463b0ac3fd11c0397.js","mappings":"uSAWQA,EAAWC,EAAAA,GAAXD,OAIFE,EAAO,SAAHC,GAA4D,IAAtDC,EAAID,EAAJC,KAAMC,EAAMF,EAANE,OACpBC,GAA0BC,EAAAA,EAAAA,UAASF,aAAM,EAANA,EAAQG,SAAQC,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAA5CK,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GAQtB,OANAI,EAAAA,EAAAA,YAAU,WACJR,IAAWA,EAAOS,WACpBT,EAAOG,QAAUG,EAErB,GAAG,CAACA,EAAON,IAENA,GAAWD,GAGdW,EAAAA,EAAAA,KAACC,EAAAA,EAAQ,CAACC,UAAWN,EAAOO,WAAYb,EAAOS,SAAUK,SAAU,SAACC,GAAC,OAAKR,EAASQ,EAAEC,OAAOC,QAAQ,EAACC,SAClGnB,IAJwB,IAO/B,EAEMoB,EAAyI,CAC7I,CACE,kBAAmB,uBACnB,sBAAuB,0BAEzB,CAAE,kBAAmB,mBAAoB,sBAAuB,kBAChE,CAAE,kBAAmB,iBAAkB,sBAAuB,qBAC9D,CAAE,kBAAmB,qBAAsB,sBAAuB,oBAClE,CAAE,kBAAmB,wBAAyB,sBAAuB,mBACrE,CAAE,kBAAmB,qBAAsB,sBAAuB,IAClE,CAAE,kBAAmB,uBAAwB,sBAAuB,KAGvD,SAASC,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MAETC,GAAWC,EAAAA,EAAAA,IAAW,CAAEC,YAAa,iBAArCF,OAQR,OANAf,EAAAA,EAAAA,YAAU,WAENa,EAASK,EAAAA,OAAS,IAAM,IAAHC,OAAOC,UAAY,KAE5C,GAAG,CAACP,KAGFX,EAAAA,EAAAA,KAACmB,EAAAA,EAAS,CAACC,SAAUC,EAAAA,EAAiBC,SAAS,WAAWT,OAAM,gBAAAI,OAAkBJ,EAAM,OAAML,UAC5Fe,EAAAA,EAAAA,MAACrC,EAAAA,GAAK,CACJsC,WAAYf,EACZgB,eAAgB,CACdC,QAAS,CAAEC,KAAM,IAAKC,GAAI,IAAKC,GAAI,KACnCC,QAAS,OACTC,QAAS,OACTX,SAAU,CAAEO,KAAM,MAAOE,GAAI,OAC7BG,OAAQ,YACRC,aAAc,KACdC,YAAa,mBAEfC,WAAY,CAAEF,aAAc,MAC5BG,SAAU,CACRC,SAAU,CACRC,gBAAiB,wBAEnB9B,SAAA,EAEFR,EAAAA,EAAAA,KAACf,EAAM,CACLsD,eAAgB,CACdC,UAAW,CAAEC,SAAU,SAAUC,iBAAkB,OACnDC,OAAQ,mBAEVC,UAAU,kBACVC,eAAgB,CACdL,UAAW,CAAEM,cAAe,cAC5BH,OAAQ,SAAAI,GAAkB,IAAfC,EAAQD,EAARC,SACT,OAAOhD,EAAAA,EAAAA,KAACb,EAAI,CAACE,KAAM2D,EAAU1D,OAAQ2D,EAAAA,oBAAoBD,IAC3D,MAGJhD,EAAAA,EAAAA,KAACf,EAAM,CACLsD,eAAgB,CACdC,UAAW,CAAEC,SAAU,UACvBE,OAAQ,uBAEVC,UAAU,sBACVC,eAAgB,CACdL,UAAW,CAAEM,cAAe,cAC5BH,OAAQ,SAAAO,GAAkB,IAAfF,EAAQE,EAARF,SACT,OAAOhD,EAAAA,EAAAA,KAACb,EAAI,CAACE,KAAM2D,EAAU1D,OAAQ6D,EAAAA,wBAAwBH,IAC/D,SAMZ,CAEO,IAAMI,GAAW,C","sources":["webpack://@my-react/ssr-example/./src/client/pages/About.tsx"],"sourcesContent":["import { Checkbox, Container } from \"@chakra-ui/react\";\nimport { __my_react_shared__ } from \"@my-react/react\";\nimport { __my_react_dom_shared__ } from \"@my-react/react-dom\";\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router\";\n\nimport { Table } from \"@client/component\";\nimport { CONTAINER_WIDTH } from \"@client/config/container\";\nimport { useDomSize } from \"@client/hooks\";\nimport { noBase } from \"@shared\";\n\nconst { Column } = Table;\n\ntype Source = { current: boolean; readonly?: boolean };\n\nconst Edit = ({ name, source }: { name: string; source?: Source }) => {\n  const [state, setState] = useState(source?.current);\n\n  useEffect(() => {\n    if (source && !source.readonly) {\n      source.current = state;\n    }\n  }, [state, source]);\n\n  if (!source || !name) return null;\n\n  return (\n    <Checkbox isChecked={state} isDisabled={source.readonly} onChange={(e) => setState(e.target.checked)}>\n      {name}\n    </Checkbox>\n  );\n};\n\nconst data: Array<{ \"@my-react/react\": keyof typeof __my_react_shared__; \"@my-react/react-dom\": keyof typeof __my_react_dom_shared__ | \"\" }> = [\n  {\n    \"@my-react/react\": \"enableConcurrentMode\",\n    \"@my-react/react-dom\": \"enableControlComponent\",\n  },\n  { \"@my-react/react\": \"enableDebugFiled\", \"@my-react/react-dom\": \"enableDOMField\" },\n  { \"@my-react/react\": \"enableDebugLog\", \"@my-react/react-dom\": \"enableEventSystem\" },\n  { \"@my-react/react\": \"enableLoopFromRoot\", \"@my-react/react-dom\": \"enableEventTrack\" },\n  { \"@my-react/react\": \"enableOptimizeTreeLog\", \"@my-react/react-dom\": \"enableHighlight\" },\n  { \"@my-react/react\": \"enableScopeTreeLog\", \"@my-react/react-dom\": \"\" },\n  { \"@my-react/react\": \"enablePerformanceLog\", \"@my-react/react-dom\": \"\" },\n];\n\nexport default function About() {\n  const navigate = useNavigate();\n\n  const { height } = useDomSize({ cssSelector: \".site-header\" });\n\n  useEffect(() => {\n    if (__REACT__ || !__DEVELOPMENT__) {\n      navigate(noBase ? \"/\" : `/${__BASENAME__}/`);\n    }\n  }, [navigate]);\n\n  return (\n    <Container maxWidth={CONTAINER_WIDTH} position=\"relative\" height={`calc(100vh - ${height}px)`}>\n      <Table\n        dataSource={data}\n        containerProps={{\n          padding: { base: \"2\", md: \"4\", lg: \"6\" },\n          marginX: \"auto\",\n          marginY: \"50px\",\n          maxWidth: { base: \"90%\", lg: \"80%\" },\n          border: \"1px solid\",\n          borderRadius: \"md\",\n          borderColor: \"cardBorderColor\",\n        }}\n        tableProps={{ borderRadius: \"md\" }}\n        rowProps={{\n          theadRow: {\n            backgroundColor: \"cardBackgroundColor\",\n          },\n        }}\n      >\n        <Column<(typeof data)[0]>\n          headCellRender={{\n            cellProps: { fontSize: \"1.1rem\", borderLeftRadius: \"2px\" },\n            Render: \"@my-react/react\",\n          }}\n          dataIndex=\"@my-react/react\"\n          bodyCellRender={{\n            cellProps: { textTransform: \"capitalize\" },\n            Render: ({ cellData }) => {\n              return <Edit name={cellData} source={__my_react_shared__[cellData]} />;\n            },\n          }}\n        />\n        <Column<(typeof data)[0]>\n          headCellRender={{\n            cellProps: { fontSize: \"1.1rem\" },\n            Render: \"@my-react/react-dom\",\n          }}\n          dataIndex=\"@my-react/react-dom\"\n          bodyCellRender={{\n            cellProps: { textTransform: \"capitalize\" },\n            Render: ({ cellData }) => {\n              return <Edit name={cellData} source={__my_react_dom_shared__[cellData]} />;\n            },\n          }}\n        />\n      </Table>\n    </Container>\n  );\n}\n\nexport const isStatic = true;\n"],"names":["Column","Table","Edit","_ref","name","source","_useState","useState","current","_useState2","_slicedToArray","state","setState","useEffect","readonly","_jsx","Checkbox","isChecked","isDisabled","onChange","e","target","checked","children","data","About","navigate","useNavigate","height","useDomSize","cssSelector","noBase","concat","__BASENAME__","Container","maxWidth","CONTAINER_WIDTH","position","_jsxs","dataSource","containerProps","padding","base","md","lg","marginX","marginY","border","borderRadius","borderColor","tableProps","rowProps","theadRow","backgroundColor","headCellRender","cellProps","fontSize","borderLeftRadius","Render","dataIndex","bodyCellRender","textTransform","_ref2","cellData","__my_react_shared__","_ref3","__my_react_dom_shared__","isStatic"],"sourceRoot":""}