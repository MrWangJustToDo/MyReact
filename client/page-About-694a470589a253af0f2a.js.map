{"version":3,"file":"page-About-694a470589a253af0f2a.js","mappings":"2PA8Ce,SAASA,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MAUjB,OARmBC,EAAAA,EAAAA,IAAW,CAAEC,YAAa,iBAArCC,QAERC,EAAAA,EAAAA,YAAU,WAENL,EAASM,EAAAA,OAAS,IAAM,IAAHC,OAAOC,UAAY,KAE5C,GAAG,CAACR,KAEGS,EAAAA,EAAAA,KAAA,OAAAC,SAAK,OAmDd,CAjGmBC,EAAAA,GAAXC,OAmGD,IAAMC,GAAW,C","sources":["webpack://@my-react/ssr-example/./src/client/pages/About.tsx"],"sourcesContent":["import { Checkbox, Container } from \"@chakra-ui/react\";\nimport { __my_react_shared__ } from \"@my-react/react\";\nimport { __my_react_dom_shared__ } from \"@my-react/react-dom\";\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router\";\n\nimport { Table } from \"@client/component\";\nimport { CONTAINER_WIDTH } from \"@client/config/container\";\nimport { useDomSize } from \"@client/hooks\";\nimport { noBase } from \"@shared\";\n\nconst { Column } = Table;\n\ntype Source = { current: boolean; readonly?: boolean };\n\nconst Edit = ({ name, source }: { name: string; source?: Source }) => {\n  const [state, setState] = useState(source?.current);\n\n  useEffect(() => {\n    if (source && !source.readonly) {\n      source.current = state;\n    }\n  }, [state, source]);\n\n  if (!source || !name) return null;\n\n  return (\n    <Checkbox isChecked={state} isDisabled={source.readonly} onChange={(e) => setState(e.target.checked)}>\n      {name}\n    </Checkbox>\n  );\n};\n\nconst data: Array<{ \"@my-react/react\": keyof typeof __my_react_shared__; \"@my-react/react-dom\": keyof typeof __my_react_dom_shared__ | \"\" }> = [\n  {\n    \"@my-react/react\": \"enableConcurrentMode\",\n    \"@my-react/react-dom\": \"enableControlComponent\",\n  },\n  { \"@my-react/react\": \"enableDebugFiled\", \"@my-react/react-dom\": \"enableDOMField\" },\n  { \"@my-react/react\": \"enableDebugLog\", \"@my-react/react-dom\": \"enableEventSystem\" },\n  { \"@my-react/react\": \"enableLoopFromRoot\", \"@my-react/react-dom\": \"enableEventTrack\" },\n  { \"@my-react/react\": \"enableOptimizeTreeLog\", \"@my-react/react-dom\": \"\" },\n  { \"@my-react/react\": \"enableScopeTreeLog\", \"@my-react/react-dom\": \"\" },\n  { \"@my-react/react\": \"enablePerformanceLog\", \"@my-react/react-dom\": \"\" },\n];\n\nexport default function About() {\n  const navigate = useNavigate();\n\n  const { height } = useDomSize({ cssSelector: \".site-header\" });\n\n  useEffect(() => {\n    if (__REACT__ || !__DEVELOPMENT__) {\n      navigate(noBase ? \"/\" : `/${__BASENAME__}/`);\n    }\n  }, [navigate]);\n\n  return <div>123</div>\n\n  return (\n    <Container maxWidth={CONTAINER_WIDTH} position=\"relative\" height={`calc(100vh - ${height}px)`}>\n      <Table\n        dataSource={data}\n        containerProps={{\n          padding: { base: \"2\", md: \"4\", lg: \"6\" },\n          marginX: \"auto\",\n          marginY: \"50px\",\n          maxWidth: { base: \"90%\", lg: \"80%\" },\n          border: \"1px solid\",\n          borderRadius: \"md\",\n          borderColor: \"cardBorderColor\",\n        }}\n        tableProps={{ borderRadius: \"md\" }}\n        rowProps={{\n          theadRow: {\n            backgroundColor: \"cardBackgroundColor\",\n          },\n        }}\n      >\n        <Column<(typeof data)[0]>\n          headCellRender={{\n            cellProps: { fontSize: \"1.1rem\", borderLeftRadius: \"2px\" },\n            Render: \"@my-react/react\",\n          }}\n          dataIndex=\"@my-react/react\"\n          bodyCellRender={{\n            cellProps: { textTransform: \"capitalize\" },\n            Render: ({ cellData }) => {\n              return <Edit name={cellData} source={__my_react_shared__[cellData]} />;\n            },\n          }}\n        />\n        <Column<(typeof data)[0]>\n          headCellRender={{\n            cellProps: { fontSize: \"1.1rem\" },\n            Render: \"@my-react/react-dom\",\n          }}\n          dataIndex=\"@my-react/react-dom\"\n          bodyCellRender={{\n            cellProps: { textTransform: \"capitalize\" },\n            Render: ({ cellData }) => {\n              return <Edit name={cellData} source={__my_react_dom_shared__[cellData]} />;\n            },\n          }}\n        />\n      </Table>\n    </Container>\n  );\n}\n\nexport const isStatic = true;\n"],"names":["About","navigate","useNavigate","useDomSize","cssSelector","height","useEffect","noBase","concat","__BASENAME__","_jsx","children","Table","Column","isStatic"],"sourceRoot":""}