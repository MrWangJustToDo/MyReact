{"version":3,"file":"page-Excalidraw-abf509039c2e0116a561.js","mappings":"gTASAA,EAA4BC,EAAAA,GAAQC,aAA5BC,EAAMH,EAANG,OAAQC,EAAOJ,EAAPI,QAEhBC,EAA+CC,EAAAA,EAAQJ,aAAvCK,EAAOF,EAAfF,OAA0BK,EAAQH,EAAjBD,QAEV,SAASK,EAAUC,GAA0C,IAAvCC,EAAUD,EAAVC,WAC7BC,GAAYC,EAAAA,EAAAA,MAElBC,GAA8BC,EAAAA,EAAAA,KAAkB,EAAM,KAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAApDI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAI1BI,GAA4BC,EAAAA,EAAAA,WAAmC,kBAAM,kBAAM,IAAI,KAACC,GAAAL,EAAAA,EAAAA,GAAAG,EAAA,GAAzEG,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAElBG,GAAcC,EAAAA,EAAAA,KAAkB,GAAO,IAE7CC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAK,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAxB,EAAA,OAAAsB,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAEiB,oCAAgC,OAAAH,EAAAC,EAAAG,KAArD5B,EAAUwB,EAAVxB,WAERe,GAAU,kBAAMf,CAAU,IAE1BU,GAAW,GAEXf,IAEAI,IAAW,wBAAA0B,EAAAI,OAAA,GAAAN,EAAA,KACZ,kBAXU,OAAAH,EAAAU,MAAA,KAAAC,UAAA,KAeX,OAFAZ,IAEO,WACLzB,IAEAI,GACF,CACF,GAAG,CAACY,IAEJ,IAAMsB,EAAW7B,EAAYa,EAAcd,EAE3C,OACE+B,EAAAA,EAAAA,KAACC,EAAAA,GAAG,CAACC,OAAO,QAAQC,MAAM,QAAOC,SAC9B5B,GACCwB,EAAAA,EAAAA,KAACC,EAAAA,GAAG,CAACE,MAAM,OAAOD,OAAO,OAAOG,QAAQ,OAAOC,WAAW,SAASC,eAAe,SAAQH,SAAC,iBAI3FJ,EAAAA,EAAAA,KAACnB,EAAM,CAAC2B,MAAOT,EAAW,OAAS,WAI3C,CAEO,IAAMU,EAAuC,WAIhD,MAAO,CAAEC,MAAO,CAAEzC,WAA0B,SAF1B0C,aAAaC,QAAQ,yBAI3C,EAEaC,GAAW,C","sources":["webpack://@my-react/ssr-example/./src/client/pages/Excalidraw.tsx"],"sourcesContent":["import { Box, useColorModeValue } from \"@chakra-ui/react\";\nimport { useEffect, useState } from \"react\";\n\nimport { useDebouncedState, useFoot, useIsMounted } from \"@client/hooks\";\nimport { useHead } from \"@client/hooks/useHead\";\n\nimport type { GetInitialStateType } from \"@client/types/common\";\nimport type { Excalidraw as ExcalidrawPreview } from \"@excalidraw/excalidraw\";\n\nconst { enable, disable } = useFoot.getActions();\n\nconst { enable: _enable, disable: _disable } = useHead.getActions();\n\nexport default function Excalidraw({ isDarkMode }: { isDarkMode: boolean }) {\n  const isMounted = useIsMounted();\n\n  const [loading, setLoading] = useDebouncedState(true, 3000);\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  const [Render, setRender] = useState<typeof ExcalidrawPreview>(() => () => null);\n\n  const _isDarkMode = useColorModeValue(false, true);\n\n  useEffect(() => {\n    const fetch = async () => {\n      // also have some error\n      const { Excalidraw } = await import(\"@excalidraw/excalidraw\");\n\n      setRender(() => Excalidraw);\n\n      setLoading(false);\n\n      disable();\n\n      _disable();\n    };\n\n    fetch();\n\n    return () => {\n      enable();\n\n      _enable();\n    };\n  }, [setLoading]);\n\n  const darkMode = isMounted ? _isDarkMode : isDarkMode;\n\n  return (\n    <Box height=\"100vh\" width=\"100vw\">\n      {loading ? (\n        <Box width=\"100%\" height=\"100%\" display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\n          Loading ...\n        </Box>\n      ) : (\n        <Render theme={darkMode ? \"dark\" : \"light\"} />\n      )}\n    </Box>\n  );\n}\n\nexport const getInitialState: GetInitialStateType = () => {\n  if (__CLIENT__) {\n    const colorMode = localStorage.getItem(\"chakra-ui-color-mode\");\n\n    return { props: { isDarkMode: colorMode === \"dark\" ? true : false } };\n  }\n};\n\nexport const isStatic = true;\n"],"names":["_useFoot$getActions","useFoot","getActions","enable","disable","_useHead$getActions","useHead","_enable","_disable","Excalidraw","_ref","isDarkMode","isMounted","useIsMounted","_useDebouncedState","useDebouncedState","_useDebouncedState2","_slicedToArray","loading","setLoading","_useState","useState","_useState2","Render","setRender","_isDarkMode","useColorModeValue","useEffect","fetch","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$import","_context","prev","next","sent","stop","apply","arguments","darkMode","_jsx","Box","height","width","children","display","alignItems","justifyContent","theme","getInitialState","props","localStorage","getItem","isStatic"],"sourceRoot":""}