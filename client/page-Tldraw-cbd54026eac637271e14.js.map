{"version":3,"file":"page-Tldraw-cbd54026eac637271e14.js","mappings":"qSAQe,SAASA,EAAMC,GAA0C,IAAvCC,EAAUD,EAAVC,WACvBC,GAAWC,EAAAA,EAAAA,IAAW,CAAEC,YAAa,iBAArCF,OAEFG,GAAYC,EAAAA,EAAAA,MAElBC,GAA8BC,EAAAA,EAAAA,WAAS,GAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAE1BI,GAA4BL,EAAAA,EAAAA,WAA+B,kBAAM,kBAAM,IAAI,KAACM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAArEE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAElBG,GAAcC,EAAAA,EAAAA,KAAkB,GAAO,IAE7CC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAK,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA1B,EAAA,OAAAwB,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACa,gEAAwB,OAAAH,EAAAC,EAAAG,KAAzC9B,EAAM0B,EAAN1B,OAERiB,GAAU,kBAAMjB,CAAM,IAEtBa,GAAW,GAAO,wBAAAc,EAAAI,OAAA,GAAAN,EAAA,KACnB,kBANU,OAAAH,EAAAU,MAAA,KAAAC,UAAA,KAQXZ,GACF,GAAG,IAEH,IAAMa,EAAW5B,EAAYY,EAAchB,EAE3C,OACEiC,EAAAA,EAAAA,KAACC,EAAAA,GAAG,CAACjC,OAAM,gBAAAkC,OAAkBlC,EAAM,OAAOmC,SAAU1B,EAAU,WAAa,QAAS2B,IAAKpC,EAAS,KAAMqC,MAAM,QAAOC,SAClH7B,GACCuB,EAAAA,EAAAA,KAACC,EAAAA,GAAG,CAACI,MAAM,OAAOrC,OAAO,OAAOuC,QAAQ,OAAOC,WAAW,SAASC,eAAe,SAAQH,SAAC,iBAI3FN,EAAAA,EAAAA,KAACnB,EAAM,CAACkB,SAAUA,EAAUW,UAAQ,EAACC,WAAS,EAACC,QAAM,EAACC,UAAQ,KAItE,CAEO,IAAMC,EAAuC,WAIhD,MAAO,CAAEC,MAAO,CAAEhD,WAA0B,SAF1BiD,aAAaC,QAAQ,yBAI3C,EAEaC,GAAW,C","sources":["webpack://@my-react/ssr-example/./src/client/pages/Tldraw.tsx"],"sourcesContent":["import { Box, useColorModeValue } from \"@chakra-ui/react\";\nimport { useEffect, useState } from \"react\";\n\nimport { useDomSize, useIsMounted } from \"@client/hooks\";\n\nimport type { GetInitialStateType } from \"@client/types/common\";\nimport type { Tldraw as TldrawProview } from \"@tldraw/tldraw\";\n\nexport default function Tldraw({ isDarkMode }: { isDarkMode: boolean }) {\n  const { height } = useDomSize({ cssSelector: \".site-header\" });\n\n  const isMounted = useIsMounted();\n\n  const [loading, setLoading] = useState(true);\n\n  const [Render, setRender] = useState<typeof TldrawProview>(() => () => null);\n\n  const _isDarkMode = useColorModeValue(false, true);\n\n  useEffect(() => {\n    const fetch = async () => {\n      const { Tldraw } = await import(\"@tldraw/tldraw\");\n\n      setRender(() => Tldraw);\n\n      setLoading(false);\n    };\n\n    fetch();\n  }, []);\n\n  const darkMode = isMounted ? _isDarkMode : isDarkMode;\n\n  return (\n    <Box height={`calc(100vh - ${height}px)`} position={loading ? \"relative\" : \"fixed\"} top={height + \"px\"} width=\"100vw\">\n      {loading ? (\n        <Box width=\"100%\" height=\"100%\" display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\n          Loading ...\n        </Box>\n      ) : (\n        <Render darkMode={darkMode} showMenu showTools showUI showZoom />\n      )}\n    </Box>\n  );\n}\n\nexport const getInitialState: GetInitialStateType = () => {\n  if (__CLIENT__) {\n    const colorMode = localStorage.getItem(\"chakra-ui-color-mode\");\n\n    return { props: { isDarkMode: colorMode === \"dark\" ? true : false } };\n  }\n};\n\nexport const isStatic = true;\n"],"names":["Tldraw","_ref","isDarkMode","height","useDomSize","cssSelector","isMounted","useIsMounted","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","Render","setRender","_isDarkMode","useColorModeValue","useEffect","fetch","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$import","_context","prev","next","sent","stop","apply","arguments","darkMode","_jsx","Box","concat","position","top","width","children","display","alignItems","justifyContent","showMenu","showTools","showUI","showZoom","getInitialState","props","localStorage","getItem","isStatic"],"sourceRoot":""}