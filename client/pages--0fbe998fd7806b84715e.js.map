{"version":3,"file":"pages--0fbe998fd7806b84715e.js","mappings":"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","sources":["webpack://@my-react/ssr-example/./src/client/config/container.ts","webpack://@my-react/ssr-example/./src/client/component/ScrollControl/ScrollControlContext.ts","webpack://@my-react/ssr-example/./src/client/component/ScrollControl/ScrollControl.tsx","webpack://@my-react/ssr-example/./src/client/component/ScrollControl/ScrollSectionContext.ts","webpack://@my-react/ssr-example/./src/client/component/ScrollControl/ScrollViewContext.ts","webpack://@my-react/ssr-example/./src/client/component/ScrollControl/ScrollSection.tsx","webpack://@my-react/ssr-example/./src/client/component/ScrollControl/ScrollContent.tsx","webpack://@my-react/ssr-example/./src/client/component/Arrow.tsx","webpack://@my-react/ssr-example/./src/client/component/ScrollControl/ScrollToTop.tsx","webpack://@my-react/ssr-example/./src/client/component/ScrollControl/ScrollControlTool.tsx","webpack://@my-react/ssr-example/./src/client/container/Section/Main.tsx","webpack://@my-react/ssr-example/./src/client/pages/index.tsx","webpack://@my-react/ssr-example/./src/client/utils/highlight.ts","webpack://@my-react/ssr-example/./src/client/utils/markdown.ts"],"sourcesContent":["export const CONTAINER_WIDTH = 1580;\n","import { createContext, useContext } from \"react\";\n\nexport const ScrollControlContext = createContext({\n  totalSection: 0,\n  currentSection: 0,\n  setTotalSection: (_length: number): void => void 0,\n  setCurrentSection: (_index: number): void => void 0,\n  onNextSection: (): void => void 0,\n  onPrevSection: (): void => void 0,\n});\n\nexport const useScrollControl = () => useContext(ScrollControlContext);\n","import { useCallbackRef, usePrevious } from \"@chakra-ui/react\";\nimport { useEffect, useMemo, useState } from \"react\";\n\nimport { ScrollControlContext } from \"./ScrollControlContext\";\n\nimport type { ReactNode } from \"react\";\n\ntype ScrollControlProps = {\n  initialSectionLength?: number;\n  onSectionIndexChange?: (currentIndex: number, prevIndex: number) => void;\n  children: ReactNode;\n};\n\nexport const ScrollControl = ({ onSectionIndexChange, children, initialSectionLength }: ScrollControlProps) => {\n  const [currentSection, setCurrentSection] = useState(0);\n  \n  const [totalSection, setTotalSection] = useState(initialSectionLength || 0);\n\n  const prevSection = usePrevious(currentSection);\n\n  const onSectionIndexChangeRef = useCallbackRef(onSectionIndexChange);\n\n  const onNextSection = useCallbackRef(() => {\n    if (currentSection === totalSection - 1) {\n      setCurrentSection(0);\n    } else {\n      setCurrentSection((i) => i + 1);\n    }\n  });\n\n  const onPrevSection = useCallbackRef(() => {\n    if (currentSection === 0) {\n      setCurrentSection(totalSection - 1);\n    } else {\n      setCurrentSection((i) => i - 1);\n    }\n  });\n\n  useEffect(() => {\n    onSectionIndexChangeRef(currentSection, prevSection);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentSection, onSectionIndexChangeRef]);\n\n  const context = useMemo(\n    () => ({ totalSection, currentSection, onNextSection, onPrevSection, setCurrentSection, setTotalSection }),\n    [currentSection, onNextSection, onPrevSection, totalSection]\n  );\n\n  return <ScrollControlContext.Provider value={context}>{children}</ScrollControlContext.Provider>;\n};\n","import { createContext, useContext } from \"react\";\n\nimport type { RefObject } from \"react\";\n\nexport const ScrollSectionContext = createContext<{ ref: RefObject<HTMLElement> }>({ ref: { current: null } });\n\nexport const useScrollSection = () => useContext(ScrollSectionContext);\n","import { createContext, useContext } from \"react\";\n\nexport const ScrollViewContext = createContext({\n  inViewArray: [] as boolean[],\n  setCurrentView: (_inView: boolean, _index: number): void => void 0,\n});\n\nexport const useScrollView = () => useContext(ScrollViewContext);\n","import { Box } from \"@chakra-ui/react\";\nimport { useInView } from \"framer-motion\";\nimport { useEffect, useMemo, useRef } from \"react\";\n\nimport { useScrollControl } from \"./ScrollControlContext\";\nimport { ScrollSectionContext } from \"./ScrollSectionContext\";\nimport { useScrollView } from \"./ScrollViewContext\";\n\nimport type { ReactNode } from \"react\";\n\nexport type ScrollSectionProps = { children: ReactNode; index?: number };\n\nexport const ScrollSection = ({ children, index }: ScrollSectionProps) => {\n  const ref = useRef(null);\n  const context = useMemo(() => ({ ref }), []);\n  const { currentSection } = useScrollControl();\n  const { setCurrentView, inViewArray } = useScrollView();\n\n  const inView = useInView(ref, { amount: \"some\", margin: \"-300px 0px\" });\n\n  useEffect(() => {\n    if (index === null || index === undefined) return;\n    setCurrentView(inView, index);\n  }, [index, inView, setCurrentView, inViewArray.length]);\n\n  return (\n    <ScrollSectionContext.Provider value={context}>\n      <Box ref={ref} position=\"relative\" overflow=\"hidden\" data-scroll-section={index} data-active={currentSection === index}>\n        {children}\n      </Box>\n    </ScrollSectionContext.Provider>\n  );\n};\n","import { useCallbackRef, useSafeLayoutEffect } from \"@chakra-ui/react\";\nimport { useScroll } from \"framer-motion\";\nimport { throttle } from \"lodash-es\";\nimport { Children, cloneElement, isValidElement, useEffect, useMemo, useState } from \"react\";\n\nimport { useScrollControl } from \"./ScrollControlContext\";\nimport { ScrollSection } from \"./ScrollSection\";\nimport { ScrollViewContext } from \"./ScrollViewContext\";\n\nimport type { ScrollSectionProps } from \"./ScrollSection\";\nimport type { ReactElement } from \"react\";\n\nexport const ScrollContent = ({ children }: { children: ReactElement | ReactElement[] }) => {\n  const validElement: ReactElement<ScrollSectionProps>[] = [];\n\n  const { scrollY } = useScroll();\n\n  // filter all the valid `ScrollSection` element\n  Children.forEach(children, (element) => {\n    if (isValidElement<ScrollSectionProps>(element) && element.type === ScrollSection) {\n      validElement.push(element);\n    }\n  });\n\n  const count = validElement.length;\n\n  const [inViewArray, setInViewArray] = useState<boolean[]>(() => Array<boolean>(count).fill(false));\n\n  useEffect(() => {\n    setInViewArray(Array(count).fill(false));\n  }, [count]);\n\n  const setCurrentView = useCallbackRef((inView: boolean, index: number) => {\n    if (inViewArray[index] !== inView) {\n      const newInViewArray = [...inViewArray];\n      newInViewArray[index] = inView;\n      setInViewArray(newInViewArray);\n    }\n  });\n\n  const context = useMemo(() => ({ inViewArray, setCurrentView }), [inViewArray, setCurrentView]);\n\n  const { setTotalSection, setCurrentSection, currentSection } = useScrollControl();\n\n  const setCurrentSectionRef = useCallbackRef((prev: boolean) => {\n    if (prev) {\n      if (inViewArray[currentSection - 1]) {\n        setCurrentSection(currentSection - 1);\n      }\n    } else {\n      if (inViewArray[currentSection + 1]) {\n        setCurrentSection(currentSection + 1);\n      }\n    }\n  });\n\n  useEffect(() => {\n    let last = 0;\n    const handler = throttle(\n      (l: number) => {\n        if (l > last) {\n          setCurrentSectionRef(false);\n        } else {\n          setCurrentSectionRef(true);\n        }\n        last = l;\n      },\n      100,\n      { leading: true, trailing: true }\n    );\n    scrollY.onChange(handler);\n    return () => scrollY.clearListeners();\n  }, [setCurrentSectionRef, scrollY]);\n\n  useSafeLayoutEffect(() => {\n    setTotalSection(count);\n    setCurrentSection(0);\n  }, [count, setTotalSection, setCurrentSection]);\n\n  return (\n    <ScrollViewContext.Provider value={context}>\n      {Children.map(validElement, (element, index) => cloneElement(element, { index: index }))}\n    </ScrollViewContext.Provider>\n  );\n};\n","import { memo } from \"react\";\n\nconst _Arrow = ({ className }: { className: string }) => {\n  return (\n    <svg className={className} width=\"14\" height=\"8\" viewBox=\"0 0 14 8\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M1 7L7 1L13 7\" stroke=\"currentColor\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n    </svg>\n  );\n};\n\nexport const Arrow = memo(_Arrow);\n","import { Box, Icon } from \"@chakra-ui/react\";\n\n// import { smoothScroll } from \"@client/utils/scroll\";\n\nimport { Arrow } from \"../Arrow\";\n\nimport { useScrollControl } from \"./ScrollControlContext\";\n\nexport const ScrollToTop = () => {\n  const { currentSection } = useScrollControl();\n  return (\n    <Box\n      fontSize=\"20px\"\n      position=\"fixed\"\n      right=\"10px\"\n      bottom=\"20px\"\n      width=\"20px\"\n      height=\"20px\"\n      color=\"orangeSand\"\n      textAlign=\"center\"\n      verticalAlign=\"middle\"\n      borderRadius=\"999999px\"\n      zIndex=\"sticky\"\n      display={{ base: currentSection > 0 ? \"flex\" : \"none\", md: \"none\" }}\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      onClick={() => {\n        window.scrollTo({ top: 0, behavior: \"smooth\" });\n      }}\n    >\n      <Icon as={Arrow} width=\"20px\" height=\"20px\" />\n    </Box>\n  );\n};\n","import { Box, Flex, useCallbackRef, Wrap, WrapItem } from \"@chakra-ui/react\";\nimport { useMemo } from \"react\";\n\nimport { useScrollControl } from \"./ScrollControlContext\";\n\nimport type { ReactElement } from \"react\";\n\nexport const ScrollControlTool = ({\n  render,\n}: {\n  render?: ({ index, isSelect, onClick }: { index: number; isSelect: boolean; onClick: () => void }) => ReactElement;\n}) => {\n  const { totalSection, currentSection } = useScrollControl();\n\n  const clickHandler = useCallbackRef((index: number) => {\n    const targetElement = document.querySelector(`[data-scroll-section=\"${index}\"]`);\n    if (targetElement) {\n      const rect = targetElement.getBoundingClientRect();\n      const top = (document.scrollingElement?.scrollTop || 0) + rect.top;\n      window.scrollTo({ top, behavior: \"smooth\" });\n    }\n  });\n\n  const array = useMemo(() => Array(totalSection).fill(0) as number[], [totalSection]);\n\n  if (totalSection <= 1) return null;\n\n  return (\n    <Flex\n      height=\"100vh\"\n      position=\"fixed\"\n      width=\"30px\"\n      display={{ base: \"none\", md: \"flex\" }}\n      flexDirection=\"column\"\n      top=\"0\"\n      right=\"100px\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      zIndex=\"dropdown\"\n      data-scroll-tool\n    >\n      {currentSection <= totalSection - 1 && (\n        <Wrap spacing=\"6\">\n          {array.map((_, i) => (\n            <WrapItem key={i}>\n              {render ? (\n                render({ index: i, isSelect: currentSection === i, onClick: () => clickHandler(i) })\n              ) : (\n                <Box\n                  width=\"10px\"\n                  height=\"10px\"\n                  cursor=\"pointer\"\n                  borderRadius=\"full\"\n                  sx={{\n                    backgroundColor: currentSection === i ? \"red\" : \"initial\",\n                    border: currentSection === i ? \"none\" : \"1px solid #e2e2e2\",\n                  }}\n                  onClick={() => clickHandler(i)}\n                />\n              )}\n            </WrapItem>\n          ))}\n        </Wrap>\n      )}\n    </Flex>\n  );\n};\n","import { Box, Button, Container, Flex, Heading, HStack, Text } from \"@chakra-ui/react\";\nimport { useIntl } from \"react-intl\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport { CONTAINER_WIDTH } from \"@client/config/container\";\nimport { mark } from \"@client/utils/markdown\";\nimport { getIsStaticGenerate } from \"@shared\";\n\nconst tsxMd = `\n\\`\\`\\`tsx\nimport { useState, useCallback } from '@my-react/react';\nimport { render } from '@my-react/react-dom';\n\nconst useCount = () => {\n  const [state, setState] = useState(0);\n  const add = useCallback(() => setState(i => i + 1), []);\n  const del = useCallback(() => setState(i => i - 1), []);\n\n  return [state, add, del];\n};\n\nconst App = () => {\n  const [state, add, del] = useCount();\n\n  return <div>\n    <p>{state}</p>;\n    <button onClick={add}>add</button>\n    <button onClick={del}>del</button>\n  </div>\n}\n\nrender(<App />, document.querySelector('#root'));\n\\`\\`\\`\n`;\n\nconst renderBody = mark.render(tsxMd);\n\nexport const MainSection = () => {\n  const navigate = useNavigate();\n\n  const { formatMessage } = useIntl();\n\n  return (\n    <Container maxWidth={CONTAINER_WIDTH} minHeight=\"100vh\">\n      <Flex justifyContent=\"space-between\" marginTop=\"4%\" flexDirection={{ base: \"column\", md: \"row\" }}>\n        <Box alignSelf=\"flex-start\" marginLeft={{ base: \"4%\", md: \"6%\", lg: \"8%\" }} maxWidth={{ base: \"100%\", md: \"40%\" }}>\n          <Heading as=\"h1\" fontSize={{ base: \"2xl\", md: \"3xl\", lg: \"5xl\" }} marginBottom=\"6\" color=\"red.400\">\n            {formatMessage({ id: \"@my-react\" })}\n          </Heading>\n          <Text fontSize={{ base: \"xl\", md: \"3xl\", lg: \"4xl\" }}>{formatMessage({ id: \"description\" })}</Text>\n          <Text fontSize=\"sm\" color=\"lightTextColor\" marginY=\"2\">\n            This website is built with @my-react\n          </Text>\n          <HStack marginTop=\"14\" spacing=\"8\" display={{ base: \"none\", md: \"flex\" }} fontSize={{ md: \"12px\", lg: \"14px\", xl: \"16px\" }}>\n            <Button\n              variant=\"solid\"\n              fontSize=\"inherit\"\n              borderRadius=\"full\"\n              colorScheme=\"messenger\"\n              onClick={() => navigate(getIsStaticGenerate() ? \"/MyReact/Blog\" : \"/Blog\")}\n            >\n              View Example\n            </Button>\n            <Button\n              variant=\"solid\"\n              fontSize=\"inherit\"\n              borderRadius=\"full\"\n              colorScheme=\"whatsapp\"\n              as=\"a\"\n              href=\"https://github.com/MrWangJustToDo/MyReact\"\n              target=\"_blank\"\n            >\n              View on GitHub\n            </Button>\n            <Button variant=\"solid\" fontSize=\"inherit\" borderRadius=\"full\" as=\"a\" href=\"https://www.npmjs.com/search?q=%40my-react\" target=\"_blank\">\n              View on NPM\n            </Button>\n          </HStack>\n        </Box>\n        <Box\n          className=\"typo\"\n          overflow={{ base: \"hidden\", lg: \"auto\" }}\n          border=\"1px solid\"\n          borderColor=\"cardBorderColor\"\n          marginRight={{ base: \"4%\", md: \"16%\" }}\n          marginTop={{ base: \"10%\", md: \"0\" }}\n          marginLeft={{ base: \"4%\", md: \"0\" }}\n          marginBottom={{ base: \"6%\" }}\n          borderRadius=\"0.8em\"\n          fontSize={{ base: \"sm\", lg: \"medium\" }}\n          sx={{\n            [\"pre\"]: {\n              margin: \"0\",\n            },\n          }}\n          dangerouslySetInnerHTML={{ __html: renderBody }}\n        />\n      </Flex>\n    </Container>\n  );\n};\n","import { ScrollContent, ScrollControl, ScrollControlTool, ScrollSection, ScrollToTop } from \"@client/component\";\nimport { MainSection } from \"@client/container/Section\";\n\nconst Page = () => {\n  return (\n    <>\n      <ScrollControl initialSectionLength={1}>\n        <ScrollContent>\n          <ScrollSection>\n            <MainSection />\n          </ScrollSection>\n\n          {/* <ScrollSection>\n            <Box width=\"100vw\" height=\"100vh\" backgroundColor=\"aliceblue\" position=\"relative\">\n              <Box position=\"absolute\" left=\"30%\" top=\"50%\" transform=\"translateY(-50%)\" border=\"1px\" borderRadius=\"4px\" padding=\"2\">\n                <Section>\n                  <Text fontSize=\"24px\">2 page</Text>\n                </Section>\n              </Box>\n            </Box>\n          </ScrollSection>\n\n          <ScrollSection>\n            <Box width=\"100vw\" height=\"100vh\" backgroundColor=\"whatsapp.300\" position=\"relative\">\n              <Box position=\"absolute\" left=\"30%\" top=\"50%\" transform=\"translateY(-50%)\" border=\"1px\" borderRadius=\"4px\" padding=\"2\">\n                <Section>\n                  <Text fontSize=\"24px\">3 page</Text>\n                </Section>\n              </Box>\n            </Box>\n          </ScrollSection>\n\n          <ScrollSection>\n            <Box width=\"100vw\" height=\"100vh\" backgroundColor=\"yellow.400\" position=\"relative\">\n              <Box position=\"absolute\" left=\"30%\" top=\"50%\" transform=\"translateY(-50%)\" border=\"1px\" borderRadius=\"4px\" padding=\"2\">\n                <Section>\n                  <Text fontSize=\"24px\">4 page</Text>\n                </Section>\n              </Box>\n            </Box>\n          </ScrollSection>\n\n          <ScrollSection>\n            <Box width=\"100vw\" height=\"120vh\" backgroundColor=\"twitter.200\" position=\"relative\">\n              <Box position=\"absolute\" left=\"30%\" top=\"50%\" transform=\"translateY(-50%)\" border=\"1px\" borderRadius=\"4px\" padding=\"2\">\n                <Section>\n                  <Text fontSize=\"24px\">5 page</Text>\n                </Section>\n              </Box>\n            </Box>\n          </ScrollSection> */}\n        </ScrollContent>\n\n        <ScrollControlTool />\n        <ScrollToTop />\n      </ScrollControl>\n    </>\n  );\n};\n\nexport default Page;\n\nexport const isStatic = true;\n","// 语法高亮\nimport Hljs from \"highlight.js/lib/core\";\nimport css from \"highlight.js/lib/languages/css\";\nimport java from \"highlight.js/lib/languages/java\";\nimport javascript from \"highlight.js/lib/languages/javascript\";\nimport json from \"highlight.js/lib/languages/json\";\nimport less from \"highlight.js/lib/languages/less\";\nimport scss from \"highlight.js/lib/languages/scss\";\nimport shell from \"highlight.js/lib/languages/shell\";\nimport sql from \"highlight.js/lib/languages/sql\";\nimport typescript from \"highlight.js/lib/languages/typescript\";\nimport xml from \"highlight.js/lib/languages/xml\";\n// import \"highlight.js/styles/base16/dracula.css\";\n\nHljs.registerLanguage(\"css\", css);\nHljs.registerLanguage(\"json\", json);\nHljs.registerLanguage(\"java\", java);\nHljs.registerLanguage(\"javascript\", javascript);\nHljs.registerLanguage(\"typescript\", typescript);\nHljs.registerLanguage(\"less\", less);\nHljs.registerLanguage(\"scss\", scss);\nHljs.registerLanguage(\"shell\", shell);\nHljs.registerLanguage(\"xml\", xml);\nHljs.registerLanguage(\"sql\", sql);\n\nexport const hljs = Hljs;\n","import Mark from \"markdown-it\";\n\nimport { hljs } from \"./highlight\";\n\nconst temp = new Mark();\n\nconst mark = new Mark({\n  html: true,\n  xhtmlOut: true,\n  breaks: true,\n  highlight: function (str, lang) {\n    if (lang && hljs.getLanguage(lang)) {\n      try {\n        const transformValue = hljs.highlight(str, {\n          language: lang,\n          ignoreIllegals: true,\n        }).value;\n        const transformArr = transformValue.split(/\\n/).slice(0, -1);\n        const minWidth = String(transformArr.length).length - 0.2;\n        const html = transformArr.reduce(\n          (p: string, c: string, idx: number) =>\n            `${p}<span class='no-select d-inline-block text-center border-right pr-2 mr-2 border-dark' style='min-width: ${minWidth}em; line-height: 1.5'>${\n              idx + 1\n            }</span>${c}\\n`,\n          `<div class='w-100 position-absolute' style='left: 0; top: 0; font-size: 0px'>\n            <b class='no-select position-absolute text-info' style='left: 10px; font-size: 12px; top: 4px;'>${lang}</b>\n            <div class='position-absolute w-100 border-bottom border-dark' style='left: 0; top: 24px;'></div>\n          </div>`\n        );\n        return `<pre class=\"rounded position-relative\"><code class=\"hljs ${lang}\" style='padding-top: 30px;'>${html}</code></pre>`;\n      } catch (__) {\n        void 0;\n      }\n    }\n    return '<pre class=\"rounded\"><code class=\"hljs\">' + temp.utils.escapeHtml(str) + \"</code></pre>\";\n  },\n});\n\nconst addIdForHeads = (className?: string) => {\n  if (className) {\n    const headings = document.querySelector(className)?.querySelectorAll(\"h1, h2, h3, h4, h5, h6, h7\") || [];\n    const headingMap: { [props: string]: number } = {};\n    Array.prototype.forEach.call(headings, function (heading) {\n      const id = heading.id\n        ? heading.id\n        : heading.textContent\n            .trim()\n            .toLowerCase()\n            .split(\" \")\n            .join(\"-\")\n            .replace(/[!@#$%^&*():]/gi, \"\")\n            .replace(/\\//gi, \"-\");\n      headingMap[id] = !isNaN(headingMap[id]) ? ++headingMap[id] : 0;\n      if (headingMap[id]) {\n        heading.id = id + \"-\" + headingMap[id];\n      } else {\n        heading.id = id;\n      }\n    });\n    return !!headings.length;\n  }\n};\n\nconst markNOLineNumber = new Mark({\n  html: true,\n  xhtmlOut: true,\n  breaks: true,\n  highlight: function (str, lang) {\n    if (lang && hljs.getLanguage(lang)) {\n      try {\n        const transformValue = hljs.highlight(str, {\n          language: lang,\n          ignoreIllegals: true,\n        }).value;\n        return `<pre class=\"rounded bg-dark\"><code class=\"bg-dark hljs ${lang}\">${transformValue}</code></pre>`;\n      } catch (__) {\n        void 0;\n      }\n    }\n    return `<pre class=\"rounded bg-dark\"><code class=\"bg-dark hljs\">${temp.utils.escapeHtml(str)}</code></pre>`;\n  },\n});\n\nexport { mark, markNOLineNumber, addIdForHeads };\n"],"names":["CONTAINER_WIDTH","ScrollControlContext","createContext","totalSection","currentSection","setTotalSection","_length","setCurrentSection","_index","onNextSection","onPrevSection","useScrollControl","useContext","ScrollControl","_ref","onSectionIndexChange","children","initialSectionLength","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","prevSection","usePrevious","onSectionIndexChangeRef","useCallbackRef","i","useEffect","context","useMemo","_jsx","Provider","value","ScrollSectionContext","ref","current","ScrollViewContext","inViewArray","setCurrentView","_inView","ScrollSection","index","useRef","_useScrollView","inView","useInView","amount","margin","length","Box","position","overflow","ScrollContent","validElement","scrollY","useScroll","Children","element","isValidElement","type","push","count","Array","fill","setInViewArray","newInViewArray","_toConsumableArray","_useScrollControl","setCurrentSectionRef","prev","last","handler","throttle","l","leading","trailing","onChange","clearListeners","useSafeLayoutEffect","cloneElement","_Arrow","className","width","height","viewBox","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","Arrow","memo","ScrollToTop","fontSize","right","bottom","color","textAlign","verticalAlign","borderRadius","zIndex","display","base","md","alignItems","justifyContent","onClick","window","scrollTo","top","behavior","Icon","as","ScrollControlTool","render","clickHandler","targetElement","document","querySelector","concat","_document$scrollingEl","rect","getBoundingClientRect","scrollingElement","scrollTop","array","Flex","flexDirection","Wrap","spacing","map","_","WrapItem","isSelect","cursor","sx","backgroundColor","border","renderBody","mark","MainSection","navigate","useNavigate","formatMessage","useIntl","Container","maxWidth","minHeight","_jsxs","marginTop","alignSelf","marginLeft","lg","Heading","marginBottom","id","Text","marginY","HStack","xl","Button","variant","colorScheme","getIsStaticGenerate","href","target","borderColor","marginRight","_defineProperty","dangerouslySetInnerHTML","__html","_Fragment","isStatic","Hljs","css","json","java","javascript","typescript","less","scss","shell","xml","sql","hljs","temp","Mark","html","xhtmlOut","breaks","highlight","str","lang","getLanguage","transformArr","language","ignoreIllegals","split","slice","minWidth","String","reduce","p","c","idx","__","utils","escapeHtml","markNOLineNumber","transformValue"],"sourceRoot":""}