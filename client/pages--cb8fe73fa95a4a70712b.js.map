{"version":3,"file":"pages--cb8fe73fa95a4a70712b.js","mappings":"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","sources":["webpack://@my-react/ssr-example/./src/client/config/container.ts","webpack://@my-react/ssr-example/./src/client/component/ScrollControl/ScrollControlContext.ts","webpack://@my-react/ssr-example/./src/client/component/ScrollControl/ScrollControl.tsx","webpack://@my-react/ssr-example/./src/client/component/ScrollControl/ScrollSectionContext.ts","webpack://@my-react/ssr-example/./src/client/component/ScrollControl/ScrollViewContext.ts","webpack://@my-react/ssr-example/./src/client/component/ScrollControl/ScrollSection.tsx","webpack://@my-react/ssr-example/./src/client/component/ScrollControl/ScrollContent.tsx","webpack://@my-react/ssr-example/./src/client/component/Arrow.tsx","webpack://@my-react/ssr-example/./src/client/component/ScrollControl/ScrollToTop.tsx","webpack://@my-react/ssr-example/./src/client/component/ScrollControl/ScrollControlTool.tsx","webpack://@my-react/ssr-example/./src/client/component/Table/BaseTable.tsx","webpack://@my-react/ssr-example/./src/client/component/Table/Column.tsx","webpack://@my-react/ssr-example/./src/client/component/Table/Pagination.tsx","webpack://@my-react/ssr-example/./src/client/component/Table/usePaginationController.tsx","webpack://@my-react/ssr-example/./src/client/component/Table/ErrorCatch.tsx","webpack://@my-react/ssr-example/./src/client/component/Table/Td.tsx","webpack://@my-react/ssr-example/./src/client/component/Table/Cell.tsx","webpack://@my-react/ssr-example/./src/client/component/Table/type.ts","webpack://@my-react/ssr-example/./src/client/component/Table/useSorter.ts","webpack://@my-react/ssr-example/./src/client/component/Table/HeadCell.tsx","webpack://@my-react/ssr-example/./src/client/component/Table/index.tsx","webpack://@my-react/ssr-example/./src/client/component/Table/useSkeleton.tsx","webpack://@my-react/ssr-example/./src/client/component/Table/useChildren.tsx","webpack://@my-react/ssr-example/./src/client/container/Section/Main.tsx","webpack://@my-react/ssr-example/./src/client/container/Section/Api.tsx","webpack://@my-react/ssr-example/./src/client/pages/index.tsx","webpack://@my-react/ssr-example/./src/client/utils/highlight.ts","webpack://@my-react/ssr-example/./src/client/utils/markdown.ts"],"sourcesContent":["export const CONTAINER_WIDTH = 1580;\n","import { createContext, useContext } from \"react\";\n\nexport const ScrollControlContext = createContext({\n  totalSection: 0,\n  currentSection: 0,\n  setTotalSection: (_length: number): void => void 0,\n  setCurrentSection: (_index: number): void => void 0,\n  onNextSection: (): void => void 0,\n  onPrevSection: (): void => void 0,\n});\n\nexport const useScrollControl = () => useContext(ScrollControlContext);\n","import { useCallbackRef, usePrevious } from \"@chakra-ui/react\";\nimport { useEffect, useMemo, useState } from \"react\";\n\nimport { ScrollControlContext } from \"./ScrollControlContext\";\n\nimport type { ReactNode } from \"react\";\n\ntype ScrollControlProps = {\n  initialSectionLength?: number;\n  onSectionIndexChange?: (currentIndex: number, prevIndex: number) => void;\n  children: ReactNode;\n};\n\nexport const ScrollControl = ({ onSectionIndexChange, children, initialSectionLength }: ScrollControlProps) => {\n  const [currentSection, setCurrentSection] = useState(0);\n  \n  const [totalSection, setTotalSection] = useState(initialSectionLength || 0);\n\n  const prevSection = usePrevious(currentSection);\n\n  const onSectionIndexChangeRef = useCallbackRef(onSectionIndexChange);\n\n  const onNextSection = useCallbackRef(() => {\n    if (currentSection === totalSection - 1) {\n      setCurrentSection(0);\n    } else {\n      setCurrentSection((i) => i + 1);\n    }\n  });\n\n  const onPrevSection = useCallbackRef(() => {\n    if (currentSection === 0) {\n      setCurrentSection(totalSection - 1);\n    } else {\n      setCurrentSection((i) => i - 1);\n    }\n  });\n\n  useEffect(() => {\n    onSectionIndexChangeRef(currentSection, prevSection);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentSection, onSectionIndexChangeRef]);\n\n  const context = useMemo(\n    () => ({ totalSection, currentSection, onNextSection, onPrevSection, setCurrentSection, setTotalSection }),\n    [currentSection, onNextSection, onPrevSection, totalSection]\n  );\n\n  return <ScrollControlContext.Provider value={context}>{children}</ScrollControlContext.Provider>;\n};\n","import { createContext, useContext } from \"react\";\n\nimport type { RefObject } from \"react\";\n\nexport const ScrollSectionContext = createContext<{ ref: RefObject<HTMLElement> }>({ ref: { current: null } });\n\nexport const useScrollSection = () => useContext(ScrollSectionContext);\n","import { createContext, useContext } from \"react\";\n\nexport const ScrollViewContext = createContext({\n  inViewArray: [] as boolean[],\n  setCurrentView: (_inView: boolean, _index: number): void => void 0,\n});\n\nexport const useScrollView = () => useContext(ScrollViewContext);\n","import { Box } from \"@chakra-ui/react\";\nimport { useInView } from \"framer-motion\";\nimport { useEffect, useMemo, useRef } from \"react\";\n\nimport { useScrollControl } from \"./ScrollControlContext\";\nimport { ScrollSectionContext } from \"./ScrollSectionContext\";\nimport { useScrollView } from \"./ScrollViewContext\";\n\nimport type { ReactNode } from \"react\";\n\nexport type ScrollSectionProps = { children: ReactNode; index?: number };\n\nexport const ScrollSection = ({ children, index }: ScrollSectionProps) => {\n  const ref = useRef(null);\n  const context = useMemo(() => ({ ref }), []);\n  const { currentSection } = useScrollControl();\n  const { setCurrentView, inViewArray } = useScrollView();\n\n  const inView = useInView(ref, { amount: \"some\", margin: \"-300px 0px\" });\n\n  useEffect(() => {\n    if (index === null || index === undefined) return;\n    setCurrentView(inView, index);\n  }, [index, inView, setCurrentView, inViewArray.length]);\n\n  return (\n    <ScrollSectionContext.Provider value={context}>\n      <Box ref={ref} position=\"relative\" overflow=\"hidden\" data-scroll-section={index} data-active={currentSection === index}>\n        {children}\n      </Box>\n    </ScrollSectionContext.Provider>\n  );\n};\n","import { useCallbackRef, useSafeLayoutEffect } from \"@chakra-ui/react\";\nimport { useScroll } from \"framer-motion\";\nimport { throttle } from \"lodash-es\";\nimport { Children, cloneElement, isValidElement, useEffect, useMemo, useState } from \"react\";\n\nimport { useScrollControl } from \"./ScrollControlContext\";\nimport { ScrollSection } from \"./ScrollSection\";\nimport { ScrollViewContext } from \"./ScrollViewContext\";\n\nimport type { ScrollSectionProps } from \"./ScrollSection\";\nimport type { ReactElement } from \"react\";\n\nexport const ScrollContent = ({ children }: { children: ReactElement | ReactElement[] }) => {\n  const validElement: ReactElement<ScrollSectionProps>[] = [];\n\n  const { scrollY } = useScroll();\n\n  // filter all the valid `ScrollSection` element\n  Children.forEach(children, (element) => {\n    if (isValidElement<ScrollSectionProps>(element) && element.type === ScrollSection) {\n      validElement.push(element);\n    }\n  });\n\n  const count = validElement.length;\n\n  const [inViewArray, setInViewArray] = useState<boolean[]>(() => Array<boolean>(count).fill(false));\n\n  useEffect(() => {\n    setInViewArray(Array(count).fill(false));\n  }, [count]);\n\n  const setCurrentView = useCallbackRef((inView: boolean, index: number) => {\n    setInViewArray((last) => {\n      if (last[index] !== inView) {\n        const newInViewArray = [...last];\n        newInViewArray[index] = inView;\n        return newInViewArray;\n      } else {\n        return last;\n      }\n    });\n  });\n\n  const context = useMemo(() => ({ inViewArray, setCurrentView }), [inViewArray, setCurrentView]);\n\n  const { setTotalSection, setCurrentSection, currentSection } = useScrollControl();\n\n  const setCurrentSectionRef = useCallbackRef((prev: boolean) => {\n    if (prev) {\n      if (inViewArray[currentSection - 1]) {\n        setCurrentSection(currentSection - 1);\n      }\n    } else {\n      if (inViewArray[currentSection + 1]) {\n        setCurrentSection(currentSection + 1);\n      }\n    }\n  });\n\n  useEffect(() => {\n    let last = 0;\n    const handler = throttle(\n      (l: number) => {\n        if (l > last) {\n          setCurrentSectionRef(false);\n        } else {\n          setCurrentSectionRef(true);\n        }\n        last = l;\n      },\n      100,\n      { leading: true, trailing: true }\n    );\n    scrollY.onChange(handler);\n    return () => scrollY.clearListeners();\n  }, [setCurrentSectionRef, scrollY]);\n\n  useSafeLayoutEffect(() => {\n    setTotalSection(count);\n    setCurrentSection(0);\n  }, [count, setTotalSection, setCurrentSection]);\n\n  return (\n    <ScrollViewContext.Provider value={context}>\n      {Children.map(validElement, (element, index) => cloneElement(element, { index: index }))}\n    </ScrollViewContext.Provider>\n  );\n};\n","import { memo } from \"react\";\n\nconst _Arrow = ({ className }: { className: string }) => {\n  return (\n    <svg className={className} width=\"14\" height=\"8\" viewBox=\"0 0 14 8\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M1 7L7 1L13 7\" stroke=\"currentColor\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n    </svg>\n  );\n};\n\nexport const Arrow = memo(_Arrow);\n","import { Box, Icon } from \"@chakra-ui/react\";\n\n// import { smoothScroll } from \"@client/utils/scroll\";\n\nimport { Arrow } from \"../Arrow\";\n\nimport { useScrollControl } from \"./ScrollControlContext\";\n\nexport const ScrollToTop = () => {\n  const { currentSection } = useScrollControl();\n  return (\n    <Box\n      fontSize=\"20px\"\n      position=\"fixed\"\n      right=\"10px\"\n      bottom=\"20px\"\n      width=\"20px\"\n      height=\"20px\"\n      color=\"orangeSand\"\n      textAlign=\"center\"\n      verticalAlign=\"middle\"\n      borderRadius=\"999999px\"\n      zIndex=\"sticky\"\n      display={{ base: currentSection > 0 ? \"flex\" : \"none\", md: \"none\" }}\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      onClick={() => {\n        window.scrollTo({ top: 0, behavior: \"smooth\" });\n      }}\n    >\n      <Icon as={Arrow} width=\"20px\" height=\"20px\" />\n    </Box>\n  );\n};\n","import { Box, Flex, useCallbackRef, Wrap, WrapItem } from \"@chakra-ui/react\";\nimport { useMemo } from \"react\";\n\nimport { useScrollControl } from \"./ScrollControlContext\";\n\nimport type { ReactElement } from \"react\";\n\nexport const ScrollControlTool = ({\n  render,\n}: {\n  render?: ({ index, isSelect, onClick }: { index: number; isSelect: boolean; onClick: () => void }) => ReactElement;\n}) => {\n  const { totalSection, currentSection } = useScrollControl();\n\n  const clickHandler = useCallbackRef((index: number) => {\n    const targetElement = document.querySelector(`[data-scroll-section=\"${index}\"]`);\n    if (targetElement) {\n      const rect = targetElement.getBoundingClientRect();\n      const top = (document.scrollingElement?.scrollTop || 0) + rect.top;\n      window.scrollTo({ top, behavior: \"smooth\" });\n    }\n  });\n\n  const array = useMemo(() => Array(totalSection).fill(0) as number[], [totalSection]);\n\n  if (totalSection <= 1) return null;\n\n  return (\n    <Flex\n      height=\"100vh\"\n      position=\"fixed\"\n      width=\"30px\"\n      display={{ base: \"none\", md: \"flex\" }}\n      flexDirection=\"column\"\n      top=\"0\"\n      right=\"100px\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      zIndex=\"dropdown\"\n      data-scroll-tool\n    >\n      {currentSection <= totalSection - 1 && (\n        <Wrap spacing=\"6\">\n          {array.map((_, i) => (\n            <WrapItem key={i}>\n              {render ? (\n                render({ index: i, isSelect: currentSection === i, onClick: () => clickHandler(i) })\n              ) : (\n                <Box\n                  width=\"10px\"\n                  height=\"10px\"\n                  cursor=\"pointer\"\n                  borderRadius=\"full\"\n                  sx={{\n                    backgroundColor: currentSection === i ? \"red\" : \"initial\",\n                    border: currentSection === i ? \"none\" : \"1px solid #e2e2e2\",\n                  }}\n                  onClick={() => clickHandler(i)}\n                />\n              )}\n            </WrapItem>\n          ))}\n        </Wrap>\n      )}\n    </Flex>\n  );\n};\n","import { Table, TableContainer } from \"@chakra-ui/react\";\n\nimport type { TableProps } from \"@chakra-ui/react\";\n\nexport const BaseTable = ({ ...restProps }: TableProps) => (\n  <TableContainer>\n    <Table variant=\"simple\" {...restProps} />\n  </TableContainer>\n);\n","import type { BodyCellProps, BodyCellPropsWithDataIndex, HeadCellProps, HeadCellPropsWithDataIndex } from \"./type\";\nimport type { TableCellProps } from \"@chakra-ui/react\";\nimport type { ReactElement } from \"react\";\n\nexport type ColumnHeadCellRender = ({ rowIndex, colIndex }: { rowIndex: number; colIndex: number }) => ReactElement;\n\nexport type ColumnBodyCellRender<T> = ({\n  rowIndex,\n  colIndex,\n  rowData,\n  stickyRows,\n}: {\n  rowIndex: number;\n  colIndex: number;\n  rowData: T;\n  stickyRows?: number;\n}) => ReactElement;\n\nexport function Column<T, K extends keyof T = keyof T>({\n  dataIndex,\n  cellProps,\n  headCellProps,\n  bodyCellProps,\n  isHidden,\n  headCellRender,\n  bodyCellRender,\n}: {\n  dataIndex: keyof T;\n  cellProps?: TableCellProps;\n  headCellProps?: TableCellProps;\n  bodyCellProps?: TableCellProps;\n  isHidden?: boolean;\n  headCellRender: HeadCellPropsWithDataIndex<T, K> | HeadCellPropsWithDataIndex<T, K>[];\n  bodyCellRender: BodyCellPropsWithDataIndex<T, K>;\n}): React.ReactElement;\n\nexport function Column<T>({\n  cellProps,\n  headCellProps,\n  bodyCellProps,\n  isHidden,\n  headCellRender,\n  bodyCellRender,\n}: {\n  cellProps?: TableCellProps;\n  headCellProps?: TableCellProps;\n  bodyCellProps?: TableCellProps;\n  isHidden?: boolean;\n  headCellRender: HeadCellProps<T> | HeadCellProps<T>[];\n  bodyCellRender: BodyCellProps<T>;\n}): React.ReactElement;\n\nexport function Column<T>({\n  dataIndex: _dataIndex,\n  cellProps: _cellProps,\n  headCellProps: _headCellProps,\n  bodyCellProps: _bodyCellProps,\n  isHidden: _isHidden,\n  headCellRender: _headCellRender,\n  bodyCellRender: _bodyCellRender,\n}: ColumnParams<T>) {\n  return <></>;\n}\n\nexport type ColumnParams<T> = {\n  dataIndex?: keyof T;\n  cellProps?: TableCellProps;\n  headCellProps?: TableCellProps;\n  bodyCellProps?: TableCellProps;\n  isHidden?: boolean;\n  headCellRender: HeadCellProps<T> | HeadCellProps<T>[] | HeadCellPropsWithDataIndex<T> | HeadCellPropsWithDataIndex<T>[];\n  bodyCellRender: BodyCellProps<T> | BodyCellPropsWithDataIndex<T>;\n};\n","import { Box, Button, Flex, Icon } from \"@chakra-ui/react\";\nimport { AiOutlineLeft, AiOutlineRight } from \"react-icons/ai\";\n\nimport { usePagination, usePaginationBar } from \"./usePaginationController\";\n\nimport type { PaginationProps } from \"./type\";\nimport type { ButtonProps } from \"@chakra-ui/react\";\n\nconst Navigator = (props: ButtonProps) => (\n  <Button\n    border=\"1px\"\n    size=\"sm\"\n    borderColor=\"gray.200\"\n    textStyle=\"light\"\n    fontWeight=\"normal\"\n    _active={{\n      background: \"none\",\n    }}\n    _hover={{\n      background: \"none\",\n    }}\n    fontSize=\"sm\"\n    {...props}\n  >\n    {props.children}\n  </Button>\n);\n\nexport const Pagination = ({ page, total, pageSize = 50, onChange, preButtonProps, nextButtonProps, ...restProps }: PaginationProps) => {\n  const { hasNextPage, hasPrePage } = usePagination({\n    page,\n    total,\n    pageSize,\n  });\n\n  return (\n    <Flex justifyContent=\"flex-end\" {...restProps}>\n      {hasPrePage && (\n        <Navigator\n          aria-label=\"Prev page\"\n          leftIcon={<Icon as={AiOutlineLeft} />}\n          onClick={() => {\n            onChange(page - 1);\n          }}\n          marginEnd=\"4\"\n          {...preButtonProps}\n        >\n          {preButtonProps?.children || \"prevPage\"}\n        </Navigator>\n      )}\n      {hasNextPage && (\n        <Navigator\n          aria-label=\"Next page\"\n          rightIcon={<Icon as={AiOutlineRight} />}\n          onClick={() => {\n            onChange(page + 1);\n          }}\n          marginEnd={{ base: 4, lg: 0 }}\n          {...nextButtonProps}\n        >\n          {nextButtonProps?.children || \"nextPage\"}\n        </Navigator>\n      )}\n    </Flex>\n  );\n};\n\nconst BarNavigator = ({ isFocused, children, ...resProps }: ButtonProps & { isFocused?: boolean }) => {\n  const activeStyles = {\n    background: \"blue.500\",\n    color: \"white\",\n  };\n\n  const hoverStyles = {\n    background: \"gray.200\",\n  };\n  return (\n    <Button\n      background={isFocused ? activeStyles.background : \"unset\"}\n      color={isFocused ? activeStyles.color : \"unset\"}\n      minWidth=\"6\"\n      width=\"6\"\n      height=\"6\"\n      paddingX=\"2\"\n      fontWeight=\"semibold\"\n      fontSize=\"sm\"\n      marginX=\"1\"\n      borderRadius=\"2px\"\n      outlineOffset=\"0\"\n      boxSizing=\"border-box\"\n      _active={{ background: \"unset\" }}\n      _hover={isFocused ? activeStyles : hoverStyles}\n      {...resProps}\n    >\n      {children}\n    </Button>\n  );\n};\n\nexport const PaginationBar = ({\n  total,\n  page,\n  pageSize = 50,\n  onChange,\n  unfoldedPages,\n  preButtonProps,\n  nextButtonProps,\n  pageButtonProps,\n  ...restProps\n}: PaginationProps) => {\n  const { items } = usePaginationBar({\n    page,\n    pageSize,\n    total,\n    unfoldedPages,\n  });\n  return (\n    <Box display=\"inline-block\" borderRadius=\"4px\" {...restProps}>\n      {items.map((item) => {\n        if (item.isSplitter) {\n          return (\n            <BarNavigator\n              key={item.key}\n              _hover={{\n                background: \"unset\",\n              }}\n              cursor=\"default!important\"\n              {...pageButtonProps}\n            >\n              ...\n            </BarNavigator>\n          );\n        }\n        if (item.navigate) {\n          const { navigate = -1, disabled } = item;\n          const chevronStyles = {\n            width: \"24px\",\n            height: \"24px\",\n          };\n          const navigatorStyles =\n            navigate < 0\n              ? {\n                  ml: 0,\n                }\n              : {\n                  mr: 0,\n                };\n          return (\n            <BarNavigator\n              key={item.key}\n              disabled={disabled}\n              onClick={() => onChange(navigate + page)}\n              {...navigatorStyles}\n              {...(navigate < 0 ? preButtonProps : nextButtonProps)}\n              className={`table__pagination__${navigate < 0 ? \"previous\" : \"next\"}-page-button`}\n            >\n              {navigate < 0 ? <Icon {...chevronStyles} as={AiOutlineLeft} /> : <Icon {...chevronStyles} as={AiOutlineRight} />}\n            </BarNavigator>\n          );\n        }\n        const { pageNumber = page, disabled, isFocused } = item;\n        return (\n          <BarNavigator key={item.key} disabled={disabled} onClick={() => onChange(pageNumber)} isFocused={isFocused} {...pageButtonProps}>\n            {pageNumber}\n          </BarNavigator>\n        );\n      })}\n    </Box>\n  );\n};\n","import { useMemo } from \"react\";\n\nimport type { PaginationBarButton, PaginationProps } from \"./type\";\n\nconst defaultConfigs = {\n  pageSize: 50,\n  unfoldedPages: 4,\n  minUnfoldedPages: 3,\n};\n\nexport const usePagination = ({ page, total, pageSize = defaultConfigs.pageSize }: Omit<PaginationProps, \"onChange\">) => {\n  const totalPage = total ? Math.ceil(total / pageSize) : 1;\n  return {\n    totalPage,\n    hasNextPage: page < totalPage,\n    hasPrePage: page > 1,\n  };\n};\n\nconst getBarItems = (curPage: number, totalPage: number, unfoldedPages: number): PaginationBarButton[] => {\n  const range: [number, number][] = [];\n  curPage = Math.min(curPage, totalPage);\n  if (totalPage <= unfoldedPages + 2) {\n    range.push([1, totalPage]);\n  } else if (curPage <= unfoldedPages) {\n    range.push([1, unfoldedPages + 1]);\n    range.push([totalPage, totalPage]);\n  } else if (curPage >= totalPage - unfoldedPages + 1) {\n    range.push([1, 1]);\n    range.push([totalPage - unfoldedPages, totalPage]);\n  } else {\n    range.push([1, 1]);\n    range.push([curPage - unfoldedPages + 2, curPage + 1]);\n    range.push([totalPage, totalPage]);\n  }\n  const items = range.reduce<PaginationBarButton[]>((buttons, range) => {\n    if (buttons.length) {\n      buttons.push({ isSplitter: true, disabled: true, key: range[0] - 1 });\n    }\n    buttons.push(\n      ...new Array(range[1] - range[0] + 1).fill(0).map((v, i): PaginationBarButton => {\n        const pageNumber = range[0] + i;\n        return {\n          isFocused: pageNumber === curPage,\n          pageNumber,\n          key: pageNumber,\n        };\n      }),\n    );\n    return buttons;\n  }, []);\n  items.unshift({\n    navigate: -1,\n    disabled: curPage === 1,\n    key: 0,\n  });\n  items.push({\n    navigate: 1,\n    disabled: curPage === totalPage,\n    key: totalPage + 1,\n  });\n  return items;\n};\n\nexport const usePaginationBar = ({\n  page,\n  total,\n  pageSize = defaultConfigs.pageSize,\n  unfoldedPages = defaultConfigs.unfoldedPages,\n}: Omit<PaginationProps, \"onChange\">) => {\n  unfoldedPages = Math.max(unfoldedPages, defaultConfigs.minUnfoldedPages);\n  const { totalPage } = usePagination({\n    page,\n    total,\n    pageSize,\n  } as PaginationProps);\n  const items = useMemo(() => getBarItems(page, totalPage, unfoldedPages), [page, totalPage, unfoldedPages]);\n  return {\n    totalPage,\n    items,\n  };\n};\n","import { Component } from \"react\";\n\nimport type { ErrorInfo, ReactNode } from \"react\";\n\nexport class ErrorCatch extends Component<Record<string, unknown>, { error: string; stack: string; hasError: boolean }> {\n  state = {\n    error: \"\",\n    stack: \"\",\n    hasError: false,\n  };\n\n  static getDerivedStateFromError() {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error: Error, info: ErrorInfo) {\n    this.setState({\n      error: error.message,\n      stack: info.componentStack,\n    });\n  }\n\n  render(): ReactNode {\n    const { hasError, stack, error } = this.state;\n    if (hasError) {\n      console.error(error, stack);\n      return \"\";\n    } else {\n      return this.props.children as ReactNode;\n    }\n  }\n}\n","import { Td as OriginalTd } from \"@chakra-ui/react\";\n\nimport { ErrorCatch } from \"./ErrorCatch\";\n\nimport type { TableCellProps } from \"@chakra-ui/react\";\n\nexport const Td = (props: TableCellProps) => {\n  const { children, ...resProps } = props;\n  return (\n    <OriginalTd {...resProps}>\n      <ErrorCatch>{children}</ErrorCatch>\n    </OriginalTd>\n  );\n};\n","import { Skeleton as DefaultSkeleton } from \"@chakra-ui/react\";\n\nimport { Td } from \"./Td\";\n\nimport type { BodyCellProps, BodyCellRender } from \"./type\";\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nconst CellRender = <T extends {}>({ Render, CustomRender, dataIndex, rowIndex, colIndex, rowData, cellProps, ...restProps }: BodyCellRender<T>) => {\n  if (typeof CustomRender === \"function\") {\n    if (dataIndex) {\n      return CustomRender({\n        rowData,\n        rowIndex,\n        colIndex,\n        dataIndex,\n        cellData: rowData[dataIndex],\n      });\n    }\n\n    const CustomRenderWithoutDataIndex = CustomRender as Required<BodyCellProps<T>>[\"CustomRender\"];\n\n    return CustomRenderWithoutDataIndex({\n      rowData,\n      rowIndex,\n      colIndex,\n    });\n  }\n\n  return (\n    <Td fontWeight=\"medium\" {...restProps} {...cellProps}>\n      {typeof Render === \"function\"\n        ? Render({\n            dataIndex: dataIndex || (\"\" as keyof T),\n            rowIndex,\n            colIndex,\n            cellData: dataIndex ? rowData[dataIndex] : ({} as T[keyof T]),\n            rowData,\n          })\n        : Render}\n    </Td>\n  );\n};\n\nexport function Cell<T>({\n  Render,\n  CustomRender,\n  dataIndex,\n  rowIndex,\n  colIndex,\n  rowData,\n  cellProps,\n  showSkeleton = ({ rowData }) => !rowData,\n  Skeleton,\n  ...restProps\n}: BodyCellRender<T>) {\n  const _showSkeleton = typeof showSkeleton === \"function\" ? showSkeleton({ rowIndex, rowData, colIndex }) : !!showSkeleton;\n\n  if (_showSkeleton) {\n    if (Skeleton)\n      return (\n        <Td fontWeight=\"medium\" {...restProps} {...cellProps}>\n          <Skeleton rowIndex={rowIndex} colIndex={colIndex} />\n        </Td>\n      );\n    return (\n      <Td fontWeight=\"medium\" {...restProps} {...cellProps}>\n        <DefaultSkeleton width=\"80%\" height=\"24px\" />\n      </Td>\n    );\n  }\n\n  return (\n    <CellRender\n      {...{\n        rowData,\n        rowIndex,\n        dataIndex,\n        colIndex,\n        cellProps,\n        Render,\n        CustomRender,\n        ...restProps,\n      }}\n    />\n  );\n}\n","import type { BoxProps, ButtonProps, FlexProps, TableCellProps, TableProps as OriginalTableProps, TableRowProps, TooltipProps } from \"@chakra-ui/react\";\nimport type { ReactElement } from \"react\";\nimport type React from \"react\";\n\nexport type CompareFn<T> = (a: T, b: T) => number;\n\nexport type GenCompareFn<T> = (sorter: Sorter<T>) => CompareFn<T>;\n\nexport enum SortOrder {\n  None,\n  Asc,\n  Desc,\n}\n\nexport type Sorter<T> = {\n  by?: keyof T;\n  order?: SortOrder;\n  onSort?: (sorter: Sorter<T>) => void;\n  genCompareFn?: GenCompareFn<T>;\n};\n\nexport type PaginationProps = {\n  total?: number;\n  page: number;\n  pageSize?: number;\n  onChange: (page: number) => void;\n  unfoldedPages?: number;\n  preButtonProps?: ButtonProps;\n  nextButtonProps?: ButtonProps;\n  pageButtonProps?: ButtonProps;\n} & Omit<FlexProps, \"onChange\" | \"children\">;\n\nexport type PaginationBarButton = {\n  disabled?: boolean;\n  isSplitter?: boolean;\n  navigate?: -1 | 1;\n  pageNumber?: number;\n  isFocused?: boolean;\n  key: number;\n};\n\n// with dataIndex field, we use sorter by dataIndex\nexport type HeadCellPropsWithDataIndex<T, K extends keyof T = keyof T> = {\n  Render: (({ dataIndex, rowIndex, colIndex }: { dataIndex: K; rowIndex: number; colIndex: number }) => React.ReactElement) | string | number | React.ReactNode;\n  CustomRender?: ({\n    dataIndex,\n    rowIndex,\n    colIndex,\n    sort,\n    cancelSort,\n    toggledSortOrder,\n    defaultOrder,\n    sortAscColor,\n    sortDescColor,\n    sorterClick,\n    genCompareFn,\n\n    sorter,\n    onSort,\n  }: {\n    dataIndex: K;\n    rowIndex: number;\n    colIndex: number;\n\n    sort?: boolean;\n    cancelSort?: boolean;\n    toggledSortOrder: SortOrder;\n    defaultOrder?: SortOrder;\n    sortAscColor?: string;\n    sortDescColor?: string;\n    sorterClick: () => void;\n    genCompareFn?: GenCompareFn<T>;\n\n    sorter: Sorter<T>;\n    onSort: (sorter: Sorter<T>) => void;\n  }) => React.ReactElement;\n  cellProps?: Omit<TableCellProps, \"children\">;\n  genCompareFn?: GenCompareFn<T>;\n  sort?: boolean;\n  cancelSort?: boolean;\n  sortedColor?: string;\n  defaultOrder?: SortOrder;\n  tooltipProps?: Omit<TooltipProps, \"children\">;\n};\n\n// without dataIndex field, we need provider sort\nexport type HeadCellProps<T> = {\n  Render: (({ rowIndex, colIndex }: { rowIndex: number; colIndex: number }) => React.ReactElement) | string | number | React.ReactNode;\n  CustomRender?: ({\n    rowIndex,\n    colIndex,\n\n    sort,\n    defaultOrder,\n    sortAscColor,\n    sortDescColor,\n    genCompareFn,\n    sorter,\n    onSort,\n  }: {\n    rowIndex: number;\n    colIndex: number;\n    sort?: boolean;\n    defaultOrder?: SortOrder;\n    sortAscColor?: string;\n    sortDescColor?: string;\n    genCompareFn?: GenCompareFn<T>;\n    sorter: Sorter<T>;\n    onSort: (sorter: Sorter<T>) => void;\n  }) => React.ReactElement;\n  cellProps?: Omit<TableCellProps, \"children\">;\n  genCompareFn?: GenCompareFn<T>;\n  sort?: boolean;\n  cancelSort?: boolean;\n  sortedColor?: string;\n  defaultOrder?: SortOrder;\n  tooltipProps?: Omit<TooltipProps, \"children\">;\n};\n\nexport type HeadCellRender<T, K extends keyof T = keyof T> = (HeadCellProps<T> | HeadCellPropsWithDataIndex<T, K>) & {\n  dataIndex?: keyof T;\n  rowIndex: number;\n  colIndex: number;\n};\n\ntype SkeletonBody<T> = {\n  showSkeleton?: boolean | (({ rowData, rowIndex, colIndex }: { rowData?: T; rowIndex: number; colIndex: number }) => boolean);\n  Skeleton?: ({ rowData, rowIndex, colIndex }: { rowData?: T; colIndex: number; rowIndex: number }) => React.ReactElement;\n};\n\nexport type BodyCellPropsWithDataIndex<T, K extends keyof T = keyof T> = {\n  Render:\n    | (({\n        dataIndex,\n        rowData,\n        cellData,\n        rowIndex,\n        colIndex,\n      }: {\n        dataIndex: K;\n        rowData: T;\n        cellData: T[K];\n        rowIndex: number;\n        colIndex: number;\n      }) => React.ReactElement | React.ReactNode)\n    | string\n    | number\n    | React.ReactNode;\n  CustomRender?: ({\n    dataIndex,\n    rowData,\n    cellData,\n    rowIndex,\n    colIndex,\n  }: {\n    dataIndex: K;\n    rowData: T;\n    cellData: T[K];\n    rowIndex: number;\n    colIndex: number;\n  }) => React.ReactElement;\n  cellProps?: Omit<TableCellProps, \"children\">;\n} & SkeletonBody<T>;\n\nexport type BodyCellProps<T> = {\n  Render: (({ rowData, rowIndex, colIndex }: { rowData: T; rowIndex: number; colIndex: number }) => React.ReactElement) | string | number | React.ReactNode;\n  CustomRender?: ({ rowData, rowIndex, colIndex }: { rowData: T; rowIndex: number; colIndex: number }) => React.ReactElement;\n  cellProps?: Omit<TableCellProps, \"children\">;\n} & SkeletonBody<T>;\n\nexport type BodyCellRender<T> = (BodyCellProps<T> | BodyCellPropsWithDataIndex<T>) & {\n  rowData: T;\n  dataIndex?: keyof T;\n  rowIndex: number;\n  colIndex: number;\n};\n\nexport type ColOptsWithDataIndex<T, K extends keyof T = keyof T> = {\n  headCell: HeadCellPropsWithDataIndex<T, K> | HeadCellPropsWithDataIndex<T, K>[];\n  commonCell: {\n    cellProps: TableCellProps;\n    isHidden?: boolean;\n    dataIndex: keyof T;\n  };\n  bodyCell: BodyCellPropsWithDataIndex<T>;\n};\n\nexport type ColOpts<T> = {\n  headCell: HeadCellProps<T> | HeadCellProps<T>[];\n  commonCell: {\n    cellProps: TableCellProps;\n    isHidden?: boolean;\n  };\n  bodyCell: BodyCellProps<T>;\n};\n\nexport type RowProps<T> = {\n  commonRow?: TableRowProps;\n  theadRow?: TableRowProps | TableRowProps[];\n  tbodyRow?: TableRowProps;\n  genTbodyRow?: ({ rowIndex, rowData }: { rowIndex: number; rowData?: T }) => TableRowProps;\n};\n\nexport type TableProps<T> = {\n  rowProps?: RowProps<T>;\n  dataSource?: T[];\n  sorter?: Sorter<T>;\n  pagination?: PaginationProps;\n  noResultText?: string;\n  CustomNoResult?: () => JSX.Element;\n  tableProps?: OriginalTableProps;\n  containerProps?: BoxProps;\n  skeletonRowCount?: number;\n  afterSorting?: () => void;\n  children?: ReactElement<any, (p: any) => ReactElement | null> | ReactElement<any, (p: any) => ReactElement | null>[];\n};\n","import { createContext, useCallback, useMemo, useState } from \"react\";\n\nimport { SortOrder } from \"./type\";\n\nimport type { Sorter } from \"./type\";\n\nexport const SorterContext = createContext<{\n  sorter: Sorter<any>;\n  onSort: (sorter: Sorter<any>) => void;\n}>({ sorter: { order: SortOrder.None }, onSort: () => void 0 });\n\nexport function useSorter<T extends Record<string, string>>(sorter?: Sorter<T>, dataSource?: T[], afterSorting?: () => void) {\n  const [innerSorter, setInnerSorter] = useState<Sorter<T>>({\n    order: SortOrder.None,\n    genCompareFn: (sorter: Sorter<T>) => (a: T, b: T) => {\n      const by = sorter.by as string;\n      if (by === null) return 0;\n      if (!(by in a) || !(by in b)) return 0;\n      return sorter.order === SortOrder.Asc ? a[by].length - b[by].length : b[by].length - a[by].length;\n    },\n    ...sorter,\n  });\n  const onSort = useCallback(\n    (sorter: Sorter<T>) => {\n      const newSorter = { ...innerSorter, ...sorter };\n      sorter.onSort?.(newSorter);\n      setInnerSorter(newSorter);\n    },\n    [innerSorter],\n  );\n\n  const sortedRows = useMemo(() => {\n    const tempRows = [...(dataSource || [])];\n    if (innerSorter.order !== SortOrder.None) {\n      tempRows.sort(innerSorter.genCompareFn?.(innerSorter));\n      afterSorting && afterSorting();\n    }\n    return tempRows;\n  }, [dataSource, innerSorter, afterSorting]);\n\n  return {\n    innerSorter,\n    onSort,\n    sortedRows,\n  };\n}\n","import { Box, Flex, Th, Tooltip, Icon, IconButton } from \"@chakra-ui/react\";\nimport { useCallback, useContext, useMemo } from \"react\";\nimport { AiOutlineDown, AiOutlineUp } from \"react-icons/ai\";\n\nimport { SortOrder } from \"./type\";\nimport { SorterContext } from \"./useSorter\";\n\nimport type { HeadCellProps, HeadCellRender, Sorter } from \"./type\";\n\nexport function HeadCell<T>({\n  Render,\n  CustomRender,\n  genCompareFn,\n  dataIndex,\n  rowIndex,\n  colIndex,\n  cellProps,\n  cancelSort,\n  sort,\n  sortedColor = \"blue.500\",\n  defaultOrder = SortOrder.Desc,\n  tooltipProps,\n}: HeadCellRender<T>) {\n  const { sorter, onSort } = useContext<{\n    sorter: Sorter<T>;\n    onSort: (sorter: Sorter<T>) => void;\n  }>(SorterContext);\n\n  const getColor = useCallback(\n    (targetOrder: SortOrder) => (sorter?.by === dataIndex && sorter?.order === targetOrder ? sortedColor : undefined),\n    [dataIndex, sorter, sortedColor],\n  );\n\n  const toggledSortOrder = useMemo(() => {\n    if (sorter?.by !== dataIndex || sorter?.order === SortOrder.None) {\n      return defaultOrder;\n    }\n    if (cancelSort && sorter?.order != defaultOrder) {\n      return SortOrder.None;\n    }\n    return sorter?.order === SortOrder.Asc ? SortOrder.Desc : SortOrder.Asc;\n  }, [dataIndex, sorter, defaultOrder, cancelSort]);\n\n  if (typeof CustomRender === \"function\") {\n    let content: React.ReactElement | null = null;\n    if (dataIndex) {\n      content = CustomRender({\n        dataIndex,\n        rowIndex,\n        colIndex,\n        sorter,\n        onSort,\n        genCompareFn,\n        defaultOrder,\n        cancelSort,\n        sorterClick: () => {\n          if (genCompareFn && sorter?.genCompareFn !== genCompareFn) {\n            onSort({\n              by: dataIndex,\n              order: toggledSortOrder,\n              genCompareFn: genCompareFn,\n            });\n          } else {\n            onSort({\n              by: dataIndex,\n              order: toggledSortOrder,\n            });\n          }\n        },\n        sortAscColor: getColor(SortOrder.Asc),\n        sortDescColor: getColor(SortOrder.Desc),\n        toggledSortOrder,\n      });\n    } else {\n      const CustomRenderWithoutDataIndex = CustomRender as Required<HeadCellProps<T>>[\"CustomRender\"];\n      content = CustomRenderWithoutDataIndex({\n        rowIndex,\n        colIndex,\n        sorter,\n        onSort,\n        sort,\n        defaultOrder,\n        sortAscColor: getColor(SortOrder.Asc),\n        sortDescColor: getColor(SortOrder.Desc),\n      });\n    }\n    return tooltipProps ? <Tooltip {...tooltipProps}>{content}</Tooltip> : content;\n  }\n\n  const content = typeof Render === \"function\" ? Render({ dataIndex: dataIndex || (\"\" as keyof T), rowIndex, colIndex }) : Render;\n\n  const arialLabel = `Sort by ${typeof Render === \"string\" ? Render : dataIndex.toString()}`;\n\n  const thContent = sort ? (\n    <Flex\n      display=\"inline-flex\"\n      as=\"button\"\n      width=\"auto\"\n      cursor=\"pointer\"\n      aria-label={arialLabel}\n      textTransform=\"inherit\"\n      fontWeight=\"semibold\"\n      onClick={() => {\n        if (genCompareFn && sorter?.genCompareFn !== genCompareFn) {\n          onSort({\n            by: dataIndex,\n            order: toggledSortOrder,\n            genCompareFn: genCompareFn,\n          });\n        } else {\n          onSort({\n            by: dataIndex,\n            order: toggledSortOrder,\n          });\n        }\n      }}\n      alignItems=\"center\"\n    >\n      {content}\n      <Flex transform=\"scale(0.7)\" marginStart=\"2px\" flexDirection=\"column\">\n        <IconButton icon={<Icon as={AiOutlineUp} />} aria-label=\"Sort ascend\" fontSize=\"xx-small\" color={getColor(SortOrder.Asc)} />\n        <IconButton icon={<Icon as={AiOutlineDown} />} aria-label=\"Sort descend\" fontSize=\"xx-small\" color={getColor(SortOrder.Desc)} />\n      </Flex>\n    </Flex>\n  ) : (\n    <Box fontWeight=\"semibold\">{content}</Box>\n  );\n\n  return (\n    <Th textTransform=\"none\" color=\"inherit\" {...cellProps}>\n      {tooltipProps ? <Tooltip {...tooltipProps}>{thContent}</Tooltip> : thContent}\n    </Th>\n  );\n}\n","import { Box } from \"@chakra-ui/react\";\n\nimport { BaseTable } from \"./BaseTable\";\nimport { Column } from \"./Column\";\nimport { Pagination } from \"./Pagination\";\nimport { useChildren } from \"./useChildren\";\nimport { useSkeleton } from \"./useSkeleton\";\nimport { SorterContext, useSorter } from \"./useSorter\";\n\nimport type { TableProps } from \"./type\";\n\nexport function Table<T extends Record<string, string>>({\n  dataSource,\n  sorter,\n  pagination,\n  noResultText: _noResultText,\n  CustomNoResult,\n  tableProps,\n  skeletonRowCount,\n  rowProps,\n  children,\n  containerProps,\n  afterSorting,\n}: TableProps<T>) {\n  const noResultText = \"empty\";\n  const { innerSorter, onSort, sortedRows } = useSorter(sorter, dataSource, afterSorting);\n  const { skeletonRows, skeletonVisible } = useSkeleton(dataSource, skeletonRowCount);\n\n  const ChildRender = useChildren(children, rowProps);\n\n  return (\n    <SorterContext.Provider\n      value={{\n        sorter: innerSorter,\n        onSort,\n      }}\n    >\n      <Box {...containerProps}>\n        <BaseTable {...tableProps}>{children && <ChildRender dataSource={skeletonVisible ? skeletonRows : sortedRows} />}</BaseTable>\n        {!skeletonVisible && sortedRows.length === 0 && (CustomNoResult ? <CustomNoResult /> : noResultText)}\n      </Box>\n      {!!pagination && <Pagination {...pagination} />}\n    </SorterContext.Provider>\n  );\n}\n\nTable.Column = Column;\n","import { useMemo } from \"react\";\n\nexport const useSkeleton = (hasData: any, skeletonRowCount = 0) => {\n  const skeletonRows = useMemo(() => new Array(skeletonRowCount).fill(null), [skeletonRowCount]);\n  return {\n    skeletonRows,\n    skeletonVisible: !hasData,\n  };\n};\n","import { Tbody, Thead, Tr } from \"@chakra-ui/react\";\nimport once from \"lodash/once\";\nimport { Children, Fragment, isValidElement, useCallback, useRef } from \"react\";\n\nimport { Cell } from \"./Cell\";\nimport { Column } from \"./Column\";\nimport { HeadCell } from \"./HeadCell\";\n\nimport type { ColumnBodyCellRender, ColumnHeadCellRender, ColumnParams } from \"./Column\";\nimport type { HeadCellProps, HeadCellPropsWithDataIndex, RowProps } from \"./type\";\nimport type { ReactElement } from \"react\";\n\nfunction useHead<T>(headCellRender: ColumnHeadCellRender[][], rowProps: RowProps<T> = {}) {\n  const renderRef = useRef<{\n    headCellRender: ColumnHeadCellRender[][];\n    rowProps: RowProps<T>;\n  }>({\n    headCellRender,\n    rowProps,\n  });\n\n  renderRef.current = { headCellRender, rowProps };\n\n  return useCallback(() => {\n    const {\n      headCellRender,\n      rowProps: { commonRow, theadRow },\n    } = renderRef.current;\n    return (\n      <Thead>\n        {headCellRender.map((headCell, rowIndex) => {\n          const trProps = {\n            ...commonRow,\n            ...(Array.isArray(theadRow) ? theadRow[rowIndex] : theadRow),\n          };\n          return (\n            <Tr key={rowIndex} {...trProps}>\n              {/* we invoke this as function instead of component, so React will not unmount rendered node when rerender */}\n              {headCell.map((CellRender, colIndex) => CellRender({ rowIndex, colIndex }))}\n            </Tr>\n          );\n        })}\n      </Thead>\n    );\n  }, []);\n}\n\nfunction useBody<T>(bodyCellRender: ColumnBodyCellRender<T>[], rowProps: RowProps<T> = {}) {\n  const renderRef = useRef<{\n    bodyCellRender: ColumnBodyCellRender<T>[];\n    rowProps: RowProps<T>;\n  }>({ bodyCellRender, rowProps });\n  renderRef.current = { bodyCellRender, rowProps };\n  return useCallback(({ dataSource }: { dataSource: T[] }) => {\n    const {\n      bodyCellRender,\n      rowProps: { commonRow, tbodyRow, genTbodyRow },\n    } = renderRef.current;\n    return (\n      <Tbody>\n        {dataSource.map((rowData, rowIndex) => {\n          const trProps = {\n            ...commonRow,\n            ...tbodyRow,\n          };\n          const dynamicProps = genTbodyRow ? genTbodyRow({ rowIndex, rowData }) : {};\n\n          return (\n            <Tr key={rowIndex} {...trProps} {...dynamicProps}>\n              {bodyCellRender.map((CellRender, colIndex) => CellRender({ rowData, rowIndex, colIndex }))}\n            </Tr>\n          );\n        })}\n      </Tbody>\n    );\n  }, []);\n}\n\nconst logOnceDev = once(() => {\n  console.warn(\"pls make sure:\\n 1. do not add hook into hyper column usage.\\n 2. hyper column usage do not support hot reload\");\n});\n\nexport function useChildren<T>(\n  children?: ReactElement<any, (p: any) => ReactElement | null> | ReactElement<any, (p: any) => ReactElement | null>[],\n  rowProps?: RowProps<T>,\n) {\n  const headCellRenderTemp: ColumnHeadCellRender[][] = [];\n  const bodyCellRenderTemp: ColumnBodyCellRender<T>[] = [];\n\n  let _children = children;\n\n  if (isValidElement(children) && children.type === Fragment) {\n    _children = children.props.children;\n  }\n\n  Children.forEach(_children, (child) => {\n    let _child: ReactElement | null = null;\n    if (child?.type === Column) {\n      _child = child;\n    } else if (typeof child?.type === \"function\") {\n      try {\n        if (process.env.NODE_ENV === \"development\" && process.env.IS_CLIENT) {\n          logOnceDev();\n        }\n        const rendered = child.type(child.props);\n        if (isValidElement(rendered) && rendered.type === Column) {\n          _child = rendered;\n        }\n        // eslint-disable-next-line no-empty\n      } catch (e) {}\n    }\n    // more usage write here\n    if (_child) {\n      const { dataIndex, cellProps, headCellProps, bodyCellProps, isHidden, headCellRender, bodyCellRender } = _child.props as ColumnParams<T>;\n\n      const headCellArrayRender: HeadCellProps<T>[] | HeadCellPropsWithDataIndex<T>[] = Array.isArray(headCellRender) ? headCellRender : [headCellRender];\n\n      const _childrenHeads = headCellArrayRender.map((headCellRender) => {\n        const _childrenHead = ({ rowIndex, colIndex }: { rowIndex: number; colIndex: number }) => (\n          <HeadCell<T>\n            key={dataIndex ? String(dataIndex) : `${rowIndex}-${colIndex}`}\n            rowIndex={rowIndex}\n            colIndex={colIndex}\n            dataIndex={dataIndex}\n            cellProps={{\n              ...cellProps,\n              ...headCellProps,\n              ...headCellRender.cellProps,\n            }}\n            {...headCellRender}\n          />\n        );\n        return _childrenHead;\n      });\n\n      const _childrenBody = ({ rowIndex, colIndex, rowData }: { rowIndex: number; colIndex: number; rowData: T }) => (\n        <Cell<T>\n          key={dataIndex ? String(dataIndex) : `${rowIndex}-${colIndex}`}\n          rowIndex={rowIndex}\n          colIndex={colIndex}\n          rowData={rowData}\n          dataIndex={dataIndex}\n          cellProps={{\n            ...cellProps,\n            ...bodyCellProps,\n            ...bodyCellRender.cellProps,\n          }}\n          {...bodyCellRender}\n        />\n      );\n\n      if (!isHidden) {\n        bodyCellRenderTemp.push(_childrenBody);\n        _childrenHeads.forEach((_childrenHead, rowIndex) => {\n          headCellRenderTemp[rowIndex] = headCellRenderTemp[rowIndex] || [];\n          headCellRenderTemp[rowIndex].push(_childrenHead);\n        });\n      }\n    }\n  });\n\n  const Head = useHead(headCellRenderTemp, rowProps);\n  const Body = useBody(bodyCellRenderTemp, rowProps);\n\n  // NOTE it is necessary to memo this render function, because we invoke this function as render Element\n  const Content = useCallback(\n    ({ dataSource }: { dataSource: T[] }) => (\n      <>\n        <Head />\n        <Body dataSource={dataSource} />\n      </>\n    ),\n    [Body, Head],\n  );\n\n  return Content;\n}\n","import { Box, Button, Code, Container, Flex, Heading, HStack, Text } from \"@chakra-ui/react\";\nimport { version as reactVersion } from \"@my-react/react\";\nimport { version as reactDOMVersion } from \"@my-react/react-dom\";\nimport { useIntl } from \"react-intl\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport { CONTAINER_WIDTH } from \"@client/config/container\";\nimport { mark } from \"@client/utils/markdown\";\nimport { getIsStaticGenerate } from \"@shared\";\n\nconst tsxMd = `\n\\`\\`\\`tsx\nimport { useState, useCallback } from '@my-react/react';\nimport { render } from '@my-react/react-dom';\n\nconst useCount = () => {\n  const [state, setState] = useState(0);\n  const add = useCallback(() => setState(i => i + 1), []);\n  const del = useCallback(() => setState(i => i - 1), []);\n\n  return [state, add, del];\n};\n\nconst App = () => {\n  const [state, add, del] = useCount();\n\n  return <div>\n    <p>{state}</p>;\n    <button onClick={add}>add</button>\n    <button onClick={del}>del</button>\n  </div>\n}\n\nrender(<App />, document.querySelector('#root'));\n\\`\\`\\`\n`;\n\nconst renderBody = mark.render(tsxMd);\n\nexport const MainSection = () => {\n  const navigate = useNavigate();\n\n  const { formatMessage } = useIntl();\n\n  return (\n    <Container maxWidth={CONTAINER_WIDTH} minHeight=\"100vh\">\n      <Flex justifyContent=\"space-between\" marginTop=\"4%\" flexDirection={{ base: \"column\", md: \"row\" }}>\n        <Box alignSelf=\"flex-start\" marginLeft={{ base: \"4%\", md: \"6%\", lg: \"8%\" }} maxWidth={{ base: \"100%\", md: \"40%\" }}>\n          <Heading as=\"h1\" fontSize={{ base: \"2xl\", md: \"3xl\", lg: \"5xl\" }} marginBottom=\"6\" color=\"red.400\">\n            {formatMessage({ id: \"@my-react\" })}\n          </Heading>\n          <Text fontSize={{ base: \"xl\", md: \"3xl\", lg: \"4xl\" }}>{formatMessage({ id: \"description\" })}</Text>\n          <Text fontSize=\"sm\" color=\"lightTextColor\" marginY=\"2\" lineHeight=\"180%\">\n            This website is built with <Code>@my-react</Code> project. <br /> Version: @my-react/react [{reactVersion}]; @my-react/react-dom [{reactDOMVersion}]\n          </Text>\n          <HStack marginTop=\"14\" spacing=\"4\" display={{ base: \"none\", md: \"flex\" }} fontSize={{ md: \"12px\", lg: \"14px\", xl: \"16px\" }}>\n            <Button\n              variant=\"solid\"\n              fontSize=\"inherit\"\n              borderRadius=\"full\"\n              colorScheme=\"messenger\"\n              onClick={() => navigate(getIsStaticGenerate() ? \"/MyReact/Blog\" : \"/Blog\")}\n            >\n              View Example\n            </Button>\n            <Button\n              variant=\"solid\"\n              fontSize=\"inherit\"\n              borderRadius=\"full\"\n              colorScheme=\"whatsapp\"\n              as=\"a\"\n              href=\"https://github.com/MrWangJustToDo/MyReact\"\n              target=\"_blank\"\n            >\n              View on GitHub\n            </Button>\n            <Button\n              variant=\"solid\"\n              fontSize=\"inherit\"\n              borderRadius=\"full\"\n              colorScheme=\"teal\"\n              display={{ base: \"none\", lg: \"inline-flex\" }}\n              as=\"a\"\n              href=\"https://mrwangjusttodo.github.io/MrWangJustToDo.io?overlay=open&playGround=MyReact\"\n              target=\"_blank\"\n            >\n              Online play\n            </Button>\n            <Button variant=\"solid\" fontSize=\"inherit\" borderRadius=\"full\" as=\"a\" href=\"https://www.npmjs.com/search?q=%40my-react\" target=\"_blank\">\n              View on NPM\n            </Button>\n          </HStack>\n        </Box>\n        <Box\n          className=\"typo\"\n          overflow={{ base: \"hidden\", lg: \"auto\" }}\n          border=\"1px solid\"\n          borderColor=\"cardBorderColor\"\n          marginRight={{ base: \"4%\", md: \"16%\" }}\n          marginTop={{ base: \"10%\", md: \"0\" }}\n          marginLeft={{ base: \"4%\", md: \"0\" }}\n          marginBottom={{ base: \"6%\" }}\n          borderRadius=\"0.8em\"\n          fontSize={{ base: \"sm\", lg: \"medium\" }}\n          sx={{\n            [\"pre\"]: {\n              margin: \"0\",\n            },\n          }}\n          dangerouslySetInnerHTML={{ __html: renderBody }}\n        />\n      </Flex>\n    </Container>\n  );\n};\n","import { Code, Container, Heading, Spacer } from \"@chakra-ui/react\";\n\nimport { Table } from \"@client/component\";\nimport { CONTAINER_WIDTH } from \"@client/config/container\";\n\nconst { Column } = Table;\n\nconst data = [\n  { \"@my-react/react (hook)\": \"useState\", \"@my-react/react\": \"createELement\", \"@my-react/react-dom\": \"render\", \"@my-react/react-reactive\": \"createReactive\" },\n  { \"@my-react/react (hook)\": \"useCallback\", \"@my-react/react\": \"cloneElement\", \"@my-react/react-dom\": \"hydrate\", \"@my-react/react-reactive\": \"reactive\" },\n  { \"@my-react/react (hook)\": \"useMemo\", \"@my-react/react\": \"isValidElement\", \"@my-react/react-dom\": \"renderToString\", \"@my-react/react-reactive\": \"ref\" },\n  { \"@my-react/react (hook)\": \"useReducer\", \"@my-react/react\": \"Children\", \"@my-react/react-dom\": \"findDOMNode\", \"@my-react/react-reactive\": \"computed\" },\n  { \"@my-react/react (hook)\": \"useRef\", \"@my-react/react\": \"forwardRef\", \"@my-react/react-dom\": \"createPortal\", \"@my-react/react-reactive\": \"watch\" },\n  {\n    \"@my-react/react (hook)\": \"useEffect\",\n    \"@my-react/react\": \"lazy\",\n    \"@my-react/react-dom\": \"unmountComponentAtNode\",\n    \"@my-react/react-reactive\": \"onBeforeMount\",\n  },\n  {\n    \"@my-react/react (hook)\": \"useLayoutEffect\",\n    \"@my-react/react\": \"createContext\",\n    \"@my-react/react-dom\": \"renderToNodeStream\",\n    \"@my-react/react-reactive\": \"onBeforeUnmount\",\n  },\n  {\n    \"@my-react/react (hook)\": \"useImperativeHandle\",\n    \"@my-react/react\": \"createRef\",\n    \"@my-react/react-dom\": \"createRoot\",\n    \"@my-react/react-reactive\": \"onBeforeUpdate\",\n  },\n  { \"@my-react/react (hook)\": \"useContext\", \"@my-react/react\": \"memo\", \"@my-react/react-dom\": \"hydrateRoot\", \"@my-react/react-reactive\": \"onMounted\" },\n  { \"@my-react/react (hook)\": \"useDebugValue\", \"@my-react/react\": \"Component\", \"@my-react/react-dom\": \"\", \"@my-react/react-reactive\": \"onUnmounted\" },\n  { \"@my-react/react (hook)\": \"useSignal (new)\", \"@my-react/react\": \"PureComponent\", \"@my-react/react-dom\": \"\", \"@my-react/react-reactive\": \"onUpdated\" },\n  { \"@my-react/react (hook)\": \"useDeferredValue\", \"@my-react/react\": \"StrictMode\", \"@my-react/react-dom\": \"\", \"@my-react/react-reactive\": \"\" },\n  { \"@my-react/react (hook)\": \"useId\", \"@my-react/react\": \"Fragment\", \"@my-react/react-dom\": \"\", \"@my-react/react-reactive\": \"\" },\n  { \"@my-react/react (hook)\": \"useInsertionEffect\", \"@my-react/react\": \"Suspense\", \"@my-react/react-dom\": \"\", \"@my-react/react-reactive\": \"\" },\n  { \"@my-react/react (hook)\": \"useSyncExternalStore\", \"@my-react/react\": \"KeepLive(TODO)\", \"@my-react/react-dom\": \"\", \"@my-react/react-reactive\": \"\" },\n  { \"@my-react/react (hook)\": \"useTransition\", \"@my-react/react\": \"\", \"@my-react/react-dom\": \"\", \"@my-react/react-reactive\": \"\" },\n];\n\nexport const ApiSection = () => {\n  return (\n    <Container maxWidth={CONTAINER_WIDTH} minHeight=\"100vh\">\n      <Heading marginLeft={{ base: \"4%\", md: \"6%\", lg: \"8%\" }} as=\"h4\" fontSize={{ base: \"lg\", lg: \"2xl\" }}>\n        Packages\n      </Heading>\n      <Spacer marginTop={{ base: \"4\", md: \"6\", lg: \"8\", xl: \"10\" }} />\n      <Table\n        dataSource={data}\n        containerProps={{\n          padding: { base: \"2\", md: \"4\", lg: \"6\" },\n          marginX: \"auto\",\n          maxWidth: { base: \"90%\", lg: \"80%\" },\n          border: \"1px solid\",\n          borderRadius: \"md\",\n          borderColor: \"cardBorderColor\",\n        }}\n        tableProps={{ borderRadius: \"md\" }}\n        rowProps={{\n          theadRow: {\n            backgroundColor: \"cardBorderColor\",\n          },\n        }}\n      >\n        <Column<(typeof data)[0]>\n          headCellRender={{\n            cellProps: { fontSize: \"1.1rem\", borderLeftRadius: \"2px\" },\n            Render: \"@my-react/react\",\n          }}\n          dataIndex=\"@my-react/react\"\n          bodyCellRender={{\n            Render: ({ cellData }) => {\n              return <Code>{cellData}</Code>;\n            },\n          }}\n        />\n        <Column<(typeof data)[0]>\n          headCellRender={{\n            cellProps: { fontSize: \"1.1rem\" },\n            Render: \"@my-react/react-dom\",\n          }}\n          dataIndex=\"@my-react/react-dom\"\n          bodyCellRender={{\n            Render: ({ cellData }) => {\n              return <Code>{cellData}</Code>;\n            },\n          }}\n        />\n        <Column<(typeof data)[0]>\n          dataIndex=\"@my-react/react (hook)\"\n          headCellRender={{\n            cellProps: { fontSize: \"1.1rem\" },\n            Render: \"@my-react/react (hook)\",\n          }}\n          bodyCellRender={{\n            Render: ({ cellData }) => {\n              return <Code>{cellData}</Code>;\n            },\n          }}\n        />\n        <Column<(typeof data)[0]>\n          headCellRender={{\n            cellProps: { fontSize: \"1.1rem\", borderRightRadius: \"2px\" },\n            Render: \"@my-react/react-reactive\",\n          }}\n          dataIndex=\"@my-react/react-reactive\"\n          bodyCellRender={{\n            Render: ({ cellData }) => {\n              return <Code>{cellData}</Code>;\n            },\n          }}\n        />\n      </Table>\n    </Container>\n  );\n};\n","import { ScrollContent, ScrollControl, ScrollControlTool, ScrollSection, ScrollToTop } from \"@client/component\";\nimport { ApiSection, MainSection } from \"@client/container/Section\";\n\nconst Page = () => {\n  return (\n    <>\n      <ScrollControl initialSectionLength={1}>\n        <ScrollContent>\n          <ScrollSection>\n            <MainSection />\n          </ScrollSection>\n\n          <ScrollSection>\n            <ApiSection />\n          </ScrollSection>\n\n          {/* <ScrollSection>\n            <Box width=\"100vw\" height=\"100vh\" backgroundColor=\"aliceblue\" position=\"relative\">\n              <Box position=\"absolute\" left=\"30%\" top=\"50%\" transform=\"translateY(-50%)\" border=\"1px\" borderRadius=\"4px\" padding=\"2\">\n                <Section>\n                  <Text fontSize=\"24px\">2 page</Text>\n                </Section>\n              </Box>\n            </Box>\n          </ScrollSection>\n\n          <ScrollSection>\n            <Box width=\"100vw\" height=\"100vh\" backgroundColor=\"whatsapp.300\" position=\"relative\">\n              <Box position=\"absolute\" left=\"30%\" top=\"50%\" transform=\"translateY(-50%)\" border=\"1px\" borderRadius=\"4px\" padding=\"2\">\n                <Section>\n                  <Text fontSize=\"24px\">3 page</Text>\n                </Section>\n              </Box>\n            </Box>\n          </ScrollSection>\n\n          <ScrollSection>\n            <Box width=\"100vw\" height=\"100vh\" backgroundColor=\"yellow.400\" position=\"relative\">\n              <Box position=\"absolute\" left=\"30%\" top=\"50%\" transform=\"translateY(-50%)\" border=\"1px\" borderRadius=\"4px\" padding=\"2\">\n                <Section>\n                  <Text fontSize=\"24px\">4 page</Text>\n                </Section>\n              </Box>\n            </Box>\n          </ScrollSection>\n\n          <ScrollSection>\n            <Box width=\"100vw\" height=\"120vh\" backgroundColor=\"twitter.200\" position=\"relative\">\n              <Box position=\"absolute\" left=\"30%\" top=\"50%\" transform=\"translateY(-50%)\" border=\"1px\" borderRadius=\"4px\" padding=\"2\">\n                <Section>\n                  <Text fontSize=\"24px\">5 page</Text>\n                </Section>\n              </Box>\n            </Box>\n          </ScrollSection> */}\n        </ScrollContent>\n\n        <ScrollControlTool />\n        <ScrollToTop />\n      </ScrollControl>\n    </>\n  );\n};\n\nexport default Page;\n\nexport const isStatic = true;\n","// 语法高亮\nimport Hljs from \"highlight.js/lib/core\";\nimport css from \"highlight.js/lib/languages/css\";\nimport java from \"highlight.js/lib/languages/java\";\nimport javascript from \"highlight.js/lib/languages/javascript\";\nimport json from \"highlight.js/lib/languages/json\";\nimport less from \"highlight.js/lib/languages/less\";\nimport scss from \"highlight.js/lib/languages/scss\";\nimport shell from \"highlight.js/lib/languages/shell\";\nimport sql from \"highlight.js/lib/languages/sql\";\nimport typescript from \"highlight.js/lib/languages/typescript\";\nimport xml from \"highlight.js/lib/languages/xml\";\n// import \"highlight.js/styles/base16/dracula.css\";\n\nHljs.registerLanguage(\"css\", css);\nHljs.registerLanguage(\"json\", json);\nHljs.registerLanguage(\"java\", java);\nHljs.registerLanguage(\"javascript\", javascript);\nHljs.registerLanguage(\"typescript\", typescript);\nHljs.registerLanguage(\"less\", less);\nHljs.registerLanguage(\"scss\", scss);\nHljs.registerLanguage(\"shell\", shell);\nHljs.registerLanguage(\"xml\", xml);\nHljs.registerLanguage(\"sql\", sql);\n\nexport const hljs = Hljs;\n","import Mark from \"markdown-it\";\n\nimport { hljs } from \"./highlight\";\n\nconst temp = new Mark();\n\nconst mark = new Mark({\n  html: true,\n  xhtmlOut: true,\n  breaks: true,\n  highlight: function (str, lang) {\n    if (lang && hljs.getLanguage(lang)) {\n      try {\n        const transformValue = hljs.highlight(str, {\n          language: lang,\n          ignoreIllegals: true,\n        }).value;\n        const transformArr = transformValue.split(/\\n/).slice(0, -1);\n        const minWidth = String(transformArr.length).length - 0.2;\n        const html = transformArr.reduce(\n          (p: string, c: string, idx: number) =>\n            `${p}<span class='no-select d-inline-block text-center border-right pr-2 mr-2 border-dark' style='min-width: ${minWidth}em; line-height: 1.5'>${\n              idx + 1\n            }</span>${c}\\n`,\n          `<div class='w-100 position-absolute' style='left: 0; top: 0; font-size: 0px'>\n            <b class='no-select position-absolute text-info' style='left: 10px; font-size: 12px; top: 4px;'>${lang}</b>\n            <div class='position-absolute w-100 border-bottom border-dark' style='left: 0; top: 24px;'></div>\n          </div>`\n        );\n        return `<pre class=\"rounded position-relative\"><code class=\"hljs ${lang}\" style='padding-top: 30px;'>${html}</code></pre>`;\n      } catch (__) {\n        void 0;\n      }\n    }\n    return '<pre class=\"rounded\"><code class=\"hljs\">' + temp.utils.escapeHtml(str) + \"</code></pre>\";\n  },\n});\n\nconst addIdForHeads = (className?: string) => {\n  if (className) {\n    const headings = document.querySelector(className)?.querySelectorAll(\"h1, h2, h3, h4, h5, h6, h7\") || [];\n    const headingMap: { [props: string]: number } = {};\n    Array.prototype.forEach.call(headings, function (heading) {\n      const id = heading.id\n        ? heading.id\n        : heading.textContent\n            .trim()\n            .toLowerCase()\n            .split(\" \")\n            .join(\"-\")\n            .replace(/[!@#$%^&*():]/gi, \"\")\n            .replace(/\\//gi, \"-\");\n      headingMap[id] = !isNaN(headingMap[id]) ? ++headingMap[id] : 0;\n      if (headingMap[id]) {\n        heading.id = id + \"-\" + headingMap[id];\n      } else {\n        heading.id = id;\n      }\n    });\n    return !!headings.length;\n  }\n};\n\nconst markNOLineNumber = new Mark({\n  html: true,\n  xhtmlOut: true,\n  breaks: true,\n  highlight: function (str, lang) {\n    if (lang && hljs.getLanguage(lang)) {\n      try {\n        const transformValue = hljs.highlight(str, {\n          language: lang,\n          ignoreIllegals: true,\n        }).value;\n        return `<pre class=\"rounded bg-dark\"><code class=\"bg-dark hljs ${lang}\">${transformValue}</code></pre>`;\n      } catch (__) {\n        void 0;\n      }\n    }\n    return `<pre class=\"rounded bg-dark\"><code class=\"bg-dark hljs\">${temp.utils.escapeHtml(str)}</code></pre>`;\n  },\n});\n\nexport { mark, markNOLineNumber, addIdForHeads };\n"],"names":["CONTAINER_WIDTH","ScrollControlContext","createContext","totalSection","currentSection","setTotalSection","_length","setCurrentSection","_index","onNextSection","onPrevSection","useScrollControl","useContext","ScrollControl","_ref","onSectionIndexChange","children","initialSectionLength","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","prevSection","usePrevious","onSectionIndexChangeRef","useCallbackRef","i","useEffect","context","useMemo","_jsx","Provider","value","ScrollSectionContext","ref","current","ScrollViewContext","inViewArray","setCurrentView","_inView","ScrollSection","index","useRef","_useScrollView","inView","useInView","amount","margin","length","Box","position","overflow","ScrollContent","validElement","scrollY","useScroll","Children","element","isValidElement","type","push","count","Array","fill","setInViewArray","last","newInViewArray","_toConsumableArray","_useScrollControl","setCurrentSectionRef","prev","handler","throttle","l","leading","trailing","onChange","clearListeners","useSafeLayoutEffect","cloneElement","_Arrow","className","width","height","viewBox","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","Arrow","memo","ScrollToTop","fontSize","right","bottom","color","textAlign","verticalAlign","borderRadius","zIndex","display","base","md","alignItems","justifyContent","onClick","window","scrollTo","top","behavior","Icon","as","ScrollControlTool","render","clickHandler","targetElement","document","querySelector","concat","_document$scrollingEl","rect","getBoundingClientRect","scrollingElement","scrollTop","array","Flex","flexDirection","Wrap","spacing","map","_","WrapItem","isSelect","cursor","sx","backgroundColor","border","BaseTable","restProps","Object","assign","_objectDestructuringEmpty","TableContainer","Table","_objectSpread","variant","Column","dataIndex","cellProps","headCellProps","bodyCellProps","isHidden","headCellRender","bodyCellRender","_Fragment","Navigator","props","Button","size","borderColor","textStyle","fontWeight","_active","background","_hover","Pagination","page","total","_ref$pageSize","pageSize","preButtonProps","nextButtonProps","_objectWithoutProperties","_excluded","_usePagination","totalPage","Math","ceil","hasNextPage","hasPrePage","usePagination","_jsxs","leftIcon","AiOutlineLeft","marginEnd","rightIcon","AiOutlineRight","lg","ErrorCatch","_Component","_inherits","_super","_this","_classCallCheck","_len","arguments","args","_key","call","apply","state","error","stack","hasError","_createClass","key","info","this","setState","message","componentStack","_this$state","console","Component","Td","resProps","OriginalTd","CellRender","Render","CustomRender","rowIndex","colIndex","rowData","cellData","Cell","_ref2","_ref2$showSkeleton","showSkeleton","_ref3","Skeleton","_excluded2","DefaultSkeleton","SortOrder","SorterContext","sorter","order","None","onSort","HeadCell","genCompareFn","cancelSort","sort","_ref$sortedColor","sortedColor","_ref$defaultOrder","defaultOrder","Desc","tooltipProps","_useContext","getColor","useCallback","targetOrder","by","undefined","toggledSortOrder","Asc","content","sorterClick","sortAscColor","sortDescColor","Tooltip","arialLabel","toString","thContent","textTransform","transform","marginStart","IconButton","icon","AiOutlineUp","AiOutlineDown","Th","dataSource","pagination","CustomNoResult","noResultText","tableProps","skeletonRowCount","rowProps","containerProps","_useSorter","afterSorting","a","b","innerSorter","setInnerSorter","_sorter$onSort","newSorter","sortedRows","_innerSorter$genCompa","tempRows","useSorter","_useSkeleton","hasData","skeletonRows","skeletonVisible","useSkeleton","ChildRender","headCellRenderTemp","bodyCellRenderTemp","_children","Fragment","child","_child","rendered","e","_childrenHeads","isArray","String","_ref4","forEach","_childrenHead","Head","renderRef","_renderRef$current","_renderRef$current$ro","commonRow","theadRow","Thead","headCell","trProps","Tr","useHead","Body","_renderRef$current2","_renderRef$current2$r","tbodyRow","genTbodyRow","Tbody","dynamicProps","useBody","_ref5","useChildren","once","warn","renderBody","mark","MainSection","navigate","useNavigate","formatMessage","useIntl","Container","maxWidth","minHeight","marginTop","alignSelf","marginLeft","Heading","marginBottom","id","Text","marginY","lineHeight","Code","reactVersion","reactDOMVersion","HStack","xl","colorScheme","getIsStaticGenerate","href","target","marginRight","_defineProperty","dangerouslySetInnerHTML","__html","data","ApiSection","Spacer","padding","marginX","borderLeftRadius","borderRightRadius","isStatic","Hljs","css","json","java","javascript","typescript","less","scss","shell","xml","sql","hljs","temp","Mark","html","xhtmlOut","breaks","highlight","str","lang","getLanguage","transformArr","language","ignoreIllegals","split","slice","minWidth","reduce","p","c","idx","__","utils","escapeHtml","markNOLineNumber","transformValue"],"sourceRoot":""}