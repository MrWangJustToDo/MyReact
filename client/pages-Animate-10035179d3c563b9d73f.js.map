{"version":3,"file":"pages-Animate-10035179d3c563b9d73f.js","mappings":"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","sources":["webpack://@my-react/ssr-example/./src/client/config/container.ts","webpack://@my-react/ssr-example/./src/client/pages/Animate.tsx"],"sourcesContent":["export const CONTAINER_WIDTH = 1580;\n","import { Heading, VStack, Slider, SliderFilledTrack, SliderThumb, SliderTrack, HStack, Text, SimpleGrid, Container } from \"@chakra-ui/react\";\nimport { motion } from \"framer-motion\";\nimport { useState } from \"react\";\n\nimport { CONTAINER_WIDTH } from \"@client/config/container\";\n\nconst variants = {\n  visible: (i) => ({\n    opacity: 1,\n    transition: {\n      delay: i * 0.3,\n    },\n  }),\n  hidden: { opacity: 0 },\n};\n\nexport default function Index() {\n  const [x, setX] = useState(0);\n  const [y, setY] = useState(0);\n  const [rotate, setRotate] = useState(0);\n\n  return (\n    <Container maxWidth={CONTAINER_WIDTH}>\n      <Heading>framer animation</Heading>\n      <SimpleGrid columns={2} columnGap=\"8\">\n        <motion.div\n          style={{ width: \"100px\", height: \"100px\", backgroundColor: \"red\", borderRadius: \"6px\", margin: \"20px\" }}\n          animate={{ x, y, rotate }}\n          transition={{ type: \"spring\" }}\n        />\n        <motion.div\n          style={{ width: \"100px\", height: \"100px\", backgroundColor: \"red\", borderRadius: \"6px\", margin: \"20px\" }}\n          animate={{ x, y, rotate }}\n          transition={{ type: \"spring\" }}\n        />\n        <motion.div\n          style={{ width: \"100px\", height: \"100px\", backgroundColor: \"red\", borderRadius: \"6px\", margin: \"20px\" }}\n          animate={{ x, y, rotate }}\n          transition={{ type: \"spring\" }}\n        />\n\n        <motion.div\n          style={{ width: \"100px\", height: \"100px\", backgroundColor: \"red\", borderRadius: \"6px\", margin: \"20px\" }}\n          initial={{ opacity: 0, scale: 0 }}\n          animate={{ opacity: 1, scale: 1, x, y, rotate }}\n          transition={{\n            duration: 0.8,\n            delay: 0.5,\n            ease: [0, 0.71, 0.2, 1.01],\n          }}\n        />\n\n        <motion.div\n          style={{ width: \"100px\", height: \"100px\", backgroundColor: \"red\", borderRadius: \"6px\", margin: \"20px\" }}\n          animate={{\n            scale: [1, 2, 2, 1, 1],\n            rotate: [0, 0, 180, 180, 0],\n            borderRadius: [\"0%\", \"0%\", \"50%\", \"50%\", \"0%\"],\n          }}\n          transition={{\n            duration: 2,\n            ease: \"easeInOut\",\n            times: [0, 0.2, 0.5, 0.8, 1],\n            repeat: Infinity,\n            repeatDelay: 1,\n          }}\n        />\n\n        <motion.div\n          style={{ width: \"100px\", height: \"100px\", backgroundColor: \"red\", borderRadius: \"6px\", margin: \"20px\" }}\n          animate={{ x, y, rotate }}\n          /**\n           * Setting the initial keyframe to \"null\" will use\n           * the current value to allow for interruptable keyframes.\n           */\n          whileHover={{ scale: [null, 1.5, 1.4] }}\n          transition={{ duration: 0.3 }}\n        />\n\n        <motion.button\n          style={{ width: \"100px\", height: \"100px\", backgroundColor: \"red\", borderRadius: \"6px\", margin: \"20px\" }}\n          initial={{ opacity: 0.6 }}\n          animate={{ x, y, rotate }}\n          whileHover={{\n            scale: 1.2,\n            transition: { duration: 1 },\n          }}\n          whileTap={{ scale: 0.9 }}\n          whileInView={{ opacity: 1 }}\n        />\n\n        {[1, 2, 3].map((i) => (\n          <motion.div\n            layout\n            style={{ width: \"100px\", height: \"100px\", backgroundColor: \"red\", borderRadius: \"6px\", margin: \"20px\" }}\n            key={i}\n            custom={i}\n            initial=\"hidden\"\n            transition={{ ease: \"linear\" }}\n            animate=\"visible\"\n            variants={variants}\n          />\n        ))}\n      </SimpleGrid>\n\n      <VStack width=\"100%\" spacing=\"2\" position=\"relative\" zIndex=\"dropdown\" marginBottom=\"20\">\n        <HStack width=\"100%\" spacing=\"5\">\n          <Text whiteSpace=\"nowrap\" width=\"10%\">\n            X: {x}\n          </Text>\n          <Slider value={x} onChange={setX} max={200}>\n            <SliderTrack>\n              <SliderFilledTrack />\n            </SliderTrack>\n            <SliderThumb />\n          </Slider>\n        </HStack>\n\n        <HStack width=\"100%\" spacing=\"5\">\n          <Text whiteSpace=\"nowrap\" width=\"10%\">\n            Y: {y}\n          </Text>\n          <Slider value={y} onChange={setY} max={400}>\n            <SliderTrack>\n              <SliderFilledTrack />\n            </SliderTrack>\n            <SliderThumb />\n          </Slider>\n        </HStack>\n\n        <HStack width=\"100%\" spacing=\"5\">\n          <Text whiteSpace=\"nowrap\" width=\"10%\">\n            Rotate: {rotate}\n          </Text>\n          <Slider max={180} min={-180} value={rotate} onChange={setRotate}>\n            <SliderTrack>\n              <SliderFilledTrack />\n            </SliderTrack>\n            <SliderThumb />\n          </Slider>\n        </HStack>\n      </VStack>\n    </Container>\n  );\n}\n\nexport const isStatic = true;\n"],"names":["CONTAINER_WIDTH","variants","visible","i","opacity","transition","delay","hidden","Index","_useState","useState","_useState2","_slicedToArray","x","setX","_useState3","_useState4","y","setY","_useState5","_useState6","rotate","setRotate","_jsxs","Container","maxWidth","children","_jsx","Heading","SimpleGrid","columns","columnGap","motion","style","width","height","backgroundColor","borderRadius","margin","animate","type","initial","scale","duration","ease","times","repeat","Infinity","repeatDelay","whileHover","whileTap","whileInView","map","layout","custom","VStack","spacing","position","zIndex","marginBottom","HStack","Text","whiteSpace","Slider","value","onChange","max","SliderTrack","SliderFilledTrack","SliderThumb","min","isStatic"],"sourceRoot":""}