{"version":3,"file":"pages-Antd-0e96b92a39337d14d18e.js","mappings":"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","sources":["webpack://@my-react/ssr-example/./src/client/pages/Antd.tsx"],"sourcesContent":["import { Carousel, Slider, Switch, Calendar, Tree, Space, TimePicker, TreeSelect, Button, Dropdown, Tooltip, Menu, message, Select, AutoComplete } from \"antd\";\nimport dayjs from \"dayjs\";\nimport React, { useState } from \"react\";\n\nimport type { MenuProps } from \"antd/lib/menu\";\nimport type { DataNode, TreeProps } from \"antd/lib/tree\";\nimport type { Dayjs } from \"dayjs\";\n\nconst treeData: DataNode[] = [\n  {\n    title: \"0-0\",\n    key: \"0-0\",\n    children: [\n      {\n        title: \"0-0-0\",\n        key: \"0-0-0\",\n        children: [\n          { title: \"0-0-0-0\", key: \"0-0-0-0\" },\n          { title: \"0-0-0-1\", key: \"0-0-0-1\" },\n          { title: \"0-0-0-2\", key: \"0-0-0-2\" },\n        ],\n      },\n      {\n        title: \"0-0-1\",\n        key: \"0-0-1\",\n        children: [\n          { title: \"0-0-1-0\", key: \"0-0-1-0\" },\n          { title: \"0-0-1-1\", key: \"0-0-1-1\" },\n          { title: \"0-0-1-2\", key: \"0-0-1-2\" },\n        ],\n      },\n      {\n        title: \"0-0-2\",\n        key: \"0-0-2\",\n      },\n    ],\n  },\n  {\n    title: \"0-1\",\n    key: \"0-1\",\n    children: [\n      { title: \"0-1-0-0\", key: \"0-1-0-0\" },\n      { title: \"0-1-0-1\", key: \"0-1-0-1\" },\n      { title: \"0-1-0-2\", key: \"0-1-0-2\" },\n    ],\n  },\n  {\n    title: \"0-2\",\n    key: \"0-2\",\n  },\n];\n\nconst { TreeNode } = TreeSelect;\n\nconst onChange = (time: Dayjs | null, timeString: string) => {\n  console.log(time, timeString);\n};\n\nconst handleButtonClick = (e: React.MouseEvent<HTMLButtonElement>) => {\n  message.info(\"Click on left button.\");\n  console.log(\"click left button\", e);\n};\n\nconst handleMenuClick: MenuProps[\"onClick\"] = (e) => {\n  message.info(\"Click on menu item.\");\n  console.log(\"click\", e);\n};\n\nconst menu = (\n  <Menu\n    onClick={handleMenuClick}\n    items={[\n      {\n        label: \"1st menu item\",\n        key: \"1\",\n        icon: <>1</>,\n      },\n      {\n        label: \"2nd menu item\",\n        key: \"2\",\n        icon: <>1</>,\n      },\n      {\n        label: \"3rd menu item\",\n        key: \"3\",\n        icon: <>1</>,\n      },\n    ]}\n  />\n);\n\nconst { Option } = Select;\n\nconst handleChange = (value: string[]) => {\n  console.log(`selected ${value}`);\n};\n\nconst mockVal = (str: string, repeat = 1) => ({\n  value: str.repeat(repeat),\n});\n\nconst AntDesignComponent = () => {\n  const [treeLine, setTreeLine] = useState(true);\n  const [showLeafIcon, setShowLeafIcon] = useState(false);\n  const [expandedKeys, setExpandedKeys] = useState<React.Key[]>([\"0-0-0\", \"0-0-1\"]);\n  const [checkedKeys, setCheckedKeys] = useState<React.Key[]>([\"0-0-0\"]);\n  const [selectedKeys, setSelectedKeys] = useState<React.Key[]>([]);\n  const [autoExpandParent, setAutoExpandParent] = useState<boolean>(true);\n\n  const [value, setValue] = useState(\"\");\n  const [options, setOptions] = useState<{ value: string }[]>([]);\n\n  const onSearch = (searchText: string) => {\n    setOptions(!searchText ? [] : [mockVal(searchText), mockVal(searchText, 2), mockVal(searchText, 3)]);\n  };\n\n  const onSelect_1 = (data: string) => {\n    console.log(\"onSelect\", data);\n  };\n\n  const onChange_1 = (data: string) => {\n    setValue(data);\n  };\n\n  const onExpand = (expandedKeysValue: React.Key[]) => {\n    console.log(\"onExpand\", expandedKeysValue);\n    // if not set autoExpandParent to false, if children expanded, parent can not collapse.\n    // or, you can remove all expanded children keys.\n    setExpandedKeys(expandedKeysValue);\n    setAutoExpandParent(false);\n  };\n\n  const onCheck: TreeProps[\"onCheck\"] = (checkedKeysValue) => {\n    console.log(\"onCheck\", checkedKeysValue);\n    if (Array.isArray(checkedKeysValue)) {\n      setCheckedKeys(checkedKeysValue);\n    }\n  };\n\n  const onSelect = (selectedKeysValue: React.Key[], info: any) => {\n    console.log(\"onSelect\", info);\n    setSelectedKeys(selectedKeysValue);\n  };\n\n  return (\n    <>\n      <h2>Ant Design</h2>\n      <Switch />\n      <br />\n      <h2>AutoComplete 有bug 需要debug 源码了</h2>\n      <AutoComplete options={options} style={{ width: 200 }} onSelect={onSelect_1} onSearch={onSearch} placeholder=\"input here\" />\n      <br />\n      <br />\n      <AutoComplete\n        value={value}\n        options={options}\n        style={{ width: 200 }}\n        onSelect={onSelect_1}\n        onSearch={onSearch}\n        onChange={onChange_1}\n        placeholder=\"control mode\"\n      />\n      <br />\n      <br />\n      <Space direction=\"vertical\">\n        <Switch checkedChildren=\"treeLine\" unCheckedChildren=\"treeLine\" checked={treeLine} onChange={() => setTreeLine(!treeLine)} />\n        <Switch\n          disabled={!treeLine}\n          checkedChildren=\"showLeafIcon\"\n          unCheckedChildren=\"showLeafIcon\"\n          checked={showLeafIcon}\n          onChange={() => setShowLeafIcon(!showLeafIcon)}\n        />\n        <TreeSelect treeLine={treeLine && { showLeafIcon }} style={{ width: 300 }}>\n          <TreeNode value=\"parent 1\" title=\"parent 1\">\n            <TreeNode value=\"parent 1-0\" title=\"parent 1-0\">\n              <TreeNode value=\"leaf1\" title=\"my leaf\" />\n              <TreeNode value=\"leaf2\" title=\"your leaf\" />\n            </TreeNode>\n            <TreeNode value=\"parent 1-1\" title=\"parent 1-1\">\n              <TreeNode value=\"sss\" title=\"sss\" />\n            </TreeNode>\n          </TreeNode>\n        </TreeSelect>\n        <TimePicker onChange={onChange} defaultOpenValue={dayjs(\"00:00:00\", \"HH:mm:ss\")} />\n      </Space>\n      <br />\n      <Select\n        mode=\"multiple\"\n        style={{ width: \"100%\" }}\n        placeholder=\"select one country\"\n        defaultValue={[\"china\"]}\n        onChange={handleChange}\n        optionLabelProp=\"label\"\n      >\n        <Option value=\"china\" label=\"China\">\n          <div className=\"demo-option-label-item\">\n            <span role=\"img\" aria-label=\"China\">\n              🇨🇳\n            </span>\n            China (中国)\n          </div>\n        </Option>\n        <Option value=\"usa\" label=\"USA\">\n          <div className=\"demo-option-label-item\">\n            <span role=\"img\" aria-label=\"USA\">\n              🇺🇸\n            </span>\n            USA (美国)\n          </div>\n        </Option>\n        <Option value=\"japan\" label=\"Japan\">\n          <div className=\"demo-option-label-item\">\n            <span role=\"img\" aria-label=\"Japan\">\n              🇯🇵\n            </span>\n            Japan (日本)\n          </div>\n        </Option>\n        <Option value=\"korea\" label=\"Korea\">\n          <div className=\"demo-option-label-item\">\n            <span role=\"img\" aria-label=\"Korea\">\n              🇰🇷\n            </span>\n            Korea (韩国)\n          </div>\n        </Option>\n      </Select>\n      <br />\n      <Space wrap>\n        <Dropdown.Button onClick={handleButtonClick} overlay={menu}>\n          Dropdown\n        </Dropdown.Button>\n        <Dropdown.Button overlay={menu} placement=\"bottom\" icon={<>2</>}>\n          Dropdown\n        </Dropdown.Button>\n        <Dropdown.Button onClick={handleButtonClick} overlay={menu} disabled>\n          Dropdown\n        </Dropdown.Button>\n        <Dropdown.Button\n          overlay={menu}\n          buttonsRender={([leftButton, rightButton]) => [\n            <Tooltip title=\"tooltip\" key=\"leftButton\">\n              {leftButton}\n            </Tooltip>,\n            React.cloneElement(rightButton as React.ReactElement<any, string>, { loading: true }),\n          ]}\n        >\n          With Tooltip\n        </Dropdown.Button>\n        <Dropdown overlay={menu}>\n          <Button>\n            <Space>Button</Space>\n          </Button>\n        </Dropdown>\n        <Dropdown.Button onClick={handleButtonClick} overlay={menu}>\n          Danger\n        </Dropdown.Button>\n      </Space>\n      <br />\n      <Slider />\n      <br />\n      <Calendar style={{ width: \"400px\" }} />\n      <br />\n      <Tree\n        checkable\n        onExpand={onExpand}\n        expandedKeys={expandedKeys}\n        autoExpandParent={autoExpandParent}\n        onCheck={onCheck}\n        checkedKeys={checkedKeys}\n        onSelect={onSelect}\n        selectedKeys={selectedKeys}\n        treeData={treeData}\n      />\n      <br />\n      <div style={{ width: \"300px\", borderRadius: \"0.6rem\", overflow: \"hidden\" }}>\n        <Carousel autoplay>\n          <div>\n            <div style={{ height: \"200px\", backgroundColor: \"#ccc\", textAlign: \"center\", fontSize: \"1.6rem\" }}>1</div>\n          </div>\n          <div>\n            <div style={{ height: \"200px\", backgroundColor: \"#ccc\", textAlign: \"center\", fontSize: \"1.6rem\" }}>2</div>\n          </div>\n          <div>\n            <div style={{ height: \"200px\", backgroundColor: \"#ccc\", textAlign: \"center\", fontSize: \"1.6rem\" }}>3</div>\n          </div>\n          <div>\n            <div style={{ height: \"200px\", backgroundColor: \"#ccc\", textAlign: \"center\", fontSize: \"1.6rem\" }}>4</div>\n          </div>\n        </Carousel>\n      </div>\n    </>\n  );\n};\n\nexport default AntDesignComponent;\n\nexport const isStatic = true;\n"],"names":["treeData","title","key","children","TreeNode","TreeSelect","onChange","time","timeString","console","log","handleButtonClick","e","message","menu","_jsx","Menu","onClick","items","label","icon","_Fragment","Option","Select","handleChange","value","concat","mockVal","str","repeat","arguments","length","undefined","_useState","useState","_useState2","_slicedToArray","treeLine","setTreeLine","_useState3","_useState4","showLeafIcon","setShowLeafIcon","_useState5","_useState6","expandedKeys","setExpandedKeys","_useState7","_useState8","checkedKeys","setCheckedKeys","_useState9","_useState10","selectedKeys","setSelectedKeys","_useState11","_useState12","autoExpandParent","setAutoExpandParent","_useState13","_useState14","setValue","_useState15","_useState16","options","setOptions","onSearch","searchText","onSelect_1","data","_jsxs","Switch","AutoComplete","style","width","onSelect","placeholder","Space","direction","checkedChildren","unCheckedChildren","checked","disabled","TimePicker","defaultOpenValue","dayjs","mode","defaultValue","optionLabelProp","className","role","wrap","Dropdown","overlay","placement","buttonsRender","_ref","_ref2","leftButton","rightButton","Tooltip","React","loading","Button","Slider","Calendar","Tree","checkable","onExpand","expandedKeysValue","onCheck","checkedKeysValue","Array","isArray","selectedKeysValue","info","borderRadius","overflow","Carousel","autoplay","height","backgroundColor","textAlign","fontSize","isStatic"],"sourceRoot":""}