{"version":3,"file":"pages-Foo-427cdf6cfd186f55a275.js","mappings":"6QAEaA,GAAuBC,EAAAA,EAAAA,eAAc,CAChDC,aAAc,EACdC,eAAgB,EAChBC,gBAAiB,SAACC,GAAgC,EAClDC,kBAAmB,SAACC,GAA+B,EACnDC,cAAe,WAAkB,EACjCC,cAAe,WAAkB,IAGtBC,EAAmB,WAAH,OAASC,EAAAA,EAAAA,YAAWX,EAAqB,E,WCEzDY,EAAgB,SAAHC,GAAqF,IAA/EC,EAAoBD,EAApBC,qBAAsBC,EAAQF,EAARE,SAAUC,EAAoBH,EAApBG,qBAC9DC,GAA4CC,EAAAA,EAAAA,UAAS,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAhDd,EAAcgB,EAAA,GAAEb,EAAiBa,EAAA,GAExCE,GAAwCH,EAAAA,EAAAA,UAASF,GAAwB,GAAEM,GAAAF,EAAAA,EAAAA,GAAAC,EAAA,GAApEnB,EAAYoB,EAAA,GAAElB,EAAekB,EAAA,GAE9BC,GAAcC,EAAAA,EAAAA,IAAYrB,GAE1BsB,GAA0BC,EAAAA,EAAAA,GAAeZ,GAEzCN,GAAgBkB,EAAAA,EAAAA,IAAe,WAEjCpB,EADEH,IAAmBD,EAAe,EAClB,EAEA,SAACyB,GAAC,OAAKA,EAAI,CAAC,EAElC,IAEMlB,GAAgBiB,EAAAA,EAAAA,IAAe,WAEjCpB,EADqB,IAAnBH,EACgBD,EAAe,EAEf,SAACyB,GAAC,OAAKA,EAAI,CAAC,EAElC,KAEAC,EAAAA,EAAAA,YAAU,WACRH,EAAwBtB,EAAgBoB,EAE1C,GAAG,CAACpB,EAAgBsB,IAEpB,IAAMI,GAAUC,EAAAA,EAAAA,UACd,iBAAO,CAAE5B,aAAAA,EAAcC,eAAAA,EAAgBK,cAAAA,EAAeC,cAAAA,EAAeH,kBAAAA,EAAmBF,gBAAAA,EAAiB,GACzG,CAACD,EAAgBK,EAAeC,EAAeP,IAGjD,OAAO6B,EAAAA,EAAAA,IAAC/B,EAAqBgC,SAAQ,CAACC,MAAOJ,EAAQd,SAAEA,GACzD,E,4CC7CamB,GAAuBjC,EAAAA,EAAAA,eAA+C,CAAEkC,IAAK,CAAEC,QAAS,QCFxFC,GAAoBpC,EAAAA,EAAAA,eAAc,CAC7CqC,YAAa,GACbC,eAAgB,SAACC,EAAkBjC,GAA+B,ICQvDkC,EAAgB,SAAH5B,GAAgD,IAA1CE,EAAQF,EAARE,SAAU2B,EAAK7B,EAAL6B,MAClCP,GAAMQ,EAAAA,EAAAA,QAAO,MACbd,GAAUC,EAAAA,EAAAA,UAAQ,iBAAO,CAAEK,IAAAA,EAAK,GAAG,IACjChC,EAAmBO,IAAnBP,eACRyC,GDTiCjC,EAAAA,EAAAA,YAAW0B,GCSpCE,EAAcK,EAAdL,eAAgBD,EAAWM,EAAXN,YAElBO,GAASC,EAAAA,EAAAA,GAAUX,EAAK,CAAEY,OAAQ,OAAQC,OAAQ,eAOxD,OALApB,EAAAA,EAAAA,YAAU,WACJc,SACJH,EAAeM,EAAQH,EACzB,GAAG,CAACA,EAAOG,EAAQN,EAAgBD,EAAYW,UAG7ClB,EAAAA,EAAAA,IAACG,EAAqBF,SAAQ,CAACC,MAAOJ,EAAQd,UAC5CgB,EAAAA,EAAAA,IAACmB,EAAAA,GAAG,CAACf,IAAKA,EAAKgB,SAAS,WAAWC,SAAS,SAAS,sBAAqBV,EAAO,cAAavC,IAAmBuC,EAAM3B,SACpHA,KAIT,ECpBasC,EAAgB,SAAHxC,GAAkE,IAA5DE,EAAQF,EAARE,SACxBuC,EAAmD,GAEjDC,GAAYC,EAAAA,EAAAA,KAAZD,QAGRE,EAAAA,SAAAA,QAAiB1C,GAAU,SAAC2C,IACtBC,EAAAA,EAAAA,gBAAmCD,IAAYA,EAAQE,OAASnB,GAClEa,EAAaO,KAAKH,EAEtB,IAEA,IAAMI,EAAQR,EAAaL,OAE3BhC,GAAsCC,EAAAA,EAAAA,WAAoB,kBAAM6C,MAAeD,GAAOE,MAAK,EAAM,IAAC7C,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3FqB,EAAWnB,EAAA,GAAE8C,EAAc9C,EAAA,IAElCS,EAAAA,EAAAA,YAAU,WACRqC,EAAeF,MAAMD,GAAOE,MAAK,GACnC,GAAG,CAACF,IAEJ,IAAMvB,GAAiBb,EAAAA,EAAAA,IAAe,SAACmB,EAAiBH,GACtD,GAAIJ,EAAYI,KAAWG,EAAQ,CACjC,IAAMqB,GAAcC,EAAAA,EAAAA,GAAO7B,GAC3B4B,EAAexB,GAASG,EACxBoB,EAAeC,EACjB,CACF,IAEMrC,GAAUC,EAAAA,EAAAA,UAAQ,iBAAO,CAAEQ,YAAAA,EAAaC,eAAAA,EAAgB,GAAG,CAACD,EAAaC,IAE/E6B,EAA+D1D,IAAvDN,EAAegE,EAAfhE,gBAAiBE,EAAiB8D,EAAjB9D,kBAAmBH,EAAciE,EAAdjE,eAEtCkE,GAAuB3C,EAAAA,EAAAA,IAAe,SAAC4C,GACvCA,EACEhC,EAAYnC,EAAiB,IAC/BG,EAAkBH,EAAiB,GAGjCmC,EAAYnC,EAAiB,IAC/BG,EAAkBH,EAAiB,EAGzC,IAyBA,OAvBAyB,EAAAA,EAAAA,YAAU,WACR,IAAI2C,EAAO,EACLC,GAAUC,EAAAA,EAAAA,IACd,SAACC,GAEGL,IADEK,EAAIH,IAKRA,EAAOG,CACT,GACA,IACA,CAAEC,SAAS,EAAMC,UAAU,IAG7B,OADArB,EAAQsB,SAASL,GACV,kBAAMjB,EAAQuB,gBAAgB,CACvC,GAAG,CAACT,EAAsBd,KAE1BwB,EAAAA,EAAAA,IAAoB,WAClB3E,EAAgB0D,GAChBxD,EAAkB,EACpB,GAAG,CAACwD,EAAO1D,EAAiBE,KAG1ByB,EAAAA,EAAAA,IAACM,EAAkBL,SAAQ,CAACC,MAAOJ,EAAQd,SACxC0C,EAAAA,SAAAA,IAAaH,GAAc,SAACI,EAAShB,GAAK,OAAKsC,EAAAA,EAAAA,cAAatB,EAAS,CAAEhB,MAAOA,GAAQ,KAG7F,E,WClFMuC,EAAS,SAAHpE,GAA6C,IAAvCqE,EAASrE,EAATqE,UAChB,OACEnD,EAAAA,EAAAA,IAAA,OAAKmD,UAAWA,EAAWC,MAAM,KAAKC,OAAO,IAAIC,QAAQ,WAAWrB,KAAK,OAAOsB,MAAM,6BAA4BvE,UAChHgB,EAAAA,EAAAA,IAAA,QAAMwD,EAAE,gBAAgBC,OAAO,eAAeC,YAAY,MAAMC,cAAc,QAAQC,eAAe,WAG3G,EAEaC,GAAQC,EAAAA,EAAAA,MAAKZ,GCFba,EAAc,WACzB,IAAQ3F,EAAmBO,IAAnBP,eACR,OACE4B,EAAAA,EAAAA,IAACmB,EAAAA,GAAG,CACF6C,SAAS,OACT5C,SAAS,QACT6C,MAAM,OACNC,OAAO,OACPd,MAAM,OACNC,OAAO,OACPc,MAAM,aACNC,UAAU,SACVC,cAAc,SACdC,aAAa,WACbC,OAAO,SACPC,QAAS,CAAEC,KAAMrG,EAAiB,EAAI,OAAS,OAAQsG,GAAI,QAC3DC,WAAW,SACXC,eAAe,SACfC,QAAS,WACPC,OAAOC,SAAS,CAAEC,IAAK,EAAGC,SAAU,UACtC,EAAEjG,UAEFgB,EAAAA,EAAAA,IAACkF,EAAAA,GAAI,CAACC,GAAItB,EAAOT,MAAM,OAAOC,OAAO,UAG3C,EC1Ba+B,EAAoB,SAAHtG,GAIxB,IAHJuG,EAAMvG,EAANuG,OAIAhD,EAAyC1D,IAAjCR,EAAYkE,EAAZlE,aAAcC,EAAciE,EAAdjE,eAEhBkH,GAAe3F,EAAAA,EAAAA,IAAe,SAACgB,GACnC,IAAM4E,EAAgBC,SAASC,cAAc,yBAADC,OAA0B/E,EAAK,OAC3E,GAAI4E,EAAe,KAAAI,EACXC,EAAOL,EAAcM,wBACrBb,IAAgC,QAAzBW,EAAAH,SAASM,wBAAgB,IAAAH,OAAA,EAAzBA,EAA2BI,YAAa,GAAKH,EAAKZ,IAC/DF,OAAOC,SAAS,CAAEC,IAAAA,EAAKC,SAAU,UACnC,CACF,IAEMe,GAAQjG,EAAAA,EAAAA,UAAQ,kBAAMiC,MAAM7D,GAAc8D,KAAK,EAAE,GAAc,CAAC9D,IAEtE,OACE6B,EAAAA,EAAAA,IAACiG,EAAAA,GAAI,CACH5C,OAAO,QACPjC,SAAS,QACTgC,MAAM,OACNoB,QAAS,CAAEC,KAAM,OAAQC,GAAI,QAC7BwB,cAAc,SACdlB,IAAI,IACJf,MAAM,QACNU,WAAW,SACXC,eAAe,SACfL,OAAO,WACP,sBAAgBvF,SAEfZ,GAAkBD,EAAe,IAChC6B,EAAAA,EAAAA,IAACmG,EAAAA,GAAI,CAACC,QAAQ,IAAGpH,SACdgH,EAAMK,KAAI,SAACC,EAAG1G,GAAC,OACdI,EAAAA,EAAAA,IAACuG,EAAAA,GAAQ,CAAAvH,SACNqG,EACCA,EAAO,CAAE1E,MAAOf,EAAG4G,SAAUpI,IAAmBwB,EAAGiF,QAAS,kBAAMS,EAAa1F,EAAE,KAEjFI,EAAAA,EAAAA,IAACmB,EAAAA,GAAG,CACFiC,MAAM,OACNC,OAAO,OACPoD,OAAO,UACPnC,aAAa,OACboC,GAAI,CACFC,gBAAiBvI,IAAmBwB,EAAI,MAAQ,UAChDgH,OAAQxI,IAAmBwB,EAAI,OAAS,qBAE1CiF,QAAS,kBAAMS,EAAa1F,EAAE,KAbrBA,EAgBJ,OAMvB,E,iCCvDaiH,EAAW,SAAH/H,GAA8C,IAAxCE,EAAQF,EAARE,SACjBoB,GPJ4BxB,EAAAA,EAAAA,YAAWuB,GOIvCC,IACA0G,GAAoBrF,EAAAA,EAAAA,GAAU,CAAEsF,OAAQ3G,EAAK4G,KAAM,IAAKC,OAAQ,CAAC,SAAU,WAA3EH,gBACFI,GAAUC,EAAAA,EAAAA,GAAaL,EAAiB,CAAC,EAAG,GAAK,GAAI,CAAC,EAAG,EAAG,IAC5DM,GAAID,EAAAA,EAAAA,GAAaL,EAAiB,CAAC,EAAG,GAAK,GAAI,EAAE,IAAK,EAAG,MAO/D,OALAjH,EAAAA,EAAAA,YAAU,WAER,OADAiH,EAAgBhE,SAASuE,QAAQC,KAC1B,kBAAMR,EAAgB/D,gBAAgB,CAC/C,GAAG,CAAC+D,KAEG9G,EAAAA,EAAAA,IAACuH,EAAAA,EAAAA,IAAU,CAACC,MAAO,CAAEN,QAAAA,EAASE,EAAAA,GAAIpI,SAAEA,GAC7C,EAEayI,EAAU,SAAHC,GAA8C,IAAxC1I,EAAQ0I,EAAR1I,SAGxB,OAFkB2I,EAAAA,EAAAA,OAGT3H,EAAAA,EAAAA,IAAC6G,EAAQ,CAAA7H,SAAUA,GAAL,MAEdgB,EAAAA,EAAAA,IAAC6G,EAAQ,CAAA7H,SAAUA,GAAL,IAEzB,E,WCrBe,SAAS4I,EAAK9I,GAA2B,IAAxB+I,EAAG/I,EAAH+I,IAC9B,OACE7H,EAAAA,EAAAA,IAAA8H,EAAAA,GAAA,CAAA9I,UACE+I,EAAAA,EAAAA,IAAClJ,EAAa,CAACI,qBAAsB,EAAED,SAAA,EACrC+I,EAAAA,EAAAA,IAACzG,EAAa,CAAAtC,SAAA,EACZgB,EAAAA,EAAAA,IAACU,EAAa,CAAA1B,UACZ+I,EAAAA,EAAAA,IAAC5G,EAAAA,GAAG,CAACiC,MAAM,QAAQC,OAAO,QAAQsD,gBAAgB,eAAevF,SAAS,WAAUpC,SAAA,EAClFgB,EAAAA,EAAAA,IAACgI,EAAAA,GAAO,CAAAhJ,SAAC,cACT+I,EAAAA,EAAAA,IAACE,EAAAA,GAAI,CAAAjJ,SAAA,CAAC,eAAa6I,MACnB7H,EAAAA,EAAAA,IAACmB,EAAAA,GAAG,CAACC,SAAS,WAAW8G,KAAK,MAAMlD,IAAI,MAAMmD,UAAU,mBAAmBvB,OAAO,MAAMtC,aAAa,MAAM8D,QAAQ,IAAGpJ,UACpHgB,EAAAA,EAAAA,IAACyH,EAAO,CAAAzI,UACNgB,EAAAA,EAAAA,IAACqI,EAAAA,GAAI,CAACrE,SAAS,OAAMhF,SAAC,qBAM9BgB,EAAAA,EAAAA,IAACU,EAAa,CAAA1B,UACZgB,EAAAA,EAAAA,IAACmB,EAAAA,GAAG,CAACiC,MAAM,QAAQC,OAAO,QAAQsD,gBAAgB,YAAYvF,SAAS,WAAUpC,UAC/EgB,EAAAA,EAAAA,IAACmB,EAAAA,GAAG,CAACC,SAAS,WAAW8G,KAAK,MAAMlD,IAAI,MAAMmD,UAAU,mBAAmBvB,OAAO,MAAMtC,aAAa,MAAM8D,QAAQ,IAAGpJ,UACpHgB,EAAAA,EAAAA,IAACyH,EAAO,CAAAzI,UACNgB,EAAAA,EAAAA,IAACqI,EAAAA,GAAI,CAACrE,SAAS,OAAMhF,SAAC,oBAM9BgB,EAAAA,EAAAA,IAACU,EAAa,CAAA1B,UACZgB,EAAAA,EAAAA,IAACmB,EAAAA,GAAG,CAACiC,MAAM,QAAQC,OAAO,QAAQsD,gBAAgB,eAAevF,SAAS,WAAUpC,UAClFgB,EAAAA,EAAAA,IAACmB,EAAAA,GAAG,CAACC,SAAS,WAAW8G,KAAK,MAAMlD,IAAI,MAAMmD,UAAU,mBAAmBvB,OAAO,MAAMtC,aAAa,MAAM8D,QAAQ,IAAGpJ,UACpHgB,EAAAA,EAAAA,IAACyH,EAAO,CAAAzI,UACNgB,EAAAA,EAAAA,IAACqI,EAAAA,GAAI,CAACrE,SAAS,OAAMhF,SAAC,oBAM9BgB,EAAAA,EAAAA,IAACU,EAAa,CAAA1B,UACZgB,EAAAA,EAAAA,IAACmB,EAAAA,GAAG,CAACiC,MAAM,QAAQC,OAAO,QAAQsD,gBAAgB,aAAavF,SAAS,WAAUpC,UAChFgB,EAAAA,EAAAA,IAACmB,EAAAA,GAAG,CAACC,SAAS,WAAW8G,KAAK,MAAMlD,IAAI,MAAMmD,UAAU,mBAAmBvB,OAAO,MAAMtC,aAAa,MAAM8D,QAAQ,IAAGpJ,UACpHgB,EAAAA,EAAAA,IAACyH,EAAO,CAAAzI,UACNgB,EAAAA,EAAAA,IAACqI,EAAAA,GAAI,CAACrE,SAAS,OAAMhF,SAAC,oBAM9BgB,EAAAA,EAAAA,IAACU,EAAa,CAAA1B,UACZgB,EAAAA,EAAAA,IAACmB,EAAAA,GAAG,CAACiC,MAAM,QAAQC,OAAO,QAAQsD,gBAAgB,cAAcvF,SAAS,WAAUpC,UACjFgB,EAAAA,EAAAA,IAACmB,EAAAA,GAAG,CAACC,SAAS,WAAW8G,KAAK,MAAMlD,IAAI,MAAMmD,UAAU,mBAAmBvB,OAAO,MAAMtC,aAAa,MAAM8D,QAAQ,IAAGpJ,UACpHgB,EAAAA,EAAAA,IAACyH,EAAO,CAAAzI,UACNgB,EAAAA,EAAAA,IAACqI,EAAAA,GAAI,CAACrE,SAAS,OAAMhF,SAAC,uBAOhCgB,EAAAA,EAAAA,IAACoF,EAAiB,KAClBpF,EAAAA,EAAAA,IAAC+D,EAAW,QAIpB,CAEO,IAAMuE,GAAW,EAEXC,EAAoC,eAAAb,GAAAc,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,OAAAD,IAAAA,MAAA,SAAAE,GAAA,cAAAA,EAAApG,KAAAoG,EAAAC,MAAA,cAAAD,EAAAC,KAAA,GAC5CC,EAAAA,EAAAA,IAAM,KAAK,cAAAF,EAAAG,OAAA,SACV,CAAEC,MAAO,CAAElB,IAAK,SAAS,wBAAAc,EAAAK,OAAA,GAAAN,EAAA,KACjC,kBAHgD,OAAAhB,EAAAuB,MAAA,KAAAC,UAAA,I","sources":["webpack://@my-react/ssr-example/./src/client/component/ScrollControl/ScrollControlContext.ts","webpack://@my-react/ssr-example/./src/client/component/ScrollControl/ScrollControl.tsx","webpack://@my-react/ssr-example/./src/client/component/ScrollControl/ScrollSectionContext.ts","webpack://@my-react/ssr-example/./src/client/component/ScrollControl/ScrollViewContext.ts","webpack://@my-react/ssr-example/./src/client/component/ScrollControl/ScrollSection.tsx","webpack://@my-react/ssr-example/./src/client/component/ScrollControl/ScrollContent.tsx","webpack://@my-react/ssr-example/./src/client/component/Arrow.tsx","webpack://@my-react/ssr-example/./src/client/component/ScrollControl/ScrollToTop.tsx","webpack://@my-react/ssr-example/./src/client/component/ScrollControl/ScrollControlTool.tsx","webpack://@my-react/ssr-example/./src/client/component/Section.tsx","webpack://@my-react/ssr-example/./src/client/pages/Foo.tsx"],"sourcesContent":["import { createContext, useContext } from \"react\";\n\nexport const ScrollControlContext = createContext({\n  totalSection: 0,\n  currentSection: 0,\n  setTotalSection: (_length: number): void => void 0,\n  setCurrentSection: (_index: number): void => void 0,\n  onNextSection: (): void => void 0,\n  onPrevSection: (): void => void 0,\n});\n\nexport const useScrollControl = () => useContext(ScrollControlContext);\n","import { useCallbackRef, usePrevious } from \"@chakra-ui/react\";\nimport { useEffect, useMemo, useState } from \"react\";\n\nimport { ScrollControlContext } from \"./ScrollControlContext\";\n\nimport type { ReactNode } from \"react\";\n\ntype ScrollControlProps = {\n  initialSectionLength?: number;\n  onSectionIndexChange?: (currentIndex: number, prevIndex: number) => void;\n  children: ReactNode;\n};\n\nexport const ScrollControl = ({ onSectionIndexChange, children, initialSectionLength }: ScrollControlProps) => {\n  const [currentSection, setCurrentSection] = useState(0);\n  \n  const [totalSection, setTotalSection] = useState(initialSectionLength || 0);\n\n  const prevSection = usePrevious(currentSection);\n\n  const onSectionIndexChangeRef = useCallbackRef(onSectionIndexChange);\n\n  const onNextSection = useCallbackRef(() => {\n    if (currentSection === totalSection - 1) {\n      setCurrentSection(0);\n    } else {\n      setCurrentSection((i) => i + 1);\n    }\n  });\n\n  const onPrevSection = useCallbackRef(() => {\n    if (currentSection === 0) {\n      setCurrentSection(totalSection - 1);\n    } else {\n      setCurrentSection((i) => i - 1);\n    }\n  });\n\n  useEffect(() => {\n    onSectionIndexChangeRef(currentSection, prevSection);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentSection, onSectionIndexChangeRef]);\n\n  const context = useMemo(\n    () => ({ totalSection, currentSection, onNextSection, onPrevSection, setCurrentSection, setTotalSection }),\n    [currentSection, onNextSection, onPrevSection, totalSection]\n  );\n\n  return <ScrollControlContext.Provider value={context}>{children}</ScrollControlContext.Provider>;\n};\n","import { createContext, useContext } from \"react\";\n\nimport type { RefObject } from \"react\";\n\nexport const ScrollSectionContext = createContext<{ ref: RefObject<HTMLElement> }>({ ref: { current: null } });\n\nexport const useScrollSection = () => useContext(ScrollSectionContext);\n","import { createContext, useContext } from \"react\";\n\nexport const ScrollViewContext = createContext({\n  inViewArray: [] as boolean[],\n  setCurrentView: (_inView: boolean, _index: number): void => void 0,\n});\n\nexport const useScrollView = () => useContext(ScrollViewContext);\n","import { Box } from \"@chakra-ui/react\";\nimport { useInView } from \"framer-motion\";\nimport { useEffect, useMemo, useRef } from \"react\";\n\nimport { useScrollControl } from \"./ScrollControlContext\";\nimport { ScrollSectionContext } from \"./ScrollSectionContext\";\nimport { useScrollView } from \"./ScrollViewContext\";\n\nimport type { ReactNode } from \"react\";\n\nexport type ScrollSectionProps = { children: ReactNode; index?: number };\n\nexport const ScrollSection = ({ children, index }: ScrollSectionProps) => {\n  const ref = useRef(null);\n  const context = useMemo(() => ({ ref }), []);\n  const { currentSection } = useScrollControl();\n  const { setCurrentView, inViewArray } = useScrollView();\n\n  const inView = useInView(ref, { amount: \"some\", margin: \"-300px 0px\" });\n\n  useEffect(() => {\n    if (index === null || index === undefined) return;\n    setCurrentView(inView, index);\n  }, [index, inView, setCurrentView, inViewArray.length]);\n\n  return (\n    <ScrollSectionContext.Provider value={context}>\n      <Box ref={ref} position=\"relative\" overflow=\"hidden\" data-scroll-section={index} data-active={currentSection === index}>\n        {children}\n      </Box>\n    </ScrollSectionContext.Provider>\n  );\n};\n","import { useCallbackRef, useSafeLayoutEffect } from \"@chakra-ui/react\";\nimport { useScroll } from \"framer-motion\";\nimport { throttle } from \"lodash-es\";\nimport { Children, cloneElement, isValidElement, useEffect, useMemo, useState } from \"react\";\n\nimport { useScrollControl } from \"./ScrollControlContext\";\nimport { ScrollSection } from \"./ScrollSection\";\nimport { ScrollViewContext } from \"./ScrollViewContext\";\n\nimport type { ScrollSectionProps } from \"./ScrollSection\";\nimport type { ReactElement } from \"react\";\n\nexport const ScrollContent = ({ children }: { children: ReactElement | ReactElement[] }) => {\n  const validElement: ReactElement<ScrollSectionProps>[] = [];\n\n  const { scrollY } = useScroll();\n\n  // filter all the valid `ScrollSection` element\n  Children.forEach(children, (element) => {\n    if (isValidElement<ScrollSectionProps>(element) && element.type === ScrollSection) {\n      validElement.push(element);\n    }\n  });\n\n  const count = validElement.length;\n\n  const [inViewArray, setInViewArray] = useState<boolean[]>(() => Array<boolean>(count).fill(false));\n\n  useEffect(() => {\n    setInViewArray(Array(count).fill(false));\n  }, [count]);\n\n  const setCurrentView = useCallbackRef((inView: boolean, index: number) => {\n    if (inViewArray[index] !== inView) {\n      const newInViewArray = [...inViewArray];\n      newInViewArray[index] = inView;\n      setInViewArray(newInViewArray);\n    }\n  });\n\n  const context = useMemo(() => ({ inViewArray, setCurrentView }), [inViewArray, setCurrentView]);\n\n  const { setTotalSection, setCurrentSection, currentSection } = useScrollControl();\n\n  const setCurrentSectionRef = useCallbackRef((prev: boolean) => {\n    if (prev) {\n      if (inViewArray[currentSection - 1]) {\n        setCurrentSection(currentSection - 1);\n      }\n    } else {\n      if (inViewArray[currentSection + 1]) {\n        setCurrentSection(currentSection + 1);\n      }\n    }\n  });\n\n  useEffect(() => {\n    let last = 0;\n    const handler = throttle(\n      (l: number) => {\n        if (l > last) {\n          setCurrentSectionRef(false);\n        } else {\n          setCurrentSectionRef(true);\n        }\n        last = l;\n      },\n      100,\n      { leading: true, trailing: true }\n    );\n    scrollY.onChange(handler);\n    return () => scrollY.clearListeners();\n  }, [setCurrentSectionRef, scrollY]);\n\n  useSafeLayoutEffect(() => {\n    setTotalSection(count);\n    setCurrentSection(0);\n  }, [count, setTotalSection, setCurrentSection]);\n\n  return (\n    <ScrollViewContext.Provider value={context}>\n      {Children.map(validElement, (element, index) => cloneElement(element, { index: index }))}\n    </ScrollViewContext.Provider>\n  );\n};\n","import { memo } from \"react\";\n\nconst _Arrow = ({ className }: { className: string }) => {\n  return (\n    <svg className={className} width=\"14\" height=\"8\" viewBox=\"0 0 14 8\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M1 7L7 1L13 7\" stroke=\"currentColor\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n    </svg>\n  );\n};\n\nexport const Arrow = memo(_Arrow);\n","import { Box, Icon } from \"@chakra-ui/react\";\n\n// import { smoothScroll } from \"@client/utils/scroll\";\n\nimport { Arrow } from \"../Arrow\";\n\nimport { useScrollControl } from \"./ScrollControlContext\";\n\nexport const ScrollToTop = () => {\n  const { currentSection } = useScrollControl();\n  return (\n    <Box\n      fontSize=\"20px\"\n      position=\"fixed\"\n      right=\"10px\"\n      bottom=\"20px\"\n      width=\"20px\"\n      height=\"20px\"\n      color=\"orangeSand\"\n      textAlign=\"center\"\n      verticalAlign=\"middle\"\n      borderRadius=\"999999px\"\n      zIndex=\"sticky\"\n      display={{ base: currentSection > 0 ? \"flex\" : \"none\", md: \"none\" }}\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      onClick={() => {\n        window.scrollTo({ top: 0, behavior: \"smooth\" });\n      }}\n    >\n      <Icon as={Arrow} width=\"20px\" height=\"20px\" />\n    </Box>\n  );\n};\n","import { Box, Flex, useCallbackRef, Wrap, WrapItem } from \"@chakra-ui/react\";\nimport { useMemo } from \"react\";\n\nimport { useScrollControl } from \"./ScrollControlContext\";\n\nimport type { ReactElement } from \"react\";\n\nexport const ScrollControlTool = ({\n  render,\n}: {\n  render?: ({ index, isSelect, onClick }: { index: number; isSelect: boolean; onClick: () => void }) => ReactElement;\n}) => {\n  const { totalSection, currentSection } = useScrollControl();\n\n  const clickHandler = useCallbackRef((index: number) => {\n    const targetElement = document.querySelector(`[data-scroll-section=\"${index}\"]`);\n    if (targetElement) {\n      const rect = targetElement.getBoundingClientRect();\n      const top = (document.scrollingElement?.scrollTop || 0) + rect.top;\n      window.scrollTo({ top, behavior: \"smooth\" });\n    }\n  });\n\n  const array = useMemo(() => Array(totalSection).fill(0) as number[], [totalSection]);\n\n  return (\n    <Flex\n      height=\"100vh\"\n      position=\"fixed\"\n      width=\"30px\"\n      display={{ base: \"none\", md: \"flex\" }}\n      flexDirection=\"column\"\n      top=\"0\"\n      right=\"100px\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      zIndex=\"dropdown\"\n      data-scroll-tool\n    >\n      {currentSection <= totalSection - 1 && (\n        <Wrap spacing=\"6\">\n          {array.map((_, i) => (\n            <WrapItem key={i}>\n              {render ? (\n                render({ index: i, isSelect: currentSection === i, onClick: () => clickHandler(i) })\n              ) : (\n                <Box\n                  width=\"10px\"\n                  height=\"10px\"\n                  cursor=\"pointer\"\n                  borderRadius=\"full\"\n                  sx={{\n                    backgroundColor: currentSection === i ? \"red\" : \"initial\",\n                    border: currentSection === i ? \"none\" : \"1px solid #e2e2e2\",\n                  }}\n                  onClick={() => clickHandler(i)}\n                />\n              )}\n            </WrapItem>\n          ))}\n        </Wrap>\n      )}\n    </Flex>\n  );\n};\n","import { motion, useScroll, useTransform } from \"framer-motion\";\nimport { useEffect } from \"react\";\n\nimport { useIsMounted } from \"../hooks\";\n\nimport { useScrollSection } from \"./ScrollControl\";\n\nimport type { ReactNode } from \"react\";\n\nexport const _Section = ({ children }: { children: ReactNode }) => {\n  const { ref } = useScrollSection();\n  const { scrollYProgress } = useScroll({ target: ref, axis: \"y\", offset: [\"0 0.45\", \"1 0.6\"] });\n  const opacity = useTransform(scrollYProgress, [1, 0.5, 0], [0, 1, 0]);\n  const y = useTransform(scrollYProgress, [1, 0.5, 0], [-150, 0, 150]);\n\n  useEffect(() => {\n    scrollYProgress.onChange(console.log);\n    return () => scrollYProgress.clearListeners();\n  }, [scrollYProgress]);\n\n  return <motion.div style={{ opacity, y }}>{children}</motion.div>;\n};\n\nexport const Section = ({ children }: { children: ReactNode }) => {\n  const isMounted = useIsMounted();\n\n  if (isMounted) {\n    return <_Section key=\"1\">{children}</_Section>;\n  } else {\n    return <_Section key=\"2\">{children}</_Section>;\n  }\n};\n","import { Box, Code, Heading, Text } from \"@chakra-ui/react\";\n\nimport { ScrollContent, ScrollControl, ScrollControlTool, ScrollSection, ScrollToTop } from \"../component/ScrollControl\";\nimport { Section } from \"../component/Section\";\nimport { delay } from \"../utils\";\n\nimport type { GetInitialStateType } from \"../types/common\";\n\n// current page will not generate static page\n\nexport default function Index({ foo }: { foo: string }) {\n  return (\n    <>\n      <ScrollControl initialSectionLength={5}>\n        <ScrollContent>\n          <ScrollSection>\n            <Box width=\"100vw\" height=\"100vh\" backgroundColor=\"AppWorkspace\" position=\"relative\">\n              <Heading>foo page</Heading>\n              <Code>props: foo: {foo}</Code>\n              <Box position=\"absolute\" left=\"30%\" top=\"50%\" transform=\"translateY(-50%)\" border=\"1px\" borderRadius=\"4px\" padding=\"2\">\n                <Section>\n                  <Text fontSize=\"24px\">1 page</Text>\n                </Section>\n              </Box>\n            </Box>\n          </ScrollSection>\n\n          <ScrollSection>\n            <Box width=\"100vw\" height=\"100vh\" backgroundColor=\"aliceblue\" position=\"relative\">\n              <Box position=\"absolute\" left=\"30%\" top=\"50%\" transform=\"translateY(-50%)\" border=\"1px\" borderRadius=\"4px\" padding=\"2\">\n                <Section>\n                  <Text fontSize=\"24px\">2 page</Text>\n                </Section>\n              </Box>\n            </Box>\n          </ScrollSection>\n\n          <ScrollSection>\n            <Box width=\"100vw\" height=\"100vh\" backgroundColor=\"whatsapp.300\" position=\"relative\">\n              <Box position=\"absolute\" left=\"30%\" top=\"50%\" transform=\"translateY(-50%)\" border=\"1px\" borderRadius=\"4px\" padding=\"2\">\n                <Section>\n                  <Text fontSize=\"24px\">3 page</Text>\n                </Section>\n              </Box>\n            </Box>\n          </ScrollSection>\n\n          <ScrollSection>\n            <Box width=\"100vw\" height=\"100vh\" backgroundColor=\"yellow.400\" position=\"relative\">\n              <Box position=\"absolute\" left=\"30%\" top=\"50%\" transform=\"translateY(-50%)\" border=\"1px\" borderRadius=\"4px\" padding=\"2\">\n                <Section>\n                  <Text fontSize=\"24px\">4 page</Text>\n                </Section>\n              </Box>\n            </Box>\n          </ScrollSection>\n\n          <ScrollSection>\n            <Box width=\"100vw\" height=\"100vh\" backgroundColor=\"twitter.200\" position=\"relative\">\n              <Box position=\"absolute\" left=\"30%\" top=\"50%\" transform=\"translateY(-50%)\" border=\"1px\" borderRadius=\"4px\" padding=\"2\">\n                <Section>\n                  <Text fontSize=\"24px\">5 page</Text>\n                </Section>\n              </Box>\n            </Box>\n          </ScrollSection>\n        </ScrollContent>\n\n        <ScrollControlTool />\n        <ScrollToTop />\n      </ScrollControl>\n    </>\n  );\n}\n\nexport const isStatic = true;\n\nexport const getInitialState: GetInitialStateType = async () => {\n  await delay(1000);\n  return { props: { foo: \"bar\" } };\n};\n"],"names":["ScrollControlContext","createContext","totalSection","currentSection","setTotalSection","_length","setCurrentSection","_index","onNextSection","onPrevSection","useScrollControl","useContext","ScrollControl","_ref","onSectionIndexChange","children","initialSectionLength","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","prevSection","usePrevious","onSectionIndexChangeRef","useCallbackRef","i","useEffect","context","useMemo","_jsx","Provider","value","ScrollSectionContext","ref","current","ScrollViewContext","inViewArray","setCurrentView","_inView","ScrollSection","index","useRef","_useScrollView","inView","useInView","amount","margin","length","Box","position","overflow","ScrollContent","validElement","scrollY","useScroll","Children","element","isValidElement","type","push","count","Array","fill","setInViewArray","newInViewArray","_toConsumableArray","_useScrollControl","setCurrentSectionRef","prev","last","handler","throttle","l","leading","trailing","onChange","clearListeners","useSafeLayoutEffect","cloneElement","_Arrow","className","width","height","viewBox","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","Arrow","memo","ScrollToTop","fontSize","right","bottom","color","textAlign","verticalAlign","borderRadius","zIndex","display","base","md","alignItems","justifyContent","onClick","window","scrollTo","top","behavior","Icon","as","ScrollControlTool","render","clickHandler","targetElement","document","querySelector","concat","_document$scrollingEl","rect","getBoundingClientRect","scrollingElement","scrollTop","array","Flex","flexDirection","Wrap","spacing","map","_","WrapItem","isSelect","cursor","sx","backgroundColor","border","_Section","scrollYProgress","target","axis","offset","opacity","useTransform","y","console","log","motion","style","Section","_ref2","useIsMounted","Index","foo","_Fragment","_jsxs","Heading","Code","left","transform","padding","Text","isStatic","getInitialState","_asyncToGenerator","_regeneratorRuntime","_callee","_context","next","delay","abrupt","props","stop","apply","arguments"],"sourceRoot":""}