{"version":3,"file":"getHydrateDom.js","sourceRoot":"","sources":["getHydrateDom.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,kBAAkB,EAAE,MAAM,iBAAiB,CAAC;AAErD,OAAO,EAAE,iBAAiB,EAAE,MAAM,kBAAkB,CAAC;AAQrD,IAAM,GAAG,GAAG,kBAAkB,CAAC,GAAG,CAAC;AAEnC,IAAM,iBAAiB,GAAG,UAAC,SAAkB;IAC3C,IAAM,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;IAElD,OAAO,QAAQ,CAAC,IAAI,CAAC,UAAC,GAAG,IAAK,OAAA,GAAG,CAAC,QAAQ,KAAK,QAAQ,CAAC,YAAY,IAAI,CAAE,GAAkB,CAAC,WAAW,EAA1E,CAA0E,CAAC,CAAC;AAC5G,CAAC,CAAC;AAEF,IAAM,eAAe,GAAG,UAAC,KAAuB,EAAE,GAAe;IAC/D,IAAI,CAAC,GAAG,EAAE;QACR,GAAG,CAAC;YACF,KAAK,OAAA;YACL,KAAK,EAAE,OAAO;YACd,OAAO,EAAE,2CAA2C;SACrD,CAAC,CAAC;QACH,OAAO,KAAK,CAAC;KACd;IACD,IAAI,KAAK,CAAC,cAAc,EAAE;QACxB,IAAI,GAAG,CAAC,QAAQ,KAAK,IAAI,CAAC,SAAS,EAAE;YACnC,GAAG,CAAC;gBACF,KAAK,OAAA;gBACL,KAAK,EAAE,OAAO;gBACd,OAAO,EAAE,4DAAqD,GAAG,CAAC,QAAQ,CAAC,WAAW,EAAE,uBACtF,KAAK,CAAC,OAAO,CACb;aACH,CAAC,CAAC;YACH,OAAO,KAAK,CAAC;SACd;QACD,OAAO,IAAI,CAAC;KACb;IACD,IAAI,KAAK,CAAC,eAAe,EAAE;QACzB,IAAM,YAAY,GAAG,KAAK,CAAC,OAAyB,CAAC;QACrD,IAAI,GAAG,CAAC,QAAQ,KAAK,IAAI,CAAC,YAAY,EAAE;YACtC,GAAG,CAAC;gBACF,KAAK,OAAA;gBACL,KAAK,EAAE,OAAO;gBACd,OAAO,EAAE,4DAAqD,GAAG,CAAC,QAAQ,CAAC,WAAW,EAAE,uBAAa,YAAY,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAE;aACpI,CAAC,CAAC;YACH,OAAO,KAAK,CAAC;SACd;QACD,IAAI,YAAY,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,GAAG,CAAC,QAAQ,CAAC,WAAW,EAAE,EAAE;YAC/D,GAAG,CAAC;gBACF,KAAK,OAAA;gBACL,KAAK,EAAE,OAAO;gBACd,OAAO,EAAE,4DAAqD,GAAG,CAAC,QAAQ,CAAC,WAAW,EAAE,uBAAa,YAAY,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAE;aACpI,CAAC,CAAC;YACH,OAAO,KAAK,CAAC;SACd;QACD,OAAO,IAAI,CAAC;KACb;IACD,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;AACpD,CAAC,CAAC;AAEF,MAAM,CAAC,IAAM,aAAa,GAAG,UAAC,KAAuB,EAAE,SAAkB;IACvE,IAAI,iBAAiB,CAAC,SAAS,CAAC,OAAO,CAAC,WAAW,EAAoC,CAAC;QAAE,OAAO,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;IAClH,IAAM,GAAG,GAAG,iBAAiB,CAAC,SAAS,CAAC,CAAC;IACzC,IAAM,MAAM,GAAG,eAAe,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;IAC3C,IAAI,MAAM,EAAE;QACV,IAAM,QAAQ,GAAG,GAAiB,CAAC;QACnC,KAAK,CAAC,GAAG,GAAG,QAAQ,CAAC;QACrB,OAAO,EAAE,GAAG,EAAE,QAAQ,EAAE,MAAM,QAAA,EAAE,CAAC;KAClC;SAAM;QACL,OAAO,EAAE,GAAG,KAAA,EAAE,MAAM,QAAA,EAAE,CAAC;KACxB;AACH,CAAC,CAAC","sourcesContent":["import { __myreact_shared__ } from \"@my-react/react\";\n\nimport { IS_SINGLE_ELEMENT } from \"@ReactDOM_shared\";\n\nimport type { MyReactElement, MyReactFiberNode } from \"@my-react/react\";\n\nexport type HydrateDOM = Element & {\n  __hydrate__: boolean;\n};\n\nconst log = __myreact_shared__.log;\n\nconst getNextHydrateDom = (parentDom: Element) => {\n  const children = Array.from(parentDom.childNodes);\n\n  return children.find((dom) => dom.nodeType !== document.COMMENT_NODE && !(dom as HydrateDOM).__hydrate__);\n};\n\nconst checkHydrateDom = (fiber: MyReactFiberNode, dom?: ChildNode) => {\n  if (!dom) {\n    log({\n      fiber,\n      level: \"error\",\n      message: \"hydrate error, dom not render from server\",\n    });\n    return false;\n  }\n  if (fiber.__isTextNode__) {\n    if (dom.nodeType !== Node.TEXT_NODE) {\n      log({\n        fiber,\n        level: \"error\",\n        message: `hydrate error, dom not match from server. server: ${dom.nodeName.toLowerCase()}, client: ${\n          fiber.element\n        }`,\n      });\n      return false;\n    }\n    return true;\n  }\n  if (fiber.__isPlainNode__) {\n    const typedElement = fiber.element as MyReactElement;\n    if (dom.nodeType !== Node.ELEMENT_NODE) {\n      log({\n        fiber,\n        level: \"error\",\n        message: `hydrate error, dom not match from server. server: ${dom.nodeName.toLowerCase()}, client: ${typedElement.type.toString()}`,\n      });\n      return false;\n    }\n    if (typedElement.type.toString() !== dom.nodeName.toLowerCase()) {\n      log({\n        fiber,\n        level: \"error\",\n        message: `hydrate error, dom not match from server. server: ${dom.nodeName.toLowerCase()}, client: ${typedElement.type.toString()}`,\n      });\n      return false;\n    }\n    return true;\n  }\n  throw new Error(\"hydrate error, look like a bug\");\n};\n\nexport const getHydrateDom = (fiber: MyReactFiberNode, parentDom: Element) => {\n  if (IS_SINGLE_ELEMENT[parentDom.tagName.toLowerCase() as keyof typeof IS_SINGLE_ELEMENT]) return { result: true };\n  const dom = getNextHydrateDom(parentDom);\n  const result = checkHydrateDom(fiber, dom);\n  if (result) {\n    const typedDom = dom as HydrateDOM;\n    fiber.dom = typedDom;\n    return { dom: typedDom, result };\n  } else {\n    return { dom, result };\n  }\n};\n"]}