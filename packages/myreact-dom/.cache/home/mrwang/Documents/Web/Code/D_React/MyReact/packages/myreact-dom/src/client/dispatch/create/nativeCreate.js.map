{"version":3,"file":"nativeCreate.js","sourceRoot":"","sources":["nativeCreate.ts"],"names":[],"mappings":"AAEA,MAAM,CAAC,IAAM,YAAY,GAAG,UAAC,KAAuB;IAClD,IAAI,KAAK,CAAC,cAAc,EAAE;QACxB,KAAK,CAAC,GAAG,GAAG,QAAQ,CAAC,cAAc,CAAC,KAAK,CAAC,OAAiB,CAAC,CAAC;KAC9D;SAAM,IAAI,KAAK,CAAC,eAAe,EAAE;QAChC,IAAM,YAAY,GAAG,KAAK,CAAC,OAAyB,CAAC;QACrD,IAAI,KAAK,CAAC,SAAS,EAAE;YACnB,KAAK,CAAC,GAAG,GAAG,QAAQ,CAAC,eAAe,CAAC,KAAK,CAAC,SAAS,EAAE,YAAY,CAAC,IAAc,CAAC,CAAC;SACpF;aAAM;YACL,KAAK,CAAC,GAAG,GAAG,QAAQ,CAAC,aAAa,CAAC,YAAY,CAAC,IAAc,CAAC,CAAC;SACjE;KACF;SAAM;QACL,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,SAAS,CAAC,SAAoB,CAAC;KAClD;AACH,CAAC,CAAC","sourcesContent":["import type { MyReactElement, MyReactFiberNode } from \"@my-react/react\";\n\nexport const nativeCreate = (fiber: MyReactFiberNode) => {\n  if (fiber.__isTextNode__) {\n    fiber.dom = document.createTextNode(fiber.element as string);\n  } else if (fiber.__isPlainNode__) {\n    const typedElement = fiber.element as MyReactElement;\n    if (fiber.nameSpace) {\n      fiber.dom = document.createElementNS(fiber.nameSpace, typedElement.type as string);\n    } else {\n      fiber.dom = document.createElement(typedElement.type as string);\n    }\n  } else {\n    fiber.dom = fiber.__props__.container as Element;\n  }\n};\n"]}