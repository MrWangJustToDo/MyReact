{"version":3,"file":"validDomNesting.js","sourceRoot":"","sources":["validDomNesting.ts"],"names":[],"mappings":"AAAA,4BAA4B;AAC5B,OAAO,EAAE,kBAAkB,EAAE,MAAM,iBAAiB,CAAC;AAErD,OAAO,EAAE,cAAc,EAAE,MAAM,kBAAkB,CAAC;AAIlD,IAAM,GAAG,GAAG,kBAAkB,CAAC,GAAG,CAAC;AAEnC,OAAO;AACP,MAAM,CAAC,IAAM,eAAe,GAAG,UAAC,KAAuB;IACrD,IAAI,CAAC,cAAc,CAAC,OAAO;QAAE,OAAO;IACpC,IAAI,KAAK,CAAC,eAAe,EAAE;QACzB,IAAM,YAAY,GAAG,KAAK,CAAC,OAAyB,CAAC;QACrD,IAAI,YAAY,CAAC,IAAI,KAAK,GAAG,EAAE;YAC7B,IAAI,QAAM,GAAG,KAAK,CAAC,MAAM,CAAC;YAC1B,OAAO,QAAM,IAAI,QAAM,CAAC,eAAe,EAAE;gBACvC,IAAM,kBAAkB,GAAG,QAAM,CAAC,OAAyB,CAAC;gBAC5D,IAAI,kBAAkB,CAAC,IAAI,KAAK,GAAG,EAAE;oBACnC,GAAG,CAAC;wBACF,KAAK,OAAA;wBACL,KAAK,EAAE,MAAM;wBACb,WAAW,EAAE,IAAI;wBACjB,OAAO,EAAE,0DAA0D;qBACpE,CAAC,CAAC;iBACJ;gBACD,QAAM,GAAG,QAAM,CAAC,MAAM,CAAC;aACxB;SACF;KACF;AACH,CAAC,CAAC","sourcesContent":["// for invalid dom structure\nimport { __myreact_shared__ } from \"@my-react/react\";\n\nimport { enableAllCheck } from \"@ReactDOM_shared\";\n\nimport type { MyReactElement, MyReactFiberNode } from \"@my-react/react\";\n\nconst log = __myreact_shared__.log;\n\n// TODO\nexport const validDomNesting = (fiber: MyReactFiberNode) => {\n  if (!enableAllCheck.current) return;\n  if (fiber.__isPlainNode__) {\n    const typedElement = fiber.element as MyReactElement;\n    if (typedElement.type === \"p\") {\n      let parent = fiber.parent;\n      while (parent && parent.__isPlainNode__) {\n        const typedParentElement = parent.element as MyReactElement;\n        if (typedParentElement.type === \"p\") {\n          log({\n            fiber,\n            level: \"warn\",\n            triggerOnce: true,\n            message: `invalid dom nesting: <p> cannot appear as a child of <p>`,\n          });\n        }\n        parent = parent.parent;\n      }\n    }\n  }\n};\n"]}