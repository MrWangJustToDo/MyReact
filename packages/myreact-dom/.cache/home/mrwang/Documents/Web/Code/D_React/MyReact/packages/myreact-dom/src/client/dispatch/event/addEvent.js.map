{"version":3,"file":"addEvent.js","sourceRoot":"","sources":["addEvent.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,kBAAkB,EAAE,MAAM,iBAAiB,CAAC;AAErD,OAAO,EAAE,sBAAsB,EAAE,iBAAiB,EAAE,MAAM,kBAAkB,CAAC;AAE7E,OAAO,EAAE,kBAAkB,EAAE,MAAM,gBAAgB,CAAC;AAI5C,IAAA,iBAAiB,GAAK,kBAAkB,kBAAvB,CAAwB;AAEjD,IAAM,iBAAiB,GAA4B;IACjD,KAAK,EAAE,IAAI;IACX,kBAAkB;IAClB,gBAAgB;CACjB,CAAC;AAEF,MAAM,CAAC,IAAM,gBAAgB,GAAG,UAAC,KAAuB,EAAE,GAAY,EAAE,GAAW;;IACjF,IAAM,YAAY,GAAG,KAAK,CAAC,OAAyB,CAAC;IACrD,IAAM,QAAQ,GAAG,YAAY,CAAC,KAAK,CAAC,GAAG,CAA6B,CAAC;IAC/D,IAAA,KAA4B,kBAAkB,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,YAAY,CAAC,IAAc,EAAE,YAAY,CAAC,KAAK,CAAC,EAA3G,UAAU,gBAAA,EAAE,SAAS,eAAsF,CAAC;IACpH,IAAI,iBAAiB,CAAC,OAAO,EAAE;QAC7B,IAAM,UAAU,GAAG,KAAK,CAAC,uBAAuB,CAAC;QACjD,IAAM,SAAS,GAAG,UAAG,UAAU,cAAI,SAAS,CAAE,CAAC;QAC/C,IAAI,UAAU,CAAC,SAAS,CAAC,EAAE;YACzB,MAAA,UAAU,CAAC,SAAS,CAAC,CAAC,EAAE,0CAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;SAC1C;aAAM;YACL,IAAM,SAAO,GAAgD;gBAAC,cAAc;qBAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;oBAAd,yBAAc;;gBAC1E,IAAM,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;gBAClB,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC;gBAClB,iBAAiB,CAAC;oBAChB,MAAM,EAAE,sBAAM,OAAA,MAAA,SAAO,CAAC,EAAE,0CAAE,OAAO,CAAC,UAAC,EAAE,IAAK,OAAA,OAAO,EAAE,KAAK,UAAU,IAAI,EAAE,CAAC,IAAI,OAAP,EAAE,iBAAM,IAAI,GAAK,IAAI,SAAC,EAAlD,CAAkD,CAAC,CAAA,EAAA;oBAC7F,KAAK,OAAA;iBACN,CAAC,CAAC;gBACH,IAAI,sBAAsB,CAAC,OAAO,EAAE;oBAClC,IAAI,iBAAiB,CAAC,YAAY,CAAC,IAAc,CAAC,IAAI,OAAO,YAAY,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,WAAW,EAAE;wBACvG,GAAmC,CAAC,OAAO,CAAC,GAAG,YAAY,CAAC,KAAK,CAAC,OAAO,CAAW,CAAC;qBACvF;iBACF;YACH,CAAC,CAAC;YACF,SAAO,CAAC,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAC;YACxB,UAAU,CAAC,SAAS,CAAC,GAAG,SAAO,CAAC;YAChC,GAAG,CAAC,gBAAgB,CAAC,UAAU,EAAE,SAAO,EAAE,SAAS,CAAC,CAAC;SACtD;KACF;SAAM;QACL,GAAG,CAAC,gBAAgB,CAAC,UAAU,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;KACvD;AACH,CAAC,CAAC","sourcesContent":["import { __myreact_shared__ } from \"@my-react/react\";\n\nimport { enableControlComponent, enableEventSystem } from \"@ReactDOM_shared\";\n\nimport { getNativeEventName } from \"./getEventName\";\n\nimport type { MyReactElement, MyReactFiberNode } from \"@my-react/react\";\n\nconst { safeCallWithFiber } = __myreact_shared__;\n\nconst controlElementTag: Record<string, boolean> = {\n  input: true,\n  // textarea: true,\n  // select: true,\n};\n\nexport const addEventListener = (fiber: MyReactFiberNode, dom: Element, key: string) => {\n  const typedElement = fiber.element as MyReactElement;\n  const callback = typedElement.props[key] as (...args: any[]) => void;\n  const { nativeName, isCapture } = getNativeEventName(key.slice(2), typedElement.type as string, typedElement.props);\n  if (enableEventSystem.current) {\n    const eventState = fiber.__internal_node_event__;\n    const eventName = `${nativeName}_${isCapture}`;\n    if (eventState[eventName]) {\n      eventState[eventName].cb?.push(callback);\n    } else {\n      const handler: ((...args: any[]) => void) & { cb?: any[] } = (...args: any[]) => {\n        const e = args[0];\n        e.nativeEvent = e;\n        safeCallWithFiber({\n          action: () => handler.cb?.forEach((cb) => typeof cb === \"function\" && cb.call(null, ...args)),\n          fiber,\n        });\n        if (enableControlComponent.current) {\n          if (controlElementTag[typedElement.type as string] && typeof typedElement.props[\"value\"] !== \"undefined\") {\n            (dom as unknown as HTMLInputElement)[\"value\"] = typedElement.props[\"value\"] as string;\n          }\n        }\n      };\n      handler.cb = [callback];\n      eventState[eventName] = handler;\n      dom.addEventListener(nativeName, handler, isCapture);\n    }\n  } else {\n    dom.addEventListener(nativeName, callback, isCapture);\n  }\n};\n"]}