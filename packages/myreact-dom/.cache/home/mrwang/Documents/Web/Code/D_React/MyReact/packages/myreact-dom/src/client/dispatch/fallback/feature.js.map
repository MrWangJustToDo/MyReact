{"version":3,"file":"feature.js","sourceRoot":"","sources":["feature.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,eAAe,EAAE,MAAM,kBAAkB,CAAC;AAKnD,MAAM,CAAC,IAAM,QAAQ,GAAG,UAAC,KAAuB;IAC9C,IAAI,eAAe,CAAC,OAAO,IAAI,KAAK,CAAC,eAAe,EAAE;QACpD,IAAM,GAAG,GAAG,KAAK,CAAC,GAAc,CAAC;QACjC,IAAM,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAC5C,QAAQ,CAAC,OAAO,CAAC,UAAC,IAAI;YACpB,IAAM,SAAS,GAAG,IAA2B,CAAC;YAC9C,IAAI,SAAS,CAAC,QAAQ,KAAK,QAAQ,CAAC,YAAY,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE;gBAC1E,IAAI,CAAC,MAAM,EAAE,CAAC;aACf;YACD,OAAO,SAAS,CAAC,aAAa,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC;KACJ;AACH,CAAC,CAAC","sourcesContent":["import { isHydrateRender } from \"@ReactDOM_shared\";\n\nimport type { HydrateDOM } from \"../create/getHydrateDom\";\nimport type { MyReactFiberNode } from \"@my-react/react\";\n\nexport const fallback = (fiber: MyReactFiberNode) => {\n  if (isHydrateRender.current && fiber.__isPlainNode__) {\n    const dom = fiber.dom as Element;\n    const children = Array.from(dom.childNodes);\n    children.forEach((node) => {\n      const typedNode = node as Partial<HydrateDOM>;\n      if (typedNode.nodeType !== document.COMMENT_NODE && !typedNode.__hydrate__) {\n        node.remove();\n      }\n      delete typedNode[\"__hydrate__\"];\n    });\n  }\n};\n"]}