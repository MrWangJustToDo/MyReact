{"version":3,"file":"append.js","sourceRoot":"","sources":["append.ts"],"names":[],"mappings":"AAEA,MAAM,CAAC,IAAM,MAAM,GAAG,UAAC,KAAuB,EAAE,SAAkB;IAChE,IAAI,CAAC,KAAK;QAAE,MAAM,IAAI,KAAK,CAAC,iCAAiC,CAAC,CAAC;IAC/D,KAAK,CAAC,iBAAiB,GAAG,KAAK,CAAC;IAChC,KAAK,CAAC,mBAAmB,GAAG,KAAK,CAAC;IAClC,IAAI,KAAK,CAAC,YAAY;QAAE,OAAO;IAC/B,IAAI,KAAK,CAAC,eAAe,IAAI,KAAK,CAAC,cAAc,EAAE;QACjD,SAAS,CAAC,WAAW,CAAC,KAAK,CAAC,GAAc,CAAC,CAAC;QAC5C,OAAO;KACR;IACD,IAAI,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;IACxB,OAAO,KAAK,EAAE;QACZ,MAAM,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;QACzB,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC;KACvB;AACH,CAAC,CAAC","sourcesContent":["import type { MyReactFiberNode } from \"@my-react/react\";\n\nexport const append = (fiber: MyReactFiberNode, parentDOM: Element) => {\n  if (!fiber) throw new Error(\"position error, look like a bug\");\n  fiber.__pendingAppend__ = false;\n  fiber.__pendingPosition__ = false;\n  if (fiber.__isPortal__) return;\n  if (fiber.__isPlainNode__ || fiber.__isTextNode__) {\n    parentDOM.appendChild(fiber.dom as Element);\n    return;\n  }\n  let child = fiber.child;\n  while (child) {\n    append(child, parentDOM);\n    child = child.sibling;\n  }\n};\n"]}