{"version":3,"file":"insertBefore.js","sourceRoot":"","sources":["insertBefore.ts"],"names":[],"mappings":"AAEA,MAAM,CAAC,IAAM,YAAY,GAAG,UAAC,KAAuB,EAAE,SAAkB,EAAE,SAAkB;IAC1F,IAAI,CAAC,KAAK;QAAE,MAAM,IAAI,KAAK,CAAC,iCAAiC,CAAC,CAAC;IAC/D,KAAK,CAAC,iBAAiB,GAAG,KAAK,CAAC;IAChC,KAAK,CAAC,mBAAmB,GAAG,KAAK,CAAC;IAClC,IAAI,KAAK,CAAC,YAAY;QAAE,OAAO;IAC/B,IAAI,KAAK,CAAC,eAAe,IAAI,KAAK,CAAC,cAAc,EAAE;QACjD,SAAS,CAAC,YAAY,CAAC,KAAK,CAAC,GAAc,EAAE,SAAS,CAAC,CAAC;QACxD,OAAO;KACR;IACD,IAAI,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;IACxB,OAAO,KAAK,EAAE;QACZ,YAAY,CAAC,KAAK,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;QAC1C,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC;KACvB;IACD,wEAAwE;AAC1E,CAAC,CAAC","sourcesContent":["import type { MyReactFiberNode } from \"@my-react/react\";\n\nexport const insertBefore = (fiber: MyReactFiberNode, beforeDOM: Element, parentDOM: Element) => {\n  if (!fiber) throw new Error(\"position error, look like a bug\");\n  fiber.__pendingAppend__ = false;\n  fiber.__pendingPosition__ = false;\n  if (fiber.__isPortal__) return;\n  if (fiber.__isPlainNode__ || fiber.__isTextNode__) {\n    parentDOM.insertBefore(fiber.dom as Element, beforeDOM);\n    return;\n  }\n  let child = fiber.child;\n  while (child) {\n    insertBefore(child, beforeDOM, parentDOM);\n    child = child.sibling;\n  }\n  // fiber.children.forEach((f) => insertBefore(f, beforeDOM, parentDOM));\n};\n"]}