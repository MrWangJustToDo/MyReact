{"version":3,"file":"feature.js","sourceRoot":"","sources":["feature.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,kBAAkB,EAAE,MAAM,iBAAiB,CAAC;AAErD,OAAO,EAAE,QAAQ,EAAE,MAAM,kBAAkB,CAAC;AAE5C,OAAO,EAAE,aAAa,EAAE,MAAM,iBAAiB,CAAC;AAIhD,MAAM,CAAC,IAAM,QAAQ,GAAG,UAAC,KAAuB;IAC9C,kBAAkB,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;IACvC,aAAa,CAAC,KAAK,CAAC,CAAC;AACvB,CAAC,CAAC;AAEF,MAAM,CAAC,IAAM,OAAO,GAAG,UAAC,KAAuB;IAC7C,IAAM,eAAe,GAAG,KAAK,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAExD,IAAI,eAAe,CAAC,MAAM,EAAE;QAC1B,QAAQ,CAAC,eAAwD,EAAE,UAAC,CAAC,IAAK,OAAA,QAAQ,CAAC,CAAC,CAAC,EAAX,CAAW,CAAC,CAAC;KACxF;IAED,KAAK,CAAC,gBAAgB,GAAG,EAAE,CAAC;AAC9B,CAAC,CAAC","sourcesContent":["import { __myreact_shared__ } from \"@my-react/react\";\n\nimport { mapFiber } from \"@ReactDOM_shared\";\n\nimport { clearFiberDom } from \"./clearFiberDom\";\n\nimport type { MyReactFiberNode } from \"@my-react/react\";\n\nexport const _unmount = (fiber: MyReactFiberNode) => {\n  __myreact_shared__.unmountFiber(fiber);\n  clearFiberDom(fiber);\n};\n\nexport const unmount = (fiber: MyReactFiberNode) => {\n  const allUnmountFiber = fiber.__unmountQueue__.slice(0);\n\n  if (allUnmountFiber.length) {\n    mapFiber(allUnmountFiber as MyReactFiberNode | MyReactFiberNode[], (f) => _unmount(f));\n  }\n\n  fiber.__unmountQueue__ = [];\n};\n"]}