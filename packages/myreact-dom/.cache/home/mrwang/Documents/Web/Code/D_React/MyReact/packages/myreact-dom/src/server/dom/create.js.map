{"version":3,"file":"create.js","sourceRoot":"","sources":["create.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAY,EAAE,MAAM,SAAS,CAAC;AACvC,OAAO,EAAE,WAAW,EAAE,MAAM,QAAQ,CAAC;AAIrC,MAAM,CAAC,IAAM,MAAM,GAAG,UAAC,KAAuB;IAC5C,IAAI,KAAK,CAAC,iBAAiB,EAAE;QAC3B,IAAI,KAAK,CAAC,cAAc,EAAE;YACxB,KAAK,CAAC,GAAG,GAAG,IAAI,WAAW,CAAC,KAAK,CAAC,OAAiB,CAAuB,CAAC;SAC5E;aAAM,IAAI,KAAK,CAAC,eAAe,EAAE;YAChC,IAAM,YAAY,GAAG,KAAK,CAAC,OAAyB,CAAC;YACrD,KAAK,CAAC,GAAG,GAAG,IAAI,YAAY,CAAC,YAAY,CAAC,IAAc,CAAuB,CAAC;SACjF;aAAM;YACL,MAAM,IAAI,KAAK,CAAC,2CAA2C,CAAC,CAAC;SAC9D;QACD,KAAK,CAAC,iBAAiB,GAAG,KAAK,CAAC;KACjC;AACH,CAAC,CAAC","sourcesContent":["import { PlainElement } from \"./plain\";\nimport { TextElement } from \"./text\";\n\nimport type { MyReactElement, MyReactFiberNode } from \"@my-react/react\";\n\nexport const create = (fiber: MyReactFiberNode) => {\n  if (fiber.__pendingCreate__) {\n    if (fiber.__isTextNode__) {\n      fiber.dom = new TextElement(fiber.element as string) as unknown as Element;\n    } else if (fiber.__isPlainNode__) {\n      const typedElement = fiber.element as MyReactElement;\n      fiber.dom = new PlainElement(typedElement.type as string) as unknown as Element;\n    } else {\n      throw new Error(\"createPortal() can not call on the server\");\n    }\n    fiber.__pendingCreate__ = false;\n  }\n};\n"]}