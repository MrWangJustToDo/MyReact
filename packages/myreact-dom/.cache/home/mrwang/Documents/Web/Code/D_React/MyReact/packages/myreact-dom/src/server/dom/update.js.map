{"version":3,"file":"update.js","sourceRoot":"","sources":["update.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,OAAO,EAAE,mBAAmB,EAAE,MAAM,kBAAkB,CAAC;AAI5E,MAAM,CAAC,IAAM,MAAM,GAAG,UAAC,KAAuB;IAC5C,IAAI,KAAK,CAAC,iBAAiB,EAAE;QAC3B,IAAI,KAAK,CAAC,eAAe,EAAE;YACzB,IAAM,KAAG,GAAG,KAAK,CAAC,GAAkB,CAAC;YACrC,IAAM,OAAK,GAAG,KAAK,CAAC,SAAS,IAAI,EAAE,CAAC;YACpC,MAAM,CAAC,IAAI,CAAC,OAAK,CAAC;iBACf,MAAM,CAAC,UAAU,CAAC;iBAClB,OAAO,CAAC,UAAC,GAAG;gBACX,IAAI,GAAG,KAAK,WAAW,EAAE;oBACvB,KAAG,CAAC,GAAG,CAAC,GAAG,OAAK,CAAC,GAAG,CAAW,CAAC;iBACjC;qBAAM;oBACL,KAAG,CAAC,YAAY,CAAC,GAAG,EAAE,OAAK,CAAC,GAAG,CAAW,CAAC,CAAC;iBAC7C;YACH,CAAC,CAAC,CAAC;YACL,MAAM,CAAC,IAAI,CAAC,OAAK,CAAC;iBACf,MAAM,CAAC,OAAO,CAAC;iBACf,OAAO,CAAC,UAAC,QAAQ;gBAChB,IAAM,UAAU,GAAI,OAAK,CAAC,QAAQ,CAA6B,IAAI,EAAE,CAAC;gBACtE,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,UAAC,SAAS;oBACxC,IACE,CAAC,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,mBAAmB,EAAE,SAAS,CAAC;wBACrE,OAAO,UAAU,CAAC,SAAS,CAAC,KAAK,QAAQ,EACzC;wBACC,KAAW,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,GAAG,UAAG,UAAU,CAAC,SAAS,CAAC,OAAI,CAAC;wBACjE,OAAO;qBACR;oBACA,KAAW,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,GAAG,UAAU,CAAC,SAAS,CAAC,CAAC;gBAC5D,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;YACL,IAAI,OAAK,CAAC,yBAAyB,CAAC,EAAE;gBACpC,IAAM,UAAU,GAAG,OAAK,CAAC,yBAAyB,CAA4B,CAAC;gBAC/E,KAAG,CAAC,MAAM,CAAC,UAAU,CAAC,MAAgB,CAAC,CAAC;aACzC;SACF;QACD,KAAK,CAAC,iBAAiB,GAAG,KAAK,CAAC;KACjC;AACH,CAAC,CAAC","sourcesContent":["import { isProperty, isStyle, IS_UNIT_LESS_NUMBER } from \"@ReactDOM_shared\";\n\nimport type { MyReactFiberNode } from \"@my-react/react\";\n\nexport const update = (fiber: MyReactFiberNode) => {\n  if (fiber.__pendingUpdate__) {\n    if (fiber.__isPlainNode__) {\n      const dom = fiber.dom as HTMLElement;\n      const props = fiber.__props__ || {};\n      Object.keys(props)\n        .filter(isProperty)\n        .forEach((key) => {\n          if (key === \"className\") {\n            dom[key] = props[key] as string;\n          } else {\n            dom.setAttribute(key, props[key] as string);\n          }\n        });\n      Object.keys(props)\n        .filter(isStyle)\n        .forEach((styleKey) => {\n          const typedProps = (props[styleKey] as Record<string, unknown>) || {};\n          Object.keys(typedProps).forEach((styleName) => {\n            if (\n              !Object.prototype.hasOwnProperty.call(IS_UNIT_LESS_NUMBER, styleName) &&\n              typeof typedProps[styleName] === \"number\"\n            ) {\n              (dom as any)[styleKey][styleName] = `${typedProps[styleName]}px`;\n              return;\n            }\n            (dom as any)[styleKey][styleName] = typedProps[styleName];\n          });\n        });\n      if (props[\"dangerouslySetInnerHTML\"]) {\n        const typedProps = props[\"dangerouslySetInnerHTML\"] as Record<string, unknown>;\n        dom.append(typedProps.__html as string);\n      }\n    }\n    fiber.__pendingUpdate__ = false;\n  }\n};\n"]}