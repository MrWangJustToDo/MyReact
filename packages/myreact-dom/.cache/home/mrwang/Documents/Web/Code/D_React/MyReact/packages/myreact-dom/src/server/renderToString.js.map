{"version":3,"file":"renderToString.js","sourceRoot":"","sources":["renderToString.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,oBAAoB,EAAE,kBAAkB,EAAE,MAAM,iBAAiB,CAAC;AAE3E,OAAO,EAAE,cAAc,EAAE,WAAW,EAAE,MAAM,WAAW,CAAC;AAExD,OAAO,EAAE,cAAc,EAAE,MAAM,YAAY,CAAC;AAC5C,OAAO,EAAE,YAAY,EAAE,MAAM,OAAO,CAAC;AAI7B,IAAA,cAAc,GAA+B,oBAAoB,eAAnD,EAAE,SAAS,GAAoB,oBAAoB,UAAxC,EAAE,aAAa,GAAK,oBAAoB,cAAzB,CAA0B;AAElE,IAAA,eAAe,GAAK,kBAAkB,gBAAvB,CAAwB;AAE/C,mDAAmD;AACnD,MAAM,CAAC,IAAM,cAAc,GAAG,UAAC,OAAuB;IACpD,cAAc,CAAC,OAAO,GAAG,IAAI,cAAc,EAAE,CAAC;IAE9C,cAAc,CAAC,OAAO,GAAG,IAAI,CAAC;IAE9B,IAAM,SAAS,GAAG,IAAI,YAAY,CAAC,EAAE,CAAC,CAAC;IAEvC,IAAM,KAAK,GAAG,eAAe,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,EAAE,OAAO,CAAC,CAAC;IAExE,KAAK,CAAC,GAAG,GAAG,SAA+B,CAAC;IAE5C,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC;IAEtB,SAAS,CAAC,OAAO,GAAG,KAAK,CAAC;IAE1B,aAAa,CAAC,OAAO,GAAG,SAAS,CAAC;IAElC,WAAW,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;IAE1B,cAAc,CAAC,OAAO,GAAG,KAAK,CAAC;IAE/B,OAAO,SAAS,CAAC,QAAQ,EAAE,CAAC;AAC9B,CAAC,CAAC","sourcesContent":["import { __myreact_internal__, __myreact_shared__ } from \"@my-react/react\";\n\nimport { isServerRender, startRender } from \"../shared\";\n\nimport { ServerDispatch } from \"./dispatch\";\nimport { PlainElement } from \"./dom\";\n\nimport type { MyReactElement } from \"@my-react/react\";\n\nconst { globalDispatch, rootFiber, rootContainer } = __myreact_internal__;\n\nconst { createFiberNode } = __myreact_shared__;\n\n// TODO should create global scope for every render\nexport const renderToString = (element: MyReactElement) => {\n  globalDispatch.current = new ServerDispatch();\n\n  isServerRender.current = true;\n\n  const container = new PlainElement(\"\");\n\n  const fiber = createFiberNode({ fiberIndex: 0, parent: null }, element);\n\n  fiber.dom = container as unknown as Element;\n\n  fiber.__root__ = true;\n\n  rootFiber.current = fiber;\n\n  rootContainer.current = container;\n\n  startRender(fiber, false);\n\n  isServerRender.current = false;\n\n  return container.toString();\n};\n"]}