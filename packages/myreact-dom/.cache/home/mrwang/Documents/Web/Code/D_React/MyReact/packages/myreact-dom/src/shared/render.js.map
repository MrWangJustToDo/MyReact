{"version":3,"file":"render.js","sourceRoot":"","sources":["render.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,oBAAoB,EAAE,kBAAkB,EAAE,MAAM,iBAAiB,CAAC;AAC3E,OAAO,EAAE,aAAa,EAAE,MAAM,4BAA4B,CAAC;AAE3D,OAAO,EAAE,cAAc,EAAE,MAAM,kBAAkB,CAAC;AAI1C,IAAA,UAAU,GAAmB,oBAAoB,WAAvC,EAAE,YAAY,GAAK,oBAAoB,aAAzB,CAA0B;AAElD,IAAA,QAAQ,GAAK,kBAAkB,SAAvB,CAAwB;AAExC,MAAM,CAAC,IAAM,WAAW,GAAG,UAAC,KAAuB,EAAE,OAAe;IAAf,wBAAA,EAAA,eAAe;IAClE,UAAU,CAAC,OAAO,GAAG,IAAI,CAAC;IAE1B,QAAQ,CAAC,cAAM,OAAA,aAAa,CAAC,KAAK,CAAC,EAApB,CAAoB,CAAC,CAAC;IAErC,cAAc,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;IAE/B,YAAY,CAAC,OAAO,GAAG,IAAI,CAAC;IAE5B,UAAU,CAAC,OAAO,GAAG,KAAK,CAAC;AAC7B,CAAC,CAAC","sourcesContent":["import { __myreact_internal__, __myreact_shared__ } from \"@my-react/react\";\nimport { mountLoopSync } from \"@my-react/react-reconciler\";\n\nimport { reconcileMount } from \"./reconcileMount\";\n\nimport type { MyReactFiberNode } from \"@my-react/react\";\n\nconst { globalLoop, isAppMounted } = __myreact_internal__;\n\nconst { safeCall } = __myreact_shared__;\n\nexport const startRender = (fiber: MyReactFiberNode, hydrate = false) => {\n  globalLoop.current = true;\n\n  safeCall(() => mountLoopSync(fiber));\n\n  reconcileMount(fiber, hydrate);\n\n  isAppMounted.current = true;\n\n  globalLoop.current = false;\n};\n"]}