{"version":3,"file":"update.js","sourceRoot":"","sources":["update.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAAE,cAAc,EAAE,MAAM,UAAU,CAAC;AAK1D,MAAM,CAAC,IAAM,eAAe,GAAG,UAC7B,EAQC,EACD,QAAqB;QARnB,KAAK,WAAA,EACL,MAAM,YAAA,EACN,SAAS,eAAA;IAQX,KAAK,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;IAE5B,IAAM,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;IAEhC,KAAK,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;IAE5B,IAAM,OAAO,GAAG,KAAK,CAAC,QAAQ,CAAC;IAE/B,KAAK,CAAC,SAAS,EAAE,CAAC;IAElB,KAAK,CAAC,iBAAiB,EAAE,CAAC;IAE1B,IAAI,QAAQ,KAAK,OAAO,EAAE;QACxB,IAAI,KAAK,CAAC,UAAU,EAAE;YACpB,IAAM,aAAa,GAAG,QAAmB,CAAC;YAC1C,IAAM,YAAY,GAAG,OAAkB,CAAC;YACxC,IAAI,CAAC,KAAK,CAAC,eAAe,IAAI,cAAc,CAAC,aAAa,CAAC,KAAK,EAAE,YAAY,CAAC,KAAK,CAAC,EAAE;gBACrF,KAAK,CAAC,WAAW,EAAE,CAAC;aACrB;iBAAM;gBACL,KAAK,CAAC,aAAa,EAAE,CAAC;aACvB;SACF;aAAM;YACL,KAAK,CAAC,aAAa,EAAE,CAAC;YAEtB,IAAI,KAAK,CAAC,qBAAqB,EAAE;gBAC/B,IAAM,aAAa,GAAG,QAAmB,CAAC;gBAC1C,IAAM,YAAY,GAAG,OAAkB,CAAC;gBACxC,IACE,CAAC,cAAc,CACb,aAAa,CAAC,KAAK,CAAC,KAAgC,EACpD,YAAY,CAAC,KAAK,CAAC,KAAgC,CACpD,EACD;oBACA,cAAc,CAAC,OAAO,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;iBAC9C;aACF;YAED,IAAI,KAAK,CAAC,eAAe,EAAE;gBACzB,IAAM,aAAa,GAAG,QAAmB,CAAC;gBAC1C,IAAM,YAAY,GAAG,OAAkB,CAAC;gBACxC,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,KAAK,EAAE,YAAY,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE;oBACnE,cAAc,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;iBAC7C;aACF;YAED,IAAI,KAAK,CAAC,cAAc,EAAE;gBACxB,cAAc,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;aAC7C;SACF;KACF;IAED,IAAI,KAAK,KAAK,SAAS,EAAE;QACvB,cAAc,CAAC,OAAO,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;KAC/C;IAED,OAAO,KAAK,CAAC;AACf,CAAC,CAAC","sourcesContent":["import { globalDispatch, isNormalEquals } from \"../share\";\n\nimport type { Element, ElementNode } from \"../element\";\nimport type { MyReactFiberNode } from \"./instance\";\n\nexport const updateFiberNode = (\n  {\n    fiber,\n    parent,\n    prevFiber,\n  }: {\n    fiber: MyReactFiberNode;\n    parent: MyReactFiberNode;\n    prevFiber: MyReactFiberNode;\n  },\n  newChild: ElementNode\n) => {\n  fiber.installParent(parent);\n\n  const prevVDom = fiber.__vdom__;\n\n  fiber.installVDom(newChild);\n\n  const newVDom = fiber.__vdom__;\n\n  fiber.checkVDom();\n\n  fiber.updateRenderState();\n\n  if (prevVDom !== newVDom) {\n    if (fiber.__isMemo__) {\n      const typedPrevVDom = prevVDom as Element;\n      const typedNewVDom = newVDom as Element;\n      if (!fiber.__needTrigger__ && isNormalEquals(typedPrevVDom.props, typedNewVDom.props)) {\n        fiber.afterUpdate();\n      } else {\n        fiber.prepareUpdate();\n      }\n    } else {\n      fiber.prepareUpdate();\n\n      if (fiber.__isContextProvider__) {\n        const typedPrevVDom = prevVDom as Element;\n        const typedNewVDom = newVDom as Element;\n        if (\n          !isNormalEquals(\n            typedPrevVDom.props.value as Record<string, unknown>,\n            typedNewVDom.props.value as Record<string, unknown>\n          )\n        ) {\n          globalDispatch.current.pendingContext(fiber);\n        }\n      }\n\n      if (fiber.__isPlainNode__) {\n        const typedPrevVDom = prevVDom as Element;\n        const typedNewVDom = newVDom as Element;\n        if (!isNormalEquals(typedPrevVDom.props, typedNewVDom.props, false)) {\n          globalDispatch.current.pendingUpdate(fiber);\n        }\n      }\n\n      if (fiber.__isTextNode__) {\n        globalDispatch.current.pendingUpdate(fiber);\n      }\n    }\n  }\n\n  if (fiber !== prevFiber) {\n    globalDispatch.current.pendingPosition(fiber);\n  }\n\n  return fiber;\n};\n"]}