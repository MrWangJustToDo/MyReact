{"version":3,"file":"create.js","sourceRoot":"","sources":["create.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,UAAU,CAAC;AAEvC,OAAO,EAAE,MAAM,EAAE,MAAM,UAAU,CAAC;AAClC,OAAO,EAAE,eAAe,EAAE,MAAM,YAAY,CAAC;AAK7C,IAAM,cAAc,GAAY,UAAC,KAAe,EAAE,MAAe;IAC/D,OAAO,OAAO,MAAM,KAAK,UAAU,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;AAC/D,CAAC,CAAC;AAUF,MAAM,CAAC,IAAM,cAAc,GAAG,UAC5B,EAA+D,EAC/D,KAAuB;QADrB,SAAS,eAAA,EAAE,QAAQ,cAAA,EAAE,KAAK,WAAA,EAAE,OAAO,aAAA,EAAE,IAAI,UAAA;IAG3C,IAAM,WAAW,GAAG,IAAI,eAAe,CAAC,SAAS,EAAE,QAAQ,EAAE,KAAK,EAAE,OAAO,IAAI,cAAc,EAAE,IAAI,CAAC,CAAC;IAErG,WAAW,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IAE5B,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;IAE3B,KAAK,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;IAE7B,WAAW,CAAC,aAAa,EAAE,CAAC;IAE5B,OAAO,WAAW,CAAC;AACrB,CAAC,CAAC;AAEF,MAAM,CAAC,IAAM,WAAW,GAAG,UACzB,EAA+D,EAC/D,KAA8B;QAD5B,SAAS,eAAA,EAAE,QAAQ,cAAA,EAAE,KAAK,WAAA,EAAE,OAAO,aAAA,EAAE,IAAI,UAAA;IAG3C,IAAI,CAAC,KAAK;QAAE,MAAM,IAAI,KAAK,CAAC,mCAAmC,CAAC,CAAC;IAEjE,IAAI,WAAW,GAA2B,IAAI,CAAC;IAE/C,IAAI,KAAK,CAAC,QAAQ,CAAC,MAAM,GAAG,SAAS,EAAE;QACrC,WAAW,GAAG,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;QAExC,IAAI,WAAW,CAAC,QAAQ,KAAK,QAAQ,EAAE;YACrC,IAAM,KAAK,GAAG,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;YACjD,MAAM,IAAI,KAAK,CAAC,WAAW,iCAAK,KAAK,UAAE,WAAW,CAAC,QAAQ,2CAAO,KAAK,UAAE,QAAQ,UAAE,CAAC,CAAC;SACtF;QAED,WAAW,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QAE5B,WAAW,CAAC,YAAY,CAAC,KAAK,EAAE,OAAO,IAAI,cAAc,EAAE,IAAI,CAAC,CAAC;KAClE;SAAM,IAAI,CAAC,KAAK,CAAC,kBAAkB,EAAE;QACpC,WAAW,GAAG,cAAc,CAAC,EAAE,SAAS,WAAA,EAAE,QAAQ,UAAA,EAAE,KAAK,OAAA,EAAE,OAAO,SAAA,EAAE,IAAI,MAAA,EAAE,EAAE,KAAK,CAAC,CAAC;KACpF;SAAM;QACL,MAAM,IAAI,KAAK,CAAC,WAAW,mBAAK,KAAK,CAAC,QAAQ,yCAAO,KAAK,CAAC,QAAQ,UAAE,QAAQ,UAAE,CAAC,CAAC;KAClF;IAED,MAAM,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;IAE3B,OAAO,WAAW,CAAC;AACrB,CAAC,CAAC","sourcesContent":["import { getHookTree } from \"../share\";\n\nimport { effect } from \"./effect\";\nimport { MyReactHookNode } from \"./instance\";\n\nimport type { MyReactFiberNode } from \"../fiber\";\nimport type { Reducer, Action, HOOK_TYPE } from \"./instance\";\n\nconst defaultReducer: Reducer = (state?: unknown, action?: Action) => {\n  return typeof action === \"function\" ? action(state) : action;\n};\n\ntype CreateHookParams = {\n  hookIndex: number;\n  hookType: HOOK_TYPE;\n  value: unknown;\n  reducer: Reducer | null;\n  deps: unknown[];\n};\n\nexport const createHookNode = (\n  { hookIndex, hookType, value, reducer, deps }: CreateHookParams,\n  fiber: MyReactFiberNode\n) => {\n  const newHookNode = new MyReactHookNode(hookIndex, hookType, value, reducer || defaultReducer, deps);\n\n  newHookNode.setFiber(fiber);\n\n  fiber.addHook(newHookNode);\n\n  fiber.checkHook(newHookNode);\n\n  newHookNode.initialResult();\n\n  return newHookNode;\n};\n\nexport const getHookNode = (\n  { hookIndex, hookType, value, reducer, deps }: CreateHookParams,\n  fiber: MyReactFiberNode | null\n) => {\n  if (!fiber) throw new Error(\"can not use hook out of component\");\n\n  let currentHook: null | MyReactHookNode = null;\n\n  if (fiber.hookList.length > hookIndex) {\n    currentHook = fiber.hookList[hookIndex];\n\n    if (currentHook.hookType !== hookType) {\n      const array = fiber.hookType.slice(0, hookIndex);\n      throw new Error(getHookTree([...array, currentHook.hookType], [...array, hookType]));\n    }\n\n    currentHook.setFiber(fiber);\n\n    currentHook.updateResult(value, reducer || defaultReducer, deps);\n  } else if (!fiber.__isUpdateRender__) {\n    currentHook = createHookNode({ hookIndex, hookType, value, reducer, deps }, fiber);\n  } else {\n    throw new Error(getHookTree([...fiber.hookType], [...fiber.hookType, hookType]));\n  }\n\n  effect(fiber, currentHook);\n\n  return currentHook;\n};\n"]}