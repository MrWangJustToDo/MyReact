{"version":3,"file":"effect.js","sourceRoot":"","sources":["effect.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAAE,MAAM,UAAU,CAAC;AAK1C,MAAM,CAAC,IAAM,MAAM,GAAG,UAAC,KAAuB,EAAE,QAAyB;IACvE,IAAI,QAAQ,CAAC,MAAM,IAAI,CAAC,QAAQ,CAAC,iBAAiB,EAAE;QAClD,QAAQ,CAAC,iBAAiB,GAAG,IAAI,CAAC;QAElC,IAAI,QAAQ,CAAC,QAAQ,KAAK,WAAW,EAAE;YACrC,cAAc,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,EAAE;;gBAC1C,QAAQ,CAAC,MAAM,IAAI,QAAQ,CAAC,MAAM,EAAE,CAAC;gBAErC,IAAI,MAAA,QAAQ,CAAC,SAAS,0CAAE,KAAK;oBAAE,QAAQ,CAAC,MAAM,GAAG,QAAQ,CAAC,KAAK,EAAE,CAAC;gBAElE,QAAQ,CAAC,MAAM,GAAG,KAAK,CAAC;gBAExB,QAAQ,CAAC,iBAAiB,GAAG,KAAK,CAAC;YACrC,CAAC,CAAC,CAAC;SACJ;QAED,IAAI,QAAQ,CAAC,QAAQ,KAAK,iBAAiB,EAAE;YAC3C,cAAc,CAAC,OAAO,CAAC,mBAAmB,CAAC,KAAK,EAAE;;gBAChD,QAAQ,CAAC,MAAM,IAAI,QAAQ,CAAC,MAAM,EAAE,CAAC;gBAErC,IAAI,MAAA,QAAQ,CAAC,SAAS,0CAAE,KAAK;oBAAE,QAAQ,CAAC,MAAM,GAAG,QAAQ,CAAC,KAAK,EAAE,CAAC;gBAElE,QAAQ,CAAC,MAAM,GAAG,KAAK,CAAC;gBAExB,QAAQ,CAAC,iBAAiB,GAAG,KAAK,CAAC;YACrC,CAAC,CAAC,CAAC;SACJ;QAED,IAAI,QAAQ,CAAC,QAAQ,KAAK,qBAAqB,EAAE;YAC/C,cAAc,CAAC,OAAO,CAAC,mBAAmB,CAAC,KAAK,EAAE;gBAChD,IAAI,QAAQ,CAAC,KAAK,IAAI,OAAO,QAAQ,CAAC,KAAK,KAAK,QAAQ;oBAAE,QAAQ,CAAC,KAAK,CAAC,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAE/G,QAAQ,CAAC,MAAM,GAAG,KAAK,CAAC;gBAExB,QAAQ,CAAC,iBAAiB,GAAG,KAAK,CAAC;YACrC,CAAC,CAAC,CAAC;SACJ;KACF;AACH,CAAC,CAAC","sourcesContent":["import { globalDispatch } from \"../share\";\n\nimport type { MyReactFiberNode } from \"../fiber\";\nimport type { MyReactHookNode } from \"./instance\";\n\nexport const effect = (fiber: MyReactFiberNode, hookNode: MyReactHookNode) => {\n  if (hookNode.effect && !hookNode.__pendingEffect__) {\n    hookNode.__pendingEffect__ = true;\n\n    if (hookNode.hookType === \"useEffect\") {\n      globalDispatch.current.pendingEffect(fiber, () => {\n        hookNode.cancel && hookNode.cancel();\n\n        if (hookNode.__fiber__?.mount) hookNode.cancel = hookNode.value();\n\n        hookNode.effect = false;\n\n        hookNode.__pendingEffect__ = false;\n      });\n    }\n\n    if (hookNode.hookType === \"useLayoutEffect\") {\n      globalDispatch.current.pendingLayoutEffect(fiber, () => {\n        hookNode.cancel && hookNode.cancel();\n\n        if (hookNode.__fiber__?.mount) hookNode.cancel = hookNode.value();\n\n        hookNode.effect = false;\n\n        hookNode.__pendingEffect__ = false;\n      });\n    }\n\n    if (hookNode.hookType === \"useImperativeHandle\") {\n      globalDispatch.current.pendingLayoutEffect(fiber, () => {\n        if (hookNode.value && typeof hookNode.value === \"object\") hookNode.value.current = hookNode.reducer.call(null);\n\n        hookNode.effect = false;\n\n        hookNode.__pendingEffect__ = false;\n      });\n    }\n  }\n};\n"]}