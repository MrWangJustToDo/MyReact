{"version":3,"file":"feature.js","sourceRoot":"","sources":["feature.ts"],"names":[],"mappings":"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","sourcesContent":["import { createRef, currentFunctionFiber, currentHookDeepIndex, enableDebugLog, getFiberTree } from \"../share\";\n\nimport { getHookNode } from \"./create\";\n\nimport type { createContext } from \"../element\";\nimport type { Reducer } from \"./instance\";\n\nexport const useState = <T = any>(initial: T | (() => T)) => {\n  const currentHookNode = getHookNode(\n    {\n      hookIndex: currentHookDeepIndex.current++,\n      hookType: \"useState\",\n      value: typeof initial === \"function\" ? initial : () => initial,\n      reducer: null,\n      deps: [],\n    },\n    currentFunctionFiber.current\n  );\n\n  return [currentHookNode.result, currentHookNode.dispatch];\n};\n\nexport const useEffect = (action: () => any, deps: any[]) => {\n  getHookNode(\n    {\n      hookIndex: currentHookDeepIndex.current++,\n      hookType: \"useEffect\",\n      value: action,\n      reducer: null,\n      deps,\n    },\n    currentFunctionFiber.current\n  );\n};\n\nexport const useLayoutEffect = (action: () => any, deps: any[]) => {\n  getHookNode(\n    {\n      hookIndex: currentHookDeepIndex.current++,\n      hookType: \"useLayoutEffect\",\n      value: action,\n      reducer: null,\n      deps,\n    },\n    currentFunctionFiber.current\n  );\n};\n\nexport const useCallback = <T extends (...args: any[]) => any = (...args: any[]) => any>(callback: T, deps: any[]) => {\n  return getHookNode(\n    {\n      hookIndex: currentHookDeepIndex.current++,\n      hookType: \"useCallback\",\n      value: callback,\n      reducer: null,\n      deps,\n    },\n    currentFunctionFiber.current\n  ).result;\n};\n\nexport const useMemo = <T extends () => any = () => any>(action: T, deps: any[]) => {\n  return getHookNode(\n    {\n      hookIndex: currentHookDeepIndex.current++,\n      hookType: \"useMemo\",\n      value: action,\n      reducer: null,\n      deps,\n    },\n    currentFunctionFiber.current\n  ).result;\n};\n\nexport const useRef = <T = any>(value: T) => {\n  return getHookNode(\n    {\n      hookIndex: currentHookDeepIndex.current++,\n      hookType: \"useRef\",\n      value: createRef(value),\n      reducer: null,\n      deps: [],\n    },\n    currentFunctionFiber.current\n  ).result;\n};\n\nexport const useContext = (Context: ReturnType<typeof createContext>) => {\n  return getHookNode(\n    {\n      hookIndex: currentHookDeepIndex.current++,\n      hookType: \"useContext\",\n      value: Context,\n      reducer: null,\n      deps: [],\n    },\n    currentFunctionFiber.current\n  ).result;\n};\n\nexport const useReducer = (reducer: Reducer, initialArgs: any, init?: (...args: any) => any) => {\n  const currentHookNode = getHookNode(\n    {\n      hookIndex: currentHookDeepIndex.current++,\n      hookType: \"useReducer\",\n      value: typeof init === \"function\" ? () => init(initialArgs) : () => initialArgs,\n      reducer,\n      deps: [],\n    },\n    currentFunctionFiber.current\n  );\n\n  return [currentHookNode.result, currentHookNode.dispatch];\n};\n\nexport const useImperativeHandle = (ref: any, createHandle: Reducer, deps: any[]) => {\n  getHookNode(\n    {\n      hookIndex: currentHookDeepIndex.current++,\n      hookType: \"useImperativeHandle\",\n      value: ref,\n      reducer: createHandle,\n      deps,\n    },\n    currentFunctionFiber.current\n  );\n};\n\nexport const useDebugValue = (...args: any[]) => {\n  if (enableDebugLog.current) {\n    console.log(`[debug]: `, ...args, getFiberTree(currentFunctionFiber.current));\n  }\n};\n"]}