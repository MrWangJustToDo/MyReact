{"version":3,"file":"env.js","sourceRoot":"","sources":["env.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,aAAa,EAAE,MAAM,aAAa,CAAC;AAE5C,OAAO,EAAE,SAAS,EAAE,MAAM,aAAa,CAAC;AAKxC,MAAM,CAAC,IAAM,UAAU,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC;AAE3C,MAAM,CAAC,IAAM,cAAc,GAAG,SAAS,CAAgB,IAAI,aAAa,EAAE,CAAC,CAAC;AAE5E,MAAM,CAAC,IAAM,SAAS,GAAG,SAAS,CAA0B,IAAI,CAAC,CAAC;AAElE,MAAM,CAAC,IAAM,aAAa,GAAG,SAAS,CAAa,IAAI,CAAC,CAAC;AAEzD,MAAM,CAAC,IAAM,mBAAmB,GAAG,SAAS,CAA0B,IAAI,CAAC,CAAC;AAE5E,MAAM,CAAC,IAAM,oBAAoB,GAAG,SAAS,CAA0B,IAAI,CAAC,CAAC;AAE7E,MAAM,CAAC,IAAM,oBAAoB,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;AAEjD,MAAM,CAAC,IAAM,YAAY,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC;AAE7C,MAAM,CAAC,IAAM,UAAU,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC;AAE3C,uBAAuB;AACvB,MAAM,CAAC,IAAM,cAAc,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC;AAE/C,MAAM,CAAC,IAAM,iBAAiB,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC;AAEjD,uBAAuB;AACvB,MAAM,CAAC,IAAM,yBAAyB,GAAG,SAAS,CAAqB,EAAE,CAAC,CAAC;AAE3E,MAAM,CAAC,IAAM,yBAAyB,GAAG,SAAS,CAAqB,EAAE,CAAC,CAAC","sourcesContent":["import { EmptyDispatch } from \"../dispatch\";\n\nimport { createRef } from \"./createRef\";\n\nimport type { FiberDispatch } from \"../dispatch\";\nimport type { MyReactFiberNode } from \"../fiber\";\n\nexport const globalLoop = createRef(false);\n\nexport const globalDispatch = createRef<FiberDispatch>(new EmptyDispatch());\n\nexport const rootFiber = createRef<MyReactFiberNode | null>(null);\n\nexport const rootContainer = createRef<any | null>(null);\n\nexport const currentRunningFiber = createRef<MyReactFiberNode | null>(null);\n\nexport const currentFunctionFiber = createRef<MyReactFiberNode | null>(null);\n\nexport const currentHookDeepIndex = createRef(0);\n\nexport const isAppMounted = createRef(false);\n\nexport const isAppCrash = createRef(false);\n\n// ==== feature ==== //\nexport const enableDebugLog = createRef(false);\n\nexport const enableAsyncUpdate = createRef(true);\n\n// ==== running ==== //\nexport const nRoundTransformFiberArray = createRef<MyReactFiberNode[]>([]);\n\nexport const cRoundTransformFiberArray = createRef<MyReactFiberNode[]>([]);\n"]}